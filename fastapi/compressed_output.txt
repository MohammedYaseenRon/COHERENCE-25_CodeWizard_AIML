# --- source: github repository https://github.com/nanobrowser/nanobrowser --- # --- github file: contributing.md --- # contributing nanobrowser deeply appreciate interest contributing nanobrowser! every contribution helps make nanobrowser powerful accessible everyone. ## quick start 1. fork clone repository 2. create new branch (`git checkout -b feature-name`) 3. make changes 4. submit pull request ## contribute? ### reporting bugs - search existing issues first - include: - clear description - steps reproduce - environment details (os, browser version) - screenshots applicable ### suggesting enhancements - open issue clear title detailed description - explain enhancement would useful ### code contributions 1. follow existing code style 2. write clear commit messages present tense ("add feature" "added feature") 3. test changes thoroughly 4. update documentation needed 5. create pull request clear description 6. responsive feedback address review comments promptly ## license contributing, agree contributions licensed project's license terms. # --- github file: privacy.md --- # privacy policy nanobrowser ## introduction [nanobrowser](https://github.com/nanobrowser/nanobrowser) open-source ai web automation tool runs browser chrome extension. privacy policy explains nanobrowser handles data protects privacy. ## open source commitment nanobrowser open-source project licensed apache license 2.0. source code publicly available [github repository](https://github.com/nanobrowser/nanobrowser), ensuring complete transparency application functions processes data. ## data collection processing ### local processing - nanobrowser operates entirely within browser chrome extension. - login credentials browser cookies never extracted transmitted outside browser. - user data collected, stored, processed nanobrowser developers. ### llm provider interactions - using nanobrowser's ai features, web page data (including screenshots html content) sent directly large language model (llm) provider chosen. - data transmission necessary ai functionality work properly. - third-party platforms besides selected llm provider access data. - data privacy subject privacy policies chosen llm provider. ## api keys - nanobrowser requires provide api keys llm providers. - api keys stored locally browser never transmitted nanobrowser servers. - responsible managing securing api keys according llm provider's terms service. ## user control rights - complete control data within nanobrowser. - clear conversation history settings time extension interface. - uninstall extension remove locally stored data. ## changes privacy policy may update privacy policy time time reflect changes practices operational, legal, regulatory reasons. encourage review privacy policy periodically. ## contact us questions concerns privacy policy, please contact us cws@felight.xyz last updated: march 5, 2025 # --- github file: readme.md --- <h1 align="center"> <img src="https://github.com/user-attachments/assets/ec60b0c4-87ba-48f4-981a-c55ed0e8497b" height="100" width="375" alt="banner" /><br> </h1> <div align="center"> [![github](https://img.shields.io/badge/github-181717?style=for-the-badge&logo=github&logocolor=white)](https://github.com/nanobrowser) [![twitter](https://img.shields.io/badge/twitter-000000?style=for-the-badge&logo=x&logocolor=white)](https://x.com/nanobrowser_ai) [![discord](https://img.shields.io/badge/discord-5865f2?style=for-the-badge&logo=discord&logocolor=white)](https://discord.gg/nn3abhggmk) </div> ## nanobrowser nanobrowser open-source ai web automation tool runs browser. free alternative openai operator flexible llm options multi-agent system. get [nanobrowser chrome web store](https://chromewebstore.google.com/detail/nanobrowser/imbddededgmcgfhfpcjmijokokekbkal) free join community [discord](https://discord.gg/nn3abhggmk) | [x](https://x.com/nanobrowser_ai) loving nanobrowser? give us star help spread word! <div align="center"> <img src="https://github.com/user-attachments/assets/112c4385-7b03-4b81-a352-4f348093351b" width="600" alt="nanobrowser demo gif" /> <p><em>nanobrowser's multi-agent system analyzing huggingface real-time, planner intelligently self-correcting encountering obstacles dynamically instructing navigator adjust approachall running locally browser.</em></p> </div> ## nanobrowser? looking powerful ai web agent without $200/month price tag openai operator? **nanobrowser** , chrome extension, delivers premium web automation capabilities keeping complete control: - **100% free** - subscription fees hidden costs. install use api keys, pay use api keys. - **privacy-focused** - everything runs local browser. credentials stay you, never shared cloud service. - **flexible llm options** - connect preferred llm providers freedom choose different models different agents. - **fully open source** - complete transparency browser automated. black boxes hidden processes. > **note:** currently support openai, anthropic, gemini, ollama custom openai-compatible providers, providers supported. ## key features - **multi-agent system**: specialized ai agents collaborate accomplish complex web workflows - **interactive side panel**: intuitive chat interface real-time status updates - **task automation**: seamlessly automate repetitive web automation tasks across websites - **follow-up questions**: ask contextual follow-up questions completed tasks - **conversation history**: easily access manage ai agent interaction history - **multiple llm support**: connect preferred llm providers assign different models different agents ## quick start 1. **install chrome web store** (stable version): * visit [nanobrowser chrome web store page](https://chromewebstore.google.com/detail/nanobrowser/imbddededgmcgfhfpcjmijokokekbkal) * click "add chrome" button * confirm installation prompted > **important note**: latest features, install ["manually install latest version"](#-manually-install-latest-version) below, chrome web store version may delayed due review process. 2. **configure agent models**: * click nanobrowser icon toolbar open sidebar * click `settings` icon (top right) * add llm api keys * choose model use different agents (navigator, planner, validator) ## manually install latest version get recent version latest features: 1. **download** * download latest `nanobrowser.zip` file official github [release page](https://github.com/nanobrowser/nanobrowser/releases). 2. **install**: * unzip `nanobrowser.zip`. * open `chrome://extensions/` chrome * enable `developer mode` (top right) * click `load unpacked` (top left) * select unzipped `nanobrowser` folder. 3. **configure agent models** * click nanobrowser icon toolbar open sidebar * click `settings` icon (top right). * add llm api keys. * choose model use different agents (navigator, planner, validator) 4. **upgrading**: * download latest `nanobrowser.zip` file release page. * unzip replace existing nanobrowser files new ones. * go `chrome://extensions/` chrome click refresh icon nanobrowser card. ## build source prefer build nanobrowser yourself, follow steps: 1. **prerequisites**: * [node.js](https://nodejs.org/) (v22.12.0 higher) * [pnpm](https://pnpm.io/installation) (v9.15.1 higher) 2. **clone repository**: ```bash git clone https://github.com/nanobrowser/nanobrowser.git cd nanobrowser ``` 3. **install dependencies**: ```bash pnpm install ``` 4. **build extension**: ```bash pnpm build ``` 5. **load extension**: * built extension `dist` directory * follow installation steps manually install section load extension browser 6. **development mode** (optional): ```bash pnpm dev ``` ## choosing models nanobrowser allows configure different llm models agent balance performance cost. recommended configurations: ### better performance - **planner & validator**: claude 3.7 sonnet - better reasoning planning capabilities - reliable task validation - **navigator**: claude 3.5 haiku - efficient web navigation tasks - good balance performance cost ### cost-effective configuration - **planner & validator**: claude haiku gpt-4o - reasonable performance lower cost - may require iterations complex tasks - **navigator**: gemini 2.0 flash gpt-4o-mini - lightweight cost-efficient - suitable basic navigation tasks ### local models - **setup options**: - use ollama custom openai-compatible providers run models locally - zero api costs complete privacy data leaving machine - **recommended models**: - **falcon3 10b** - **qwen 2.5 coder 14b** - **mistral small 24b** - welcome community experience sharing local models [discord](https://discord.gg/nn3abhggmk) - **prompt engineering**: - local models require specific cleaner prompts - avoid high-level, ambiguous commands - break complex tasks clear, detailed steps - provide explicit context constraints > **note**: cost-effective configuration may produce less stable outputs require iterations complex tasks. > **tip**: feel free experiment model configurations! found great combination? share community [discord](https://discord.gg/nn3abhggmk) help others optimize setup. ## see action powerful tasks accomplish sentence: 1. **news summary**: > "go techcrunch extract top 10 headlines last 24 hours" 2. **github research**: > "look trending python repositories github stars" 3. **shopping research**: > "find portable bluetooth speaker amazon water-resistant design, $50. minimum battery life 10 hours" ## roadmap actively developing nanobrowser exciting features horizon, welcome join us! check detailed roadmap upcoming features [github discussions](https://github.com/nanobrowser/nanobrowser/discussions/85). ## contributing **we need help make nanobrowser even better!** contributions kinds welcome: * **share prompts & use cases** * join [discord server](https://discord.gg/nn3abhggmk). * share using nanobrowser. help us build library useful prompts real-world use cases. * **provide feedback** * try nanobrowser give us feedback performance suggest improvements [discord server](https://discord.gg/nn3abhggmk). * **contribute code** * check [contributing.md](contributing.md) guidelines contribute code project. * submit pull requests bug fixes, features, documentation improvements. believe power open source community collaboration. join us building future web automation! ## security discover security vulnerability, please **do not** disclose publicly issues, pull requests, discussions. instead, please create [github security advisory](https://github.com/nanobrowser/nanobrowser/security/advisories/new) report vulnerability responsibly. allows us address issue publicly disclosed. appreciate help keeping nanobrowser users safe! ## community join growing community developers users: - [discord](https://discord.gg/nn3abhggmk) - chat team community - [twitter](https://x.com/nanobrowser_ai) - follow updates announcements - [github discussions](https://github.com/nanobrowser/nanobrowser/discussions) - share ideas ask questions ## acknowledgments nanobrowser builds top awesome open-source projects: - [browser use](https://github.com/browser-use/browser-use) - [puppeteer](https://github.com/emergenceai/agent-e) - [chrome extension boilerplate](https://github.com/jonghakseo/chrome-extension-boilerplate-react-vite) - [langchain](https://github.com/langchain-ai/langchainjs) huge thanks creators contributors! ## license project licensed apache license 2.0 - see [license](license) file details. made nanobrowser team. like nanobrowser? give us star join us [discord](https://discord.gg/nn3abhggmk) | [x](https://x.com/nanobrowser_ai) # --- github file: security.md --- # security policy ## reporting vulnerability please create [github security advisory](https://github.com/nanobrowser/nanobrowser/security/advisories/new) # --- github file: update-package-versions.md --- update package version ```package.json``` files use command root: windows need use e.g ```git bash``` console support unix commands ```bash pnpm update-version <new_version> ``` script run successfully see ```updated versions <new_version>``` # --- github file: chrome-extension/package.json --- { "name": "chrome-extension", "version": "0.1.4", "description": "chrome extension - core settings", "type": "module", "scripts": { "clean:node_modules": "pnpx rimraf node_modules", "clean:turbo": "rimraf .turbo", "clean": "pnpm clean:turbo && pnpm clean:node_modules", "build": "vite build", "dev": "cross-env __dev__=true vite build --mode development", "test": "vitest run", "lint": "eslint ./ --ext .ts,.js,.tsx,.jsx", "lint:fix": "pnpm lint --fix", "prettier": "prettier . --write --ignore-path ../.prettierignore", "type-check": "tsc --noemit" }, "dependencies": { "@extension/shared": "workspace:*", "@extension/storage": "workspace:*", "@langchain/anthropic": "^0.3.12", "@langchain/core": "^0.3.37", "@langchain/deepseek": "^0.0.1", "@langchain/google-genai": "0.1.11", "@langchain/ollama": "^0.2.0", "@langchain/openai": "^0.4.2", "@langchain/xai": "^0.0.2", "puppeteer-core": "24.1.1", "webextension-polyfill": "^0.12.0", "zod": "^3.24.1", "zod-to-json-schema": "^3.24.4" }, "overrides": { "@langchain/core": "0.3.0" }, "devdependencies": { "@extension/dev-utils": "workspace:*", "@extension/hmr": "workspace:*", "@extension/tsconfig": "workspace:*", "@extension/vite-config": "workspace:*", "@laynezh/vite-plugin-lib-assets": "^0.6.1", "@types/ws": "^8.5.13", "cross-env": "^7.0.3", "deepmerge": "^4.3.1", "magic-string": "^0.30.10", "ts-loader": "^9.5.1" } } # --- github file: chrome-extension/tsconfig.json --- { "extends": "@extension/tsconfig/app", "compileroptions": { "baseurl": ".", "paths": { "@src/*": ["src/*"] } }, "include": ["src", "utils", "vite.config.mts", "../node_modules/@types"] } # --- github file: package.json --- { "name": "nanobrowser", "version": "0.1.4", "description": "ai web automation tool", "license": "apache-2.0", "repository": { "type": "git", "url": "https://github.com/nanobrowser/nanobrowser.git" }, "type": "module", "scripts": { "clean:bundle": "rimraf dist && turbo clean:bundle", "clean:node_modules": "pnpx rimraf node_modules && pnpx turbo clean:node_modules", "clean:turbo": "rimraf .turbo && turbo clean:turbo", "clean": "pnpm clean:bundle && pnpm clean:turbo && pnpm clean:node_modules", "clean:install": "pnpm clean:node_modules && pnpm install --frozen-lockfile", "build": "pnpm clean:bundle && turbo ready && turbo build", "build:firefox": "pnpm clean:bundle && turbo ready && cross-env __firefox__=true turbo build", "zip": "pnpm build && pnpm -f zipper zip", "zip:firefox": "pnpm build:firefox && cross-env __firefox__=true pnpm -f zipper zip", "dev": "turbo ready && cross-env __dev__=true turbo watch dev --concurrency 20", "dev:firefox": "turbo ready && cross-env __dev__=true __firefox__=true turbo watch dev --concurrency 20", "e2e": "pnpm build && pnpm zip && turbo e2e", "e2e:firefox": "pnpm build:firefox && pnpm zip:firefox && cross-env __firefox__=true turbo e2e", "type-check": "turbo type-check", "lint": "turbo lint --continue -- --fix --cache --cache-location node_modules/.cache/.eslintcache", "lint:fix": "turbo lint:fix --continue -- --fix --cache --cache-location node_modules/.cache/.eslintcache", "prettier": "turbo prettier --continue -- --cache --cache-location node_modules/.cache/.prettiercache", "prepare": "husky", "update-version": "bash update_version.sh" }, "dependencies": { "eslint-plugin-tailwindcss": "^3.17.4", "react": "18.3.1", "react-dom": "18.3.1" }, "devdependencies": { "@types/chrome": "^0.0.270", "@types/node": "^22.5.5", "@types/react": "^18.3.3", "@types/react-dom": "^18.3.0", "@typescript-eslint/eslint-plugin": "^7.18.0", "@typescript-eslint/parser": "^7.18.0", "autoprefixer": "^10.4.20", "cross-env": "^7.0.3", "esbuild": "^0.25.1", "eslint": "8.57.0", "eslint-config-airbnb-typescript": "18.0.0", "eslint-config-prettier": "9.1.0", "eslint-plugin-import": "2.29.1", "eslint-plugin-jsx-a11y": "6.9.0", "eslint-plugin-prettier": "5.2.4", "eslint-plugin-react": "7.35.2", "eslint-plugin-react-hooks": "4.6.2", "husky": "^9.1.4", "lint-staged": "^15.2.7", "postcss": "^8.4.47", "prettier": "^3.3.3", "rimraf": "^6.0.1", "tailwindcss": "^3.4.17", "tslib": "^2.6.3", "typescript": "5.5.4", "turbo": "^2.3.3", "vite": "6.0.12", "run-script-os": "^1.1.6" }, "lint-staged": { "*.{js,jsx,ts,tsx,json}": [ "prettier --write" ] }, "packagemanager": "pnpm@9.15.1", "engines": { "node": ">=22.12.0" }, "pnpm": { "overrides": { "cross-spawn": "^7.0.5", "esbuild": "^0.25.1", "nanoid": "3.3.11" } } } # --- github file: packages/dev-utils/package.json --- { "name": "@extension/dev-utils", "version": "0.1.4", "description": "chrome extension - dev utils", "private": true, "sideeffects": false, "files": [ "dist/**" ], "main": "dist/index.js", "module": "dist/index.js", "types": "index.ts", "scripts": { "clean:bundle": "rimraf dist", "clean:node_modules": "pnpx rimraf node_modules", "clean:turbo": "rimraf .turbo", "clean": "pnpm clean:bundle && pnpm clean:node_modules && pnpm clean:turbo", "ready": "tsc", "lint": "eslint . --ext .ts,.tsx", "lint:fix": "pnpm lint --fix", "prettier": "prettier . --write --ignore-path ../../.prettierignore", "type-check": "tsc --noemit" }, "devdependencies": { "@extension/tsconfig": "workspace:*", "@extension/shared": "workspace:*" } } # --- github file: packages/dev-utils/tsconfig.json --- { "extends": "@extension/tsconfig/utils", "compileroptions": { "baseurl": ".", "outdir": "dist", "types": ["chrome"] }, "include": ["index.ts", "lib"] } # --- github file: packages/hmr/package.json --- { "name": "@extension/hmr", "version": "0.1.4", "description": "chrome extension - hot module reload/refresh", "private": true, "sideeffects": true, "files": [ "dist/**" ], "main": "dist/index.js", "module": "dist/index.js", "types": "index.ts", "scripts": { "clean:bundle": "rimraf dist && pnpx rimraf build", "clean:node_modules": "pnpx rimraf node_modules", "clean:turbo": "rimraf .turbo", "clean": "pnpm clean:bundle && pnpm clean:node_modules && pnpm clean:turbo", "build:tsc": "tsc -b tsconfig.build.json", "build:rollup": "rollup --config rollup.config.mjs", "ready": "pnpm run build:tsc && pnpm run build:rollup", "dev": "node dist/lib/initializers/initreloadserver.js", "lint": "eslint . --ext .ts,.tsx", "lint:fix": "pnpm lint --fix", "prettier": "prettier . --write --ignore-path ../../.prettierignore", "type-check": "tsc --noemit" }, "devdependencies": { "@extension/tsconfig": "workspace:*", "@rollup/plugin-sucrase": "^5.0.2", "@types/ws": "^8.5.13", "esm": "^3.2.25", "fast-glob": "^3.3.2", "rollup": "^4.24.0", "ts-node": "^10.9.2", "ws": "8.18.0" } } # --- github file: packages/hmr/tsconfig.build.json --- { "extends": "@extension/tsconfig/utils", "compileroptions": { "baseurl": ".", "outdir": "dist", "types": ["chrome"] }, "exclude": ["lib/injections/**/*"], "include": ["lib", "index.ts"] } # --- github file: packages/hmr/tsconfig.json --- { "extends": "@extension/tsconfig/utils", "compileroptions": { "baseurl": ".", "outdir": "dist", "types": ["chrome"] }, "include": ["lib", "index.ts", "rollup.config.mjs"] } # --- github file: packages/i18n/readme.md --- # i18n package package provides set tools help internationalize chrome extension. https://developer.chrome.com/docs/extensions/reference/api/i18n ## installation want use i18n translation function pages, need add following package.json file. ```json { "dependencies": { "@extension/i18n": "workspace:*" } } ``` run following command install package. ```bash pnpm install ``` ## manage translations manage translations `locales` directory. `locales/en/messages.json` ```json { "helloworld": { "message": "hello, world!" } } ``` `locales/ko/messages.json` ```json { "helloworld": { "message": ", !" } } ``` ## delete add new language want delete add new language, need edit util files like `lib/types.ts` `lib/getmessagefromlocale.ts`. that's provide script generate util files automatically `generate-i18n.mjs` file. following steps delete add new language. ### delete language want delete unused languages, delete corresponding directory `locales` directory. ``` locales en messages.json ko // delete directory messages.json ``` run following command. (or run `pnpm dev` `pnpm build` root) ```bash pnpm genenrate-i8n ``` ### add new language want add new language, create new directory `locales` directory. ``` locales en messages.json ko messages.json ja // create directory messages.json // create file ``` above, run following command. (or run `pnpm dev` `pnpm build` root) ```bash pnpm genenrate-i8n ``` ## usage ### translation function import `t` function use translate key. ```typescript import { } '@extension/i18n'; console.log(t('loading')); // loading... ``` ```typescript jsx import { } '@extension/i18n'; const component = () => { return ( <button> {t('toggletheme')} // toggle theme </button> ); }; ``` ### placeholders want use placeholders, use following format. > information, see [message placeholders](https://developer.chrome.com/docs/extensions/how-to/ui/localization-message-formats#placeholders) section. `locales/en/messages.json` ```json { "greeting": { "description": "greeting message", "message": "hello, name $name$", "placeholders": { "name": { "content": "$1", "example": "john doe" } } }, "hello": { "description": "placeholder example", "message": "hello $1" } } ``` `locales/ko/messages.json` ```json { "greeting": { "description": " ", "message": ", $name$.", "placeholders": { "name": { "content": "$1", "example": "" } } }, "hello": { "description": "placeholder ", "message": " $1" } } ``` want replace placeholder, pass value second argument. function `t` exactly interface `chrome.i18n.getmessage` function. ```typescript import { } '@extension/i18n'; console.log(t('greeting', 'john doe')); // hello, name john doe console.log(t('greeting', ['john doe'])); // hello, name john doe console.log(t('hello')); // hello console.log(t('hello', 'world')); // hello world console.log(t('hello', ['world'])); // hello world ``` ### locale setting development want show specific language, set `devlocale` property. (only development) ```typescript import { } '@extension/i18n'; t.devlocale = "ko"; console.log(t('hello')); // ``` ### type safety forget add key language's `messages.json` files, get typescript error. `locales/en/messages.json` ```json { "hello": { "message": "hello world!" } } ``` `locales/ko/messages.json` ```json { "helloworld": { "message": ", !" } } ``` ```typescript import { } '@extension/i18n'; // error: ts2345: argument type "hello" assignable parameter type console.log(t('hello')); ``` # --- github file: packages/i18n/locales/en/messages.json --- { "extensiondescription": { "description": "extension description", "message": "automate web tasks ai! nanobrowser open-source chrome extension lets extract data, fill forms, more." }, "extensionname": { "description": "extension name", "message": "nanobrowser: ai web agent & automation" }, "toggletheme": { "message": "toggle theme" }, "loading": { "message": "loading..." }, "greeting": { "description": "greeting message", "message": "hello, name $name$", "placeholders": { "name": { "content": "$1", "example": "john doe" } } }, "hello": { "description": "placeholder example", "message": "hello $1" } } # --- github file: packages/i18n/package.json --- { "name": "@extension/i18n", "version": "0.1.4", "description": "chrome extension - internationalization", "private": true, "sideeffects": false, "files": [ "dist/**" ], "types": "index.ts", "main": "./dist/index.js", "scripts": { "clean:bundle": "rimraf dist", "clean:node_modules": "pnpx rimraf node_modules", "clean:turbo": "rimraf .turbo", "clean": "pnpm clean:bundle && pnpm clean:node_modules && pnpm clean:turbo", "genenrate-i8n": "node genenrate-i18n.mjs", "ready": "pnpm genenrate-i8n && node build.dev.mjs", "build": "pnpm genenrate-i8n && node build.prod.mjs", "lint": "eslint . --ext .ts,.tsx", "lint:fix": "pnpm lint --fix", "prettier": "prettier . --write --ignore-path ../../.prettierignore", "type-check": "tsc --noemit" }, "devdependencies": { "@extension/tsconfig": "workspace:*", "@extension/hmr": "workspace:*" } } # --- github file: packages/i18n/tsconfig.json --- { "extends": "@extension/tsconfig/utils", "compileroptions": { "baseurl": ".", "outdir": "dist", "types": ["chrome"] }, "include": ["index.ts", "lib", "locales"] } # --- github file: packages/schema-utils/readme.md --- # tool utils package contains json schema definitions related helpers tools used across extension. ## contents - json schema definitions navigator output - utility functions schema flattening, conversion formatting ## examples `examples/` directory contains runnable examples demonstrate package's functionality: 1. **flatten.ts** - demonstrates flatten json schema dereferencing `$ref` fields 2. **convert.ts** - shows convert openai-compatible schema gemini format run examples: ```bash # run schema flattening example pnpm --filter @extension/schema-utils example:flatten # run schema conversion example pnpm --filter @extension/schema-utils example:convert ``` # --- github file: packages/schema-utils/package.json --- { "name": "@extension/schema-utils", "version": "0.1.4", "description": "json schema related helpers tools", "private": true, "type": "module", "sideeffects": false, "files": [ "dist/**" ], "types": "index.ts", "main": "./dist/index.js", "scripts": { "clean:bundle": "rimraf dist", "clean:node_modules": "pnpx rimraf node_modules", "clean:turbo": "rimraf .turbo", "clean": "pnpm clean:bundle && pnpm clean:node_modules && pnpm clean:turbo", "ready": "node build.mjs", "lint": "eslint . --ext .ts,.tsx", "lint:fix": "pnpm lint --fix", "prettier": "prettier . --write --ignore-path ../../.prettierignore", "type-check": "tsc --noemit", "example:convert": "pnpm run ready && node dist/examples/convert.js", "example:flatten": "pnpm run ready && node dist/examples/flatten.js" }, "devdependencies": { "@extension/tsconfig": "workspace:*" } } # --- github file: packages/schema-utils/tsconfig.json --- { "extends": "@extension/tsconfig/base.json", "include": ["./**/*.ts", "./**/*.tsx"], "exclude": ["node_modules", "dist"] } # --- github file: packages/shared/readme.md --- # shared package package contains code shared packages. use code package, need add following package.json file. ```json { "dependencies": { "@extension/shared": "workspace:*" } } ``` # --- github file: packages/shared/package.json --- { "name": "@extension/shared", "version": "0.1.4", "description": "chrome extension - shared code", "private": true, "sideeffects": false, "files": [ "dist/**" ], "types": "index.ts", "main": "./dist/index.js", "scripts": { "clean:bundle": "rimraf dist", "clean:node_modules": "pnpx rimraf node_modules", "clean:turbo": "rimraf .turbo", "clean": "pnpm clean:bundle && pnpm clean:node_modules && pnpm clean:turbo", "ready": "node build.mjs", "lint": "eslint . --ext .ts,.tsx", "lint:fix": "pnpm lint --fix", "prettier": "prettier . --write --ignore-path ../../.prettierignore", "type-check": "tsc --noemit" }, "devdependencies": { "@extension/storage": "workspace:*", "@extension/tsconfig": "workspace:*" } } # --- github file: packages/shared/tsconfig.json --- { "extends": "@extension/tsconfig/utils", "compileroptions": { "baseurl": ".", "outdir": "dist", "types": ["chrome"] }, "include": ["index.ts", "lib"] } # --- github file: packages/storage/package.json --- { "name": "@extension/storage", "version": "0.1.4", "description": "chrome extension - storage", "private": true, "sideeffects": false, "files": [ "dist/**" ], "main": "./dist/index.js", "types": "index.ts", "scripts": { "clean:bundle": "rimraf dist", "clean:node_modules": "pnpx rimraf node_modules", "clean:turbo": "rimraf .turbo", "clean": "pnpm clean:bundle && pnpm clean:node_modules && pnpm clean:turbo", "ready": "node build.mjs", "lint": "eslint . --ext .ts,.tsx", "lint:fix": "pnpm lint --fix", "prettier": "prettier . --write --ignore-path ../../.prettierignore", "type-check": "tsc --noemit" }, "devdependencies": { "@extension/tsconfig": "workspace:*" } } # --- github file: packages/storage/tsconfig.json --- { "extends": "@extension/tsconfig/utils", "compileroptions": { "baseurl": ".", "outdir": "dist", "types": ["chrome"] }, "include": ["index.ts", "lib"] } # --- github file: packages/tailwind-config/package.json --- { "name": "@extension/tailwindcss-config", "version": "0.1.4", "description": "chrome extension - tailwindcss configuration", "main": "tailwind.config.ts", "private": true } # --- github file: packages/tsconfig/app.json --- { "$schema": "https://json.schemastore.org/tsconfig", "display": "chrome extension app", "extends": "./base.json" } # --- github file: packages/tsconfig/base.json --- { "$schema": "https://json.schemastore.org/tsconfig", "display": "base", "compileroptions": { "allowjs": true, "noemit": true, "module": "esnext", "downleveliteration": true, "isolatedmodules": true, "strict": true, "noimplicitany": true, "strictnullchecks": true, "moduleresolution": "node", "allowsyntheticdefaultimports": true, "esmoduleinterop": true, "skiplibcheck": true, "forceconsistentcasinginfilenames": true, "resolvejsonmodule": true, "noimplicitreturns": true, "jsx": "react-jsx", "lib": ["dom", "esnext"] } } # --- github file: packages/tsconfig/package.json --- { "name": "@extension/tsconfig", "version": "0.1.4", "description": "chrome extension - tsconfig", "private": true } # --- github file: packages/tsconfig/utils.json --- { "$schema": "https://json.schemastore.org/tsconfig", "display": "chrome extension utils", "extends": "./base.json", "compileroptions": { "noemit": false, "declaration": true, "module": "commonjs", "moduleresolution": "node", "target": "es6", "types": ["node"] } } # --- github file: packages/ui/readme.md --- # ui package package provides components make ui. ## installation first, move page want use. ```shell cd pages/options ``` add following dependencies `package.json`. ```json { "dependencies": { "@extension/ui": "workspace:*" } } ``` then, run `pnpm install`. ```shell pnpm install ``` add following `tailwind.config.ts` file. ```ts import baseconfig '@extension/tailwindcss-config'; import { withui } '@extension/ui'; export default withui({ ...baseconfig, content: ['./index.html', './src/**/*.{js,ts,jsx,tsx}'], }); ``` add following `index.tsx` file. ```tsx import '@extension/ui/dist/global.css'; ``` ## add component add following `lib/components/index.ts` file. ```tsx export * './button'; ``` add following `lib/components/button.tsx` file. ```tsx import { componentpropswithoutref } 'react'; import { cn } '../utils'; export type buttonprops = { theme?: 'light' | 'dark'; } & componentpropswithoutref<'button'>; export function button({ theme, classname, children, ...props }: buttonprops) { return ( <button classname={cn( classname, 'mt-4 py-1 px-4 rounded shadow hover:scale-105', theme === 'light' ? 'bg-white text-black' : 'bg-black text-white', )} {...props}> {children} </button> ); } ``` ## usage ```tsx import { button } '@extension/ui'; export default function togglebutton() { const [theme, settheme] = usestate<'light' | 'dark'>('light'); const toggle = () => { settheme(theme === 'light' ? 'dark' : 'light'); }; return ( <button theme={theme} onclick={toggle}> toggle </button> ); } ``` ## modifying tailwind config ui library modify `tailwind.config.ts` file make global style changes package. ## modifying css variable ui library modify css variable `ui/lib/global.css` code change css variable package. ## guide adding shadcn ui package refer [manual guide](https://ui.shadcn.com/docs/installation/manual) 1. create components.json packages/ui create file named `components.json` `packages/ui` directory following content: ```json { "$schema": "https://ui.shadcn.com/schema.json", "style": "default", "rsc": false, "tsx": true, "tailwind": { "config": "tailwind.config.ts", "css": "lib/global.css", "basecolor": "neutral", "cssvariables": true, "prefix": "" }, "aliases": { "components": "@/lib/components", "utils": "@/lib/utils", "ui": "@/lib/components/ui", "lib": "@/lib" } } ``` 2. install dependencies run following command root project: ```shell pnpm add tailwindcss-animate class-variance-authority -f ui ``` 3. edit `withui.ts` `lib` folder configuration file manual guide. refer manual guide modify configuration file. ([`configure tailwind.config.js`](https://ui.shadcn.com/docs/installation/manual)) ```ts import deepmerge 'deepmerge'; import type { config } 'tailwindcss/types/config'; import { fontfamily } 'tailwindcss/defaulttheme'; import tailwindanimate 'tailwindcss-animate'; export function withui(tailwindconfig: config): config { return deepmerge( shadcnconfig, deepmerge(tailwindconfig, { content: ['./node_modules/@extension/ui/lib/**/*.{tsx,ts,js,jsx}'], }), ); } const shadcnconfig = { darkmode: ['class'], theme: { container: { center: true, padding: '2rem', screens: { '2xl': '1400px', }, }, extend: { colors: { border: 'hsl(var(--border))', input: 'hsl(var(--input))', ring: 'hsl(var(--ring))', background: 'hsl(var(--background))', foreground: 'hsl(var(--foreground))', primary: { default: 'hsl(var(--primary))', foreground: 'hsl(var(--primary-foreground))', }, secondary: { default: 'hsl(var(--secondary))', foreground: 'hsl(var(--secondary-foreground))', }, destructive: { default: 'hsl(var(--destructive))', foreground: 'hsl(var(--destructive-foreground))', }, muted: { default: 'hsl(var(--muted))', foreground: 'hsl(var(--muted-foreground))', }, accent: { default: 'hsl(var(--accent))', foreground: 'hsl(var(--accent-foreground))', }, popover: { default: 'hsl(var(--popover))', foreground: 'hsl(var(--popover-foreground))', }, card: { default: 'hsl(var(--card))', foreground: 'hsl(var(--card-foreground))', }, }, borderradius: { lg: `var(--radius)`, md: `calc(var(--radius) - 2px)`, sm: 'calc(var(--radius) - 4px)', }, fontfamily: { sans: ['var(--font-sans)', ...fontfamily.sans], }, keyframes: { 'accordion-down': { from: { height: '0' }, to: { height: 'var(--radix-accordion-content-height)' }, }, 'accordion-up': { from: { height: 'var(--radix-accordion-content-height)' }, to: { height: '0' }, }, }, animation: { 'accordion-down': 'accordion-down 0.2s ease-out', 'accordion-up': 'accordion-up 0.2s ease-out', }, }, }, plugins: [tailwindanimate], }; ``` 4. edit `global.css` `lib` folder configuration also comes manual guide. refer manual guide modify configuration file. ([`configure styles`](https://ui.shadcn.com/docs/installation/manual)) ```css @tailwind base; @tailwind components; @tailwind utilities; @layer base { :root { --background: 0 0% 100%; --foreground: 222.2 47.4% 11.2%; --muted: 210 40% 96.1%; --muted-foreground: 215.4 16.3% 46.9%; --popover: 0 0% 100%; --popover-foreground: 222.2 47.4% 11.2%; --border: 214.3 31.8% 91.4%; --input: 214.3 31.8% 91.4%; --card: 0 0% 100%; --card-foreground: 222.2 47.4% 11.2%; --primary: 222.2 47.4% 11.2%; --primary-foreground: 210 40% 98%; --secondary: 210 40% 96.1%; --secondary-foreground: 222.2 47.4% 11.2%; --accent: 210 40% 96.1%; --accent-foreground: 222.2 47.4% 11.2%; --destructive: 0 100% 50%; --destructive-foreground: 210 40% 98%; --ring: 215 20.2% 65.1%; --radius: 0.5rem; } .dark { --background: 224 71% 4%; --foreground: 213 31% 91%; --muted: 223 47% 11%; --muted-foreground: 215.4 16.3% 56.9%; --accent: 216 34% 17%; --accent-foreground: 210 40% 98%; --popover: 224 71% 4%; --popover-foreground: 215 20.2% 65.1%; --border: 216 34% 17%; --input: 216 34% 17%; --card: 224 71% 4%; --card-foreground: 213 31% 91%; --primary: 210 40% 98%; --primary-foreground: 222.2 47.4% 1.2%; --secondary: 222.2 47.4% 11.2%; --secondary-foreground: 210 40% 98%; --destructive: 0 63% 31%; --destructive-foreground: 210 40% 98%; --ring: 216 34% 17%; --radius: 0.5rem; } } @layer base { * { @apply border-border; } body { @apply bg-background text-foreground; font-feature-settings: "rlig" 1, "calt" 1; } } ``` 5. add shadcn components finally, run command root project add button component: ```shell pnpm dlx shadcn@latest add button -c ./packages/ui ``` add shadcn button component ui package. remember adjust paths package names project structure differs assumed layout guide. 6. export components make `index.ts` file `components/ui` directory export button component: ```ts export * './button'; ``` edit `index.ts` file `packages/ui` directory export shadcn ui component: ```ts // export * './lib/components'; // remove line: duplicated button component export * './lib/components/ui'; ``` # --- github file: packages/ui/package.json --- { "name": "@extension/ui", "version": "0.1.4", "description": "chrome extension - ui components", "private": true, "sideeffects": false, "type": "module", "files": [ "dist/**", "dist/global.css" ], "types": "index.ts", "main": "./dist/index.js", "scripts": { "clean:bundle": "rimraf dist", "clean:node_modules": "pnpx rimraf node_modules", "clean:turbo": "rimraf .turbo", "clean": "pnpm clean:bundle && pnpm clean:node_modules && pnpm clean:turbo", "ready": "node build.mjs", "lint": "eslint . --ext .ts,.tsx", "lint:fix": "pnpm lint --fix", "prettier": "prettier . --write", "type-check": "tsc --noemit" }, "devdependencies": { "@extension/tsconfig": "workspace:*", "deepmerge": "^4.3.1", "tsc-alias": "^1.8.10" }, "dependencies": { "clsx": "^2.1.1", "tailwind-merge": "^2.4.0" } } # --- github file: packages/ui/tsconfig.json --- { "extends": "@extension/tsconfig/utils", "compileroptions": { "outdir": "dist", "baseurl": ".", "types": ["chrome"], "paths": { "@/*": ["./*"] } }, "include": ["index.ts", "lib"] } # --- github file: packages/vite-config/package.json --- { "name": "@extension/vite-config", "version": "0.1.4", "description": "chrome extension - vite base configuration", "main": "index.mjs", "type": "module", "private": true, "scripts": { "clean:node_modules": "pnpx rimraf node_modules", "clean": "pnpm clean:node_modules" }, "devdependencies": { "@extension/hmr": "workspace:*", "@extension/tsconfig": "workspace:*", "@vitejs/plugin-react-swc": "^3.7.2", "deepmerge": "^4.3.1" } } # --- github file: packages/zipper/package.json --- { "name": "@extension/zipper", "version": "0.1.4", "description": "chrome extension - zipper", "private": true, "sideeffects": false, "files": [ "dist/**" ], "main": "dist/index.js", "module": "dist/index.js", "types": "index.ts", "scripts": { "clean:bundle": "rimraf dist", "clean:node_modules": "pnpx rimraf node_modules", "clean:turbo": "rimraf .turbo", "clean": "pnpm clean:bundle && pnpm clean:node_modules && pnpm clean:turbo", "zip": "tsx index.ts", "ready": "tsc", "lint": "eslint . --ext .ts,.tsx", "lint:fix": "pnpm lint --fix", "prettier": "prettier . --write --ignore-path ../../.prettierignore", "type-check": "tsc --noemit" }, "devdependencies": { "@extension/tsconfig": "workspace:*", "fast-glob": "^3.3.2", "fflate": "^0.8.2", "tsx": "^4.19.2" } } # --- github file: packages/zipper/tsconfig.json --- { "extends": "@extension/tsconfig/utils", "compileroptions": { "baseurl": ".", "outdir": "dist", "types": ["chrome", "node"] }, "include": ["index.ts", "lib"] } # --- github file: pages/content/package.json --- { "name": "@extension/content-script", "version": "0.1.4", "description": "chrome extension - content script", "private": true, "sideeffects": true, "files": [ "dist/**" ], "scripts": { "clean:node_modules": "pnpx rimraf node_modules", "clean:turbo": "rimraf .turbo", "clean": "pnpm clean:turbo && pnpm clean:node_modules", "build": "vite build", "dev": "cross-env __dev__=true vite build --mode development", "lint": "eslint . --ext .ts,.tsx", "lint:fix": "pnpm lint --fix", "prettier": "prettier . --write --ignore-path ../../.prettierignore", "type-check": "tsc --noemit" }, "dependencies": { "@extension/shared": "workspace:*", "@extension/storage": "workspace:*" }, "devdependencies": { "@extension/hmr": "workspace:*", "@extension/tsconfig": "workspace:*", "@extension/vite-config": "workspace:*", "cross-env": "^7.0.3" } } # --- github file: pages/content/tsconfig.json --- { "extends": "@extension/tsconfig/base", "compileroptions": { "baseurl": ".", "paths": { "@src/*": ["src/*"] }, "types": ["chrome", "../../vite-env.d.ts"] }, "include": ["src"] } # --- github file: pages/options/index.html --- <!doctype html> <html lang="en"> <head> <meta charset="utf-8" /> <title>options</title> </head> <body> <div id="app-container"></div> <script type="module" src="./src/index.tsx"></script> </body> </html> # --- github file: pages/options/package.json --- { "name": "@extension/options", "version": "0.1.4", "description": "chrome extension - options", "private": true, "sideeffects": true, "files": [ "dist/**" ], "scripts": { "clean:node_modules": "pnpx rimraf node_modules", "clean:turbo": "rimraf .turbo", "clean": "pnpm clean:turbo && pnpm clean:node_modules", "build": "vite build", "dev": "cross-env __dev__=true vite build --mode development", "lint": "eslint . --ext .ts,.tsx", "lint:fix": "pnpm lint --fix", "prettier": "prettier . --write --ignore-path ../../.prettierignore", "type-check": "tsc --noemit" }, "dependencies": { "@extension/shared": "workspace:*", "@extension/storage": "workspace:*", "@extension/ui": "workspace:*" }, "devdependencies": { "@extension/tailwindcss-config": "workspace:*", "@extension/tsconfig": "workspace:*", "@extension/vite-config": "workspace:*", "postcss-load-config": "^6.0.1", "cross-env": "^7.0.3" }, "postcss": { "plugins": { "tailwindcss": {}, "autoprefixer": {} } } } # --- github file: pages/options/tsconfig.json --- { "extends": "@extension/tsconfig/base", "compileroptions": { "baseurl": ".", "paths": { "@src/*": ["src/*"] }, "types": ["chrome", "../../vite-env.d.ts"] }, "include": ["src"] } # --- github file: pages/side-panel/index.html --- <!doctype html> <html lang="en"> <head> <meta charset="utf-8" /> <title>side panel</title> </head> <body> <div id="app-container"></div> <script type="module" src="./src/index.tsx"></script> </body> </html> # --- github file: pages/side-panel/package.json --- { "name": "@extension/sidepanel", "version": "0.1.4", "description": "chrome extension - side panel", "private": true, "sideeffects": true, "files": [ "dist/**" ], "scripts": { "clean:node_modules": "pnpx rimraf node_modules", "clean:turbo": "rimraf .turbo", "clean": "pnpm clean:turbo && pnpm clean:node_modules", "build": "vite build", "dev": "cross-env __dev__=true vite build --mode development", "lint": "eslint . --ext .ts,.tsx", "lint:fix": "pnpm lint --fix", "prettier": "prettier . --write --ignore-path ../../.prettierignore", "type-check": "tsc --noemit" }, "dependencies": { "react-icons": "^5.0.0", "puppeteer-core": "24.1.1", "webextension-polyfill": "^0.12.0", "@extension/shared": "workspace:*", "@extension/storage": "workspace:*" }, "devdependencies": { "@extension/tailwindcss-config": "workspace:*", "@extension/tsconfig": "workspace:*", "@extension/vite-config": "workspace:*", "postcss-load-config": "^6.0.1", "cross-env": "^7.0.3" }, "postcss": { "plugins": { "tailwindcss": {}, "autoprefixer": {} } } } # --- github file: pages/side-panel/tsconfig.json --- { "extends": "@extension/tsconfig/base", "compileroptions": { "baseurl": ".", "paths": { "@src/*": ["src/*"] }, "types": ["chrome", "../../vite-env.d.ts"] }, "include": ["src"] } # --- github file: pnpm-lock.yaml --- lockfileversion: '9.0' settings: autoinstallpeers: true excludelinksfromlockfile: false overrides: cross-spawn: ^7.0.5 esbuild: ^0.25.1 nanoid: 3.3.11 importers: .: dependencies: eslint-plugin-tailwindcss: specifier: ^3.17.4 version: 3.17.4(tailwindcss@3.4.17(ts-node@10.9.2(@swc/core@1.9.3)(@types/node@22.7.4)(typescript@5.5.4))) react: specifier: 18.3.1 version: 18.3.1 react-dom: specifier: 18.3.1 version: 18.3.1(react@18.3.1) devdependencies: '@types/chrome': specifier: ^0.0.270 version: 0.0.270 '@types/node': specifier: ^22.5.5 version: 22.7.4 '@types/react': specifier: ^18.3.3 version: 18.3.5 '@types/react-dom': specifier: ^18.3.0 version: 18.3.0 '@typescript-eslint/eslint-plugin': specifier: ^7.18.0 version: 7.18.0(@typescript-eslint/parser@7.18.0(eslint@8.57.0)(typescript@5.5.4))(eslint@8.57.0)(typescript@5.5.4) '@typescript-eslint/parser': specifier: ^7.18.0 version: 7.18.0(eslint@8.57.0)(typescript@5.5.4) autoprefixer: specifier: ^10.4.20 version: 10.4.20(postcss@8.4.47) cross-env: specifier: ^7.0.3 version: 7.0.3 esbuild: specifier: ^0.25.1 version: 0.25.1 eslint: specifier: 8.57.0 version: 8.57.0 eslint-config-airbnb-typescript: specifier: 18.0.0 version: 18.0.0(@typescript-eslint/eslint-plugin@7.18.0(@typescript-eslint/parser@7.18.0(eslint@8.57.0)(typescript@5.5.4))(eslint@8.57.0)(typescript@5.5.4))(@typescript-eslint/parser@7.18.0(eslint@8.57.0)(typescript@5.5.4))(eslint-plugin-import@2.29.1(@typescript-eslint/parser@7.18.0(eslint@8.57.0)(typescript@5.5.4))(eslint@8.57.0))(eslint@8.57.0) eslint-config-prettier: specifier: 9.1.0 version: 9.1.0(eslint@8.57.0) eslint-plugin-import: specifier: 2.29.1 version: 2.29.1(@typescript-eslint/parser@7.18.0(eslint@8.57.0)(typescript@5.5.4))(eslint@8.57.0) eslint-plugin-jsx-a11y: specifier: 6.9.0 version: 6.9.0(eslint@8.57.0) eslint-plugin-prettier: specifier: 5.2.4 version: 5.2.4(eslint-config-prettier@9.1.0(eslint@8.57.0))(eslint@8.57.0)(prettier@3.3.3) eslint-plugin-react: specifier: 7.35.2 version: 7.35.2(eslint@8.57.0) eslint-plugin-react-hooks: specifier: 4.6.2 version: 4.6.2(eslint@8.57.0) husky: specifier: ^9.1.4 version: 9.1.5 lint-staged: specifier: ^15.2.7 version: 15.2.10 postcss: specifier: ^8.4.47 version: 8.4.47 prettier: specifier: ^3.3.3 version: 3.3.3 rimraf: specifier: ^6.0.1 version: 6.0.1 run-script-os: specifier: ^1.1.6 version: 1.1.6 tailwindcss: specifier: ^3.4.17 version: 3.4.17(ts-node@10.9.2(@swc/core@1.9.3)(@types/node@22.7.4)(typescript@5.5.4)) tslib: specifier: ^2.6.3 version: 2.7.0 turbo: specifier: ^2.3.3 version: 2.3.3 typescript: specifier: 5.5.4 version: 5.5.4 vite: specifier: 6.0.12 version: 6.0.12(@types/node@22.7.4)(jiti@1.21.6)(sass@1.79.4)(terser@5.34.1)(tsx@4.19.2)(yaml@2.5.1) chrome-extension: dependencies: '@extension/shared': specifier: workspace:* version: link:../packages/shared '@extension/storage': specifier: workspace:* version: link:../packages/storage '@langchain/anthropic': specifier: ^0.3.12 version: 0.3.12(@langchain/core@0.3.37(openai@4.82.0(ws@8.18.0)(zod@3.24.1))) '@langchain/core': specifier: ^0.3.37 version: 0.3.37(openai@4.82.0(ws@8.18.0)(zod@3.24.1)) '@langchain/deepseek': specifier: ^0.0.1 version: 0.0.1(@langchain/core@0.3.37(openai@4.82.0(ws@8.18.0)(zod@3.24.1)))(ws@8.18.0) '@langchain/google-genai': specifier: 0.1.11 version: 0.1.11(@langchain/core@0.3.37(openai@4.82.0(ws@8.18.0)(zod@3.24.1)))(zod@3.24.1) '@langchain/ollama': specifier: ^0.2.0 version: 0.2.0(@langchain/core@0.3.37(openai@4.82.0(ws@8.18.0)(zod@3.24.1))) '@langchain/openai': specifier: ^0.4.2 version: 0.4.2(@langchain/core@0.3.37(openai@4.82.0(ws@8.18.0)(zod@3.24.1)))(ws@8.18.0) '@langchain/xai': specifier: ^0.0.2 version: 0.0.2(@langchain/core@0.3.37(openai@4.82.0(ws@8.18.0)(zod@3.24.1)))(ws@8.18.0) puppeteer-core: specifier: 24.1.1 version: 24.1.1 webextension-polyfill: specifier: ^0.12.0 version: 0.12.0 zod: specifier: ^3.24.1 version: 3.24.1 zod-to-json-schema: specifier: ^3.24.4 version: 3.24.4(zod@3.24.1) devdependencies: '@extension/dev-utils': specifier: workspace:* version: link:../packages/dev-utils '@extension/hmr': specifier: workspace:* version: link:../packages/hmr '@extension/tsconfig': specifier: workspace:* version: link:../packages/tsconfig '@extension/vite-config': specifier: workspace:* version: link:../packages/vite-config '@laynezh/vite-plugin-lib-assets': specifier: ^0.6.1 version: 0.6.1(vite@6.0.12(@types/node@22.7.4)(jiti@1.21.6)(sass@1.79.4)(terser@5.34.1)(tsx@4.19.2)(yaml@2.5.1)) '@types/ws': specifier: ^8.5.13 version: 8.5.13 cross-env: specifier: ^7.0.3 version: 7.0.3 deepmerge: specifier: ^4.3.1 version: 4.3.1 magic-string: specifier: ^0.30.10 version: 0.30.11 ts-loader: specifier: ^9.5.1 version: 9.5.1(typescript@5.5.4)(webpack@5.94.0(@swc/core@1.9.3)(esbuild@0.25.1)) packages/dev-utils: devdependencies: '@extension/shared': specifier: workspace:* version: link:../shared '@extension/tsconfig': specifier: workspace:* version: link:../tsconfig packages/hmr: devdependencies: '@extension/tsconfig': specifier: workspace:* version: link:../tsconfig '@rollup/plugin-sucrase': specifier: ^5.0.2 version: 5.0.2(rollup@4.24.0) '@types/ws': specifier: ^8.5.13 version: 8.5.13 esm: specifier: ^3.2.25 version: 3.2.25 fast-glob: specifier: ^3.3.2 version: 3.3.2 rollup: specifier: ^4.24.0 version: 4.24.0 ts-node: specifier: ^10.9.2 version: 10.9.2(@swc/core@1.9.3)(@types/node@22.7.4)(typescript@5.5.4) ws: specifier: 8.18.0 version: 8.18.0 packages/i18n: devdependencies: '@extension/hmr': specifier: workspace:* version: link:../hmr '@extension/tsconfig': specifier: workspace:* version: link:../tsconfig packages/schema-utils: devdependencies: '@extension/tsconfig': specifier: workspace:* version: link:../tsconfig packages/shared: devdependencies: '@extension/storage': specifier: workspace:* version: link:../storage '@extension/tsconfig': specifier: workspace:* version: link:../tsconfig packages/storage: devdependencies: '@extension/tsconfig': specifier: workspace:* version: link:../tsconfig packages/tailwind-config: {} packages/tsconfig: {} packages/ui: dependencies: clsx: specifier: ^2.1.1 version: 2.1.1 tailwind-merge: specifier: ^2.4.0 version: 2.5.2 devdependencies: '@extension/tsconfig': specifier: workspace:* version: link:../tsconfig deepmerge: specifier: ^4.3.1 version: 4.3.1 tsc-alias: specifier: ^1.8.10 version: 1.8.10 packages/vite-config: devdependencies: '@extension/hmr': specifier: workspace:* version: link:../hmr '@extension/tsconfig': specifier: workspace:* version: link:../tsconfig '@vitejs/plugin-react-swc': specifier: ^3.7.2 version: 3.7.2(vite@6.0.12(@types/node@22.7.4)(jiti@1.21.6)(sass@1.79.4)(terser@5.34.1)(tsx@4.19.2)(yaml@2.5.1)) deepmerge: specifier: ^4.3.1 version: 4.3.1 packages/zipper: devdependencies: '@extension/tsconfig': specifier: workspace:* version: link:../tsconfig fast-glob: specifier: ^3.3.2 version: 3.3.2 fflate: specifier: ^0.8.2 version: 0.8.2 tsx: specifier: ^4.19.2 version: 4.19.2 pages/content: dependencies: '@extension/shared': specifier: workspace:* version: link:../../packages/shared '@extension/storage': specifier: workspace:* version: link:../../packages/storage devdependencies: '@extension/hmr': specifier: workspace:* version: link:../../packages/hmr '@extension/tsconfig': specifier: workspace:* version: link:../../packages/tsconfig '@extension/vite-config': specifier: workspace:* version: link:../../packages/vite-config cross-env: specifier: ^7.0.3 version: 7.0.3 pages/options: dependencies: '@extension/shared': specifier: workspace:* version: link:../../packages/shared '@extension/storage': specifier: workspace:* version: link:../../packages/storage '@extension/ui': specifier: workspace:* version: link:../../packages/ui devdependencies: '@extension/tailwindcss-config': specifier: workspace:* version: link:../../packages/tailwind-config '@extension/tsconfig': specifier: workspace:* version: link:../../packages/tsconfig '@extension/vite-config': specifier: workspace:* version: link:../../packages/vite-config cross-env: specifier: ^7.0.3 version: 7.0.3 postcss-load-config: specifier: ^6.0.1 version: 6.0.1(jiti@1.21.6)(postcss@8.4.49)(tsx@4.19.2)(yaml@2.5.1) pages/side-panel: dependencies: '@extension/shared': specifier: workspace:* version: link:../../packages/shared '@extension/storage': specifier: workspace:* version: link:../../packages/storage puppeteer-core: specifier: 24.1.1 version: 24.1.1 react-icons: specifier: ^5.0.0 version: 5.4.0(react@18.3.1) webextension-polyfill: specifier: ^0.12.0 version: 0.12.0 devdependencies: '@extension/tailwindcss-config': specifier: workspace:* version: link:../../packages/tailwind-config '@extension/tsconfig': specifier: workspace:* version: link:../../packages/tsconfig '@extension/vite-config': specifier: workspace:* version: link:../../packages/vite-config cross-env: specifier: ^7.0.3 version: 7.0.3 postcss-load-config: specifier: ^6.0.1 version: 6.0.1(jiti@1.21.6)(postcss@8.4.49)(tsx@4.19.2)(yaml@2.5.1) packages: '@alloc/quick-lru@5.2.0': resolution: {integrity: sha512-urcabb+4burfabwblutiberxwvbsu/v7tzwfmbgjfbkwibuzis9gxdoduyuiecfdgq85jglmw6jus3+z5tsklw==} engines: {node: '>=10'} '@anthropic-ai/sdk@0.32.1': resolution: {integrity: sha512-u9jwtrdvdq9iwuabvsmlj8njvwayqz6qxvglsvhryhcepklsbcp/mxxm+jycawlov8esbattjnd4kuafa+hyjg==} '@cfworker/json-schema@4.1.1': resolution: {integrity: sha512-gamruzsgtkc3aibl71inwxdsyuc5umakkgdvzysbotw/xi42jqhl7ekv2oyzcuqvc+d2rccf7exy2icyfik6og==} '@cspotcode/source-map-support@0.8.1': resolution: {integrity: sha512-ichnf6dn4thomfin/7oe8lwz19y6q/67bmf6vngrev8rsbbvb9lpjxecnwrcwx6ixsvaigoomauvu4ysxxrvgw==} engines: {node: '>=12'} '@esbuild/aix-ppc64@0.25.1': resolution: {integrity: sha512-kfygy8idztgy+z0vfgvexztxkfla4zaxgkeahg9ke1scbjpqnfsnox8ktu5ojnru5ed5cvojyxftoxaq5nfbjq==} engines: {node: '>=18'} cpu: [ppc64] os: [aix] '@esbuild/android-arm64@0.25.1': resolution: {integrity: sha512-50tm0zcjw5kgqgg7fq7ihvqocan9tkivruq/ln0xr+t2lzefvai1zcs8diksfcepf1t/gyoeofcagdhfpkisma==} engines: {node: '>=18'} cpu: [arm64] os: [android] '@esbuild/android-arm@0.25.1': resolution: {integrity: sha512-dp+mshlyux6j/jjdqvlnmglqlfu+muvenrmt5nk6q07wnhcdsnb7qzj+7g8vmugh1q+vj2bq8krsuya00i/k+q==} engines: {node: '>=18'} cpu: [arm] os: [android] '@esbuild/android-x64@0.25.1': resolution: {integrity: sha512-gcj6wfutnldquzykn/ittlhwqqgwu9s45vuxs7eiyf+7rciiqh9bcloato9vhxsl0pji+pf4lz2xxces+q8hdw==} engines: {node: '>=18'} cpu: [x64] os: [android] '@esbuild/darwin-arm64@0.25.1': resolution: {integrity: sha512-5hezkpf+nqjyosr/elb62u19/l1mzddqidgfmfutvujjuzroazatwk+kr+3y0c/oejfllxo9fxb1w7l+p7e4fq==} engines: {node: '>=18'} cpu: [arm64] os: [darwin] '@esbuild/darwin-x64@0.25.1': resolution: {integrity: sha512-hxvnwl2dqs3fm1iwq8iezh0cx7zgdvhbtfnoy5uurtao5oivceyj9xizemdi7srvksusdtcahmkarxqtlyvyfa==} engines: {node: '>=18'} cpu: [x64] os: [darwin] '@esbuild/freebsd-arm64@0.25.1': resolution: {integrity: sha512-1mrczs0fza2g8e+fuo2ipw6jw5qqqih+teros5fafknrx6nxh31txbki3vpmlijlh6yrimzsxjtaxuyft/8y4a==} engines: {node: '>=18'} cpu: [arm64] os: [freebsd] '@esbuild/freebsd-x64@0.25.1': resolution: {integrity: sha512-0izwlityz7nm0xuis0q1y3qwjc52r8asxxe40vuxm6bb1rnmkodtw6lhvwrrgiiculcx7zvyh6h5fqdlu4gkww==} engines: {node: '>=18'} cpu: [x64] os: [freebsd] '@esbuild/linux-arm64@0.25.1': resolution: {integrity: sha512-jan3dhi0/ddpelk0nlcxrm1q7dnjpjxy7ywawvbfkpvi+7xnsc/ldoncln7gzsyzgu6qsamgsvp9oxahp973uq==} engines: {node: '>=18'} cpu: [arm64] os: [linux] '@esbuild/linux-arm@0.25.1': resolution: {integrity: sha512-ndkohs4u7jhdkw9g3cy6swqfcnlitn6sqivvarbziaf3cemshqflghymx8xlm/lbit3/5d7kxvrituga5yviuq==} engines: {node: '>=18'} cpu: [arm] os: [linux] '@esbuild/linux-ia32@0.25.1': resolution: {integrity: sha512-ojykpaf4v8jidkngz8c/q1lbo44sqnuqtq1kktjxdbln1hpod5re/hko5ugkkzd+d2+o1a9mfgueiuwo2yfgkq==} engines: {node: '>=18'} cpu: [ia32] os: [linux] '@esbuild/linux-loong64@0.25.1': resolution: {integrity: sha512-ngfornqj4dzcq5vp835om/o21umlxzn79kobklcs3wz9smwiifknly4xdcluu0bwp7b/houtdrguz7nognfiyg==} engines: {node: '>=18'} cpu: [loong64] os: [linux] '@esbuild/linux-mips64el@0.25.1': resolution: {integrity: sha512-1osbbpefywie5ivb/0g2x6i1qinza1aioj1tdl4aaab55xiigbg8doq6a5bzywgr+tecdzyh67xvntmuzl+nxg==} engines: {node: '>=18'} cpu: [mips64el] os: [linux] '@esbuild/linux-ppc64@0.25.1': resolution: {integrity: sha512-/6vbjowuf3tdtvjz82qf3tbluwsscd7/1w+d9lh0w/squgm5/jjd0lrj1fvifzsqb6rfmlce0xz3fmzc3wtyvg==} engines: {node: '>=18'} cpu: [ppc64] os: [linux] '@esbuild/linux-riscv64@0.25.1': resolution: {integrity: sha512-nsut/mx5gnilhcq2yimlme3wl4fk5wx/o0quuclmtmjn+wewyoegdn1ipcn72g1whsnibxgxd4i/mf0gtcuajq==} engines: {node: '>=18'} cpu: [riscv64] os: [linux] '@esbuild/linux-s390x@0.25.1': resolution: {integrity: sha512-ceecelljnft8kzhqlardbqso9a27o2zd2aq8usaeogtejorcyhntkp8xqhmdjmtthdf4gbmjr2au3x1udadqqq==} engines: {node: '>=18'} cpu: [s390x] os: [linux] '@esbuild/linux-x64@0.25.1': resolution: {integrity: sha512-xbfuhu/gnvseg+egovrc+kjbakrvtk38rlerazqxvmzlb4fxpcfceuayzjvrnhftdeyvcdansjjvovgyoekzfa==} engines: {node: '>=18'} cpu: [x64] os: [linux] '@esbuild/netbsd-arm64@0.25.1': resolution: {integrity: sha512-o96pom2xghltpth+s4+np7yccafb4tjnrvzhfie7dgmax+ymp2wgmd2oecbuaathkthslwhqeuaxmrncsh8+5g==} engines: {node: '>=18'} cpu: [arm64] os: [netbsd] '@esbuild/netbsd-x64@0.25.1': resolution: {integrity: sha512-x53z6uxip6kfxbq+krbx25xhv/ncbzrym6ehoaeail7x7oa4xiq+394pwgnwasq2wra0ki6puo6hto5zef5ija==} engines: {node: '>=18'} cpu: [x64] os: [netbsd] '@esbuild/openbsd-arm64@0.25.1': resolution: {integrity: sha512-na9t3szbxezdzm/kfs3gcrqnjhzm6gzfbeu1/6iv/npkp5ortp9zbqjvkdj47s6bcgaaznnnu/cy1x342+mvzg==} engines: {node: '>=18'} cpu: [arm64] os: [openbsd] '@esbuild/openbsd-x64@0.25.1': resolution: {integrity: sha512-t3h78x2h1tszfrsf+txbt5aop/e7taz3ptvku9oyir3iaofpgv6o9c2naym5toriy1l0nnf6a4x5uxrzsgx/dw==} engines: {node: '>=18'} cpu: [x64] os: [openbsd] '@esbuild/sunos-x64@0.25.1': resolution: {integrity: sha512-2h3ruvcmulo7die5ewjh8eubzai4xw54h1iljnrnzdeo8dtadez21w6j22xbkxqgjbe0+wnnjtw3uxroljnfeg==} engines: {node: '>=18'} cpu: [x64] os: [sunos] '@esbuild/win32-arm64@0.25.1': resolution: {integrity: sha512-ge7xvrdozrb+yvkb9ksrmq+7a2u/k5cf/8grvfragjmfadr/e/odq134rk2/eehqyv5eqrfxb1hy7nr15fv1nq==} engines: {node: '>=18'} cpu: [arm64] os: [win32] '@esbuild/win32-ia32@0.25.1': resolution: {integrity: sha512-uoxsjcicavsit6unbhbze8wy3n0hokjsbozy7hdautde++1djmrrvcpgisulschl+a/zwdxppxd3iyfkja7k8a==} engines: {node: '>=18'} cpu: [ia32] os: [win32] '@esbuild/win32-x64@0.25.1': resolution: {integrity: sha512-y1eqdcfwmseqn/ujr5vayloj1bhak+ssyk0aezpjc+t1litgsnccpqfjb6v+lstp/9iov4ysfjxlagj9rptkvg==} engines: {node: '>=18'} cpu: [x64] os: [win32] '@eslint-community/eslint-utils@4.4.0': resolution: {integrity: sha512-1/sa4dwrzbayeuoq6oxahhkmrzvsnlcg4rfxw3zfggmqksnqpfnlv9cuefqp1x9eyxhto5p6xdhzm1ne9p/afa==} engines: {node: ^12.22.0 || ^14.17.0 || >=16.0.0} peerdependencies: eslint: ^6.0.0 || ^7.0.0 || >=8.0.0 '@eslint-community/regexpp@4.11.0': resolution: {integrity: sha512-g/m/tiimrtaxewrflfqjmmgnx28ixbg4pbz8xqqhquhlfi6tl2htpib1iqcj144v5ee/jakyt9/wz0mgzwfa7a==} engines: {node: ^12.0.0 || ^14.0.0 || >=16.0.0} '@eslint/eslintrc@2.1.4': resolution: {integrity: sha512-269z39ms6wvjtsoul10l60wdkhjvdpg24q4ezth3nnf6lpvsshek3wqjdx9jrwaupvph7coouppu9irqazfvtq==} engines: {node: ^12.22.0 || ^14.17.0 || >=16.0.0} '@eslint/js@8.57.0': resolution: {integrity: sha512-ys+3g2taw7gadojzpt83sjtcdhmjndcdmfvq/tj9ia1bfjzfkd9mauxt3oenpuphbi6p/myecxrjrofusdx/5g==} engines: {node: ^12.22.0 || ^14.17.0 || >=16.0.0} '@google/generative-ai@0.21.0': resolution: {integrity: sha512-7xhubtnlksezk15kn3t+tzimxsbkm/dskkbfalj+20nvpke1kby7mr2p7vuijen+f06z5+a8bvgko0v39cr6wg==} engines: {node: '>=18.0.0'} '@humanwhocodes/config-array@0.11.14': resolution: {integrity: sha512-3t8lkomg45bv5ficb15qqmsyuswrq8aygvfc7zg32zoalnqrilm018zvcw0eapxux8fta33q8psrsstjee3jsg==} engines: {node: '>=10.10.0'} deprecated: use @eslint/config-array instead '@humanwhocodes/module-importer@1.0.1': resolution: {integrity: sha512-bxvev4v8v5yb4ncftt3rpsgzbopckjfk0y4ovvvjwiudvbrmdxrpyxrl988i5ap9m9bnyeejwfm5wkbmtfflfa==} engines: {node: '>=12.22'} '@humanwhocodes/object-schema@2.0.3': resolution: {integrity: sha512-93zydmes/c1d69yzikdbj0v24vqnzb/kof26kpaagafd3p/4gulh3dys5ogak+exi9qyzld8x/08zt7wikcdca==} deprecated: use @eslint/object-schema instead '@isaacs/cliui@8.0.2': resolution: {integrity: sha512-o8jcjabxaleog9dq0+arxwzbtfnp4wnaqzuijk7ll44amxgkv/j2m4tpjxjy3znbcfvbxfzucm1twdyfybfqea==} engines: {node: '>=12'} '@jridgewell/gen-mapping@0.3.5': resolution: {integrity: sha512-izl8zoedibrwezlccrhoacupyyn5gdik+q6fbfdpdg6hqx6jpkitn7dfipw9lqzxg6df9sa7+oknq0qlz/gaqg==} engines: {node: '>=6.0.0'} '@jridgewell/resolve-uri@3.1.2': resolution: {integrity: sha512-brisgcijp20/tbwspwmei54qvprzexkud9ljl+uixuktwvja8ww1trb1jms1rfxo1cbtnz/5hpc9qvmkwdopkw==} engines: {node: '>=6.0.0'} '@jridgewell/set-array@1.2.1': resolution: {integrity: sha512-r8glrtzeyp03ymzp/6lil/28tgegezhx1q2k703kgwrai1vdvpixdg70vjc2pamw3na6jkl5hhfu1sjx0mnn/a==} engines: {node: '>=6.0.0'} '@jridgewell/source-map@0.3.6': resolution: {integrity: sha512-1zjtzebgqllo79ue2bm3rigud/boe0pp5bjsrcrxxykezs8stv7zn84ubbiyu7jy+ecksnviugowwe/tt+shmq==} '@jridgewell/sourcemap-codec@1.5.0': resolution: {integrity: sha512-gv3zraisu3fjpagnsribrqgwql6qufx04ympw/zd8xmlsu32mhccbfbo6kzfljvypcz8zydegqsgf+pwpam7gq==} '@jridgewell/trace-mapping@0.3.25': resolution: {integrity: sha512-vnk6aewybgtawwmy/pzwngdojcklwsd2wqvjggagoawcgwysyxfyoxt00ijktf+8lb57dwob3aa0o9capepiyq==} '@jridgewell/trace-mapping@0.3.9': resolution: {integrity: sha512-3belt6tdc8bpgatbcmdtnjlirvotmeb5e2gc94pnkwew9ji6cahueog85tjwp5wquqfavomtmwig4p926zkkuq==} '@langchain/anthropic@0.3.12': resolution: {integrity: sha512-vyanjveus+v8wietst5guglenny87nmijafx6jcjn8mmtf2kvwybwqauapygwzvq40tru3w0rk2ruvzybrcweg==} engines: {node: '>=18'} peerdependencies: '@langchain/core': '>=0.2.21 <0.4.0' '@langchain/core@0.3.37': resolution: {integrity: sha512-lfk9gqhxcycfx0oxvcbp7vdziouhyzznu7jr+2ofimnfkblzcckzblysqdfptd13prpghkaeoelq8h1tqi9lsw==} engines: {node: '>=18'} '@langchain/deepseek@0.0.1': resolution: {integrity: sha512-jgrbitvv4p7kqo/fyni9coclinxurj2xchdr8ehvqg3rl+w13diqjjn2mrkcrb7v6is1ri7it2x3yibadl71yg==} engines: {node: '>=18'} peerdependencies: '@langchain/core': '>=0.3.0 <0.4.0' '@langchain/google-genai@0.1.11': resolution: {integrity: sha512-punfwgw+yy3ni358r4wjg7escicimh0uaimgck/gf44opalf6pby9iql4clvruto1xbi3eetzunz9nohzpnfgq==} engines: {node: '>=18'} peerdependencies: '@langchain/core': '>=0.3.17 <0.4.0' '@langchain/ollama@0.2.0': resolution: {integrity: sha512-jllyfqt+nbhajklakk7lrtwhzj7whejlm6yuv4jtoq8zpzpl//372+mjggdow0mnw8ofysg1t2c6mejspkjtia==} engines: {node: '>=18'} peerdependencies: '@langchain/core': '>=0.2.21 <0.4.0' '@langchain/openai@0.4.2': resolution: {integrity: sha512-cuj7qbvcycaltp0aqzuppec7as8cwigau21mhxryzfs+dnwxkyxz1q1z4kcx6cykq/i+cnwwmk+sp+yruu73aw==} engines: {node: '>=18'} peerdependencies: '@langchain/core': '>=0.3.29 <0.4.0' '@langchain/openai@0.4.4': resolution: {integrity: sha512-uzybjemd8+ux7kn47kufyfqkdbcebuwnqdtmar6zuimmnlsnib6mkreehggaejgcpdt4cu8u/dyyddtz+jayoq==} engines: {node: '>=18'} peerdependencies: '@langchain/core': '>=0.3.39 <0.4.0' '@langchain/xai@0.0.2': resolution: {integrity: sha512-wvos7sfjs4vwk/oihjomaoaz+r9nqhpqbexlq2d8l0d54pxyhb1ilr9rub9lt1rpqazsx8hg4a8+hx4r01qksg==} engines: {node: '>=18'} peerdependencies: '@langchain/core': '>=0.2.21 <0.4.0' '@laynezh/vite-plugin-lib-assets@0.6.1': resolution: {integrity: sha512-pdirw/pijkum7/oobjgbgfqmswetmvobeez6uwt3nhp5cu2zt0l5qelq69cawd/v3qlpy3cpxvn0kzrzqzdvsq==} peerdependencies: vite: ^3.0.0 || ^4.0.0 || ^5.0.0 || ^6.0.0 '@nodelib/fs.scandir@2.1.5': resolution: {integrity: sha512-vq24bq3ym5heqm2nkcr3yxdwjc7vtsethrdnkp2dk9p1uqlr+dhurm/noto0kg7hyhu7eppkzj3myqyumbf62g==} engines: {node: '>= 8'} '@nodelib/fs.stat@2.0.5': resolution: {integrity: sha512-rkhppp2zrqdaqa/2jnhnztcpalv64xdhip7a7454a5ovi7bukxgt7mx7udwau3zg1dcppu0rz3vv1seaqvy4+a==} engines: {node: '>= 8'} '@nodelib/fs.walk@1.2.8': resolution: {integrity: sha512-ogb+uxlgwcgqkgwo8gcegwemotft3fio9ababbmagwxiobkz+gty0pp185begg7llih/nshsv2xas1lnznocsg==} engines: {node: '>= 8'} '@pkgjs/parseargs@0.11.0': resolution: {integrity: sha512-+1vkjdd0qblpodgrjueqarh8vaivqodibwh9xpp5syisf7yoqgsjkpnfoqqlqlu+vq/tvsshmr6lopmn8u+dpg==} engines: {node: '>=14'} '@pkgr/core@0.2.0': resolution: {integrity: sha512-vsjdakyr6qcpu+iogscgimyr7lvzyixh/dlqeviqotwncvfktlyd/lknwh4mxsv2a5vpirc77fn5dnmk1ebggq==} engines: {node: ^12.20.0 || ^14.18.0 || >=16.0.0} '@puppeteer/browsers@2.7.0': resolution: {integrity: sha512-bo61xntuopsz9kvtfqhvbh6ltm1koxk0ilbr+yuvrm2lb7mk8+5o1w18l5zqd5cs8xlf+ntgambqrqgifmdjog==} engines: {node: '>=18'} hasbin: true '@rollup/plugin-sucrase@5.0.2': resolution: {integrity: sha512-4mhivh9dy2hwose1/x5qms0xf7yn9jdd/yozhqzdirmwiolgfpgnrnvhqkqtak1raly/fpyrekmwh/04vr1tha==} engines: {node: '>=14.0.0'} peerdependencies: rollup: ^2.53.1||^3.0.0||^4.0.0 peerdependenciesmeta: rollup: optional: true '@rollup/pluginutils@5.1.0': resolution: {integrity: sha512-xtiwoppcpvyki6l1nho0lflcyznueypmpy1mc3kppvdyulhstvyelnvw00qtliafnhr3kynjtqhegqu4m3n09g==} engines: {node: '>=14.0.0'} peerdependencies: rollup: ^1.20.0||^2.0.0||^3.0.0||^4.0.0 peerdependenciesmeta: rollup: optional: true '@rollup/rollup-android-arm-eabi@4.24.0': resolution: {integrity: sha512-q6hjd7y6xdb48x8znvdoqsbh2ubybhgk8piqgphwkiw/hc/yx5ghq2mqy5srmzwhb3vsfkwoouvozhkr7dmdia==} cpu: [arm] os: [android] '@rollup/rollup-android-arm64@4.24.0': resolution: {integrity: sha512-ijlns1qfid8xhkjt81ubhuujp2lu4x2yxa4ctfptg+mqee6+c5f/+x/bstmxapgmwlwil3ih122xv8kvarnaza==} cpu: [arm64] os: [android] '@rollup/rollup-darwin-arm64@4.24.0': resolution: {integrity: sha512-biv+x9xess1xck6dvvko+s/z8/2amt/2lmqdqbmrmvpgfvxlmde9mlcbqpztxm1tajc3rafdqegsh18hqpmyta==} cpu: [arm64] os: [darwin] '@rollup/rollup-darwin-x64@4.24.0': resolution: {integrity: sha512-x6/nowofn7rt2sveqwusw/5c/fymbe4fnlk9dqk4sx4mgvbita9h64kjuypvgq0f/9xwj5u5uftbl6bejaqdbq==} cpu: [x64] os: [darwin] '@rollup/rollup-linux-arm-gnueabihf@4.24.0': resolution: {integrity: sha512-0kxvijqmoimlcvcz9uvvdpgfywo93ahhp8ui3frtop57svqrf/rossr5pjql2hcmp0ljeglu4q9o/rqaaq3aya==} cpu: [arm] os: [linux] '@rollup/rollup-linux-arm-musleabihf@4.24.0': resolution: {integrity: sha512-it2bw6kkfvh8xk/bnhfakeeolpv8stiisekpof+nbgwm4d55czkc7t4dx1pebtnym/xekmgy1mntyuoa8rfiww==} cpu: [arm] os: [linux] '@rollup/rollup-linux-arm64-gnu@4.24.0': resolution: {integrity: sha512-i0xtlxjqap2erfulfvlsnm5debtvque/3pi4g2y7cxrs7+a9de42z4xxklyj7+ohe3igxvfqm7vqc43bwtgpwa==} cpu: [arm64] os: [linux] '@rollup/rollup-linux-arm64-musl@4.24.0': resolution: {integrity: sha512-9e6mkujhdudh604qco5yp/3qn3y7slxyuic0rpr89amscs2uamk1whp2b7kaa1nsjwjc/f/lc0wl1l47qjiyqw==} cpu: [arm64] os: [linux] '@rollup/rollup-linux-powerpc64le-gnu@4.24.0': resolution: {integrity: sha512-2xffpj2xmeif5zi2ebf4h73or1v/lycirxzxhznc93sqdn/iwhyysyj8i9381ikufxzrz2v7r2tovk2nbwxrww==} cpu: [ppc64] os: [linux] '@rollup/rollup-linux-riscv64-gnu@4.24.0': resolution: {integrity: sha512-m3dg4hlwuntucdzu7kjyqbbd+blq3jmaohckdbe3tcmgmzbkkddj5ivndehossmcioknhfosv7do4rleofykpg==} cpu: [riscv64] os: [linux] '@rollup/rollup-linux-s390x-gnu@4.24.0': resolution: {integrity: sha512-mjbaoo4ocxjpptorzvkwfpy1bffj9fecmjqzlmqgjpnpy9jwqi7ous1axznik0nmx6jsgy6zurdz2w0qw6d56g==} cpu: [s390x] os: [linux] '@rollup/rollup-linux-x64-gnu@4.24.0': resolution: {integrity: sha512-zxfk7m72r0yyfn5q13niv0b7g8/5dcq9jdp8kejsfr3gozexeomhp/hlvqroa3ombmdfr19ijcenanpug93b6a==} cpu: [x64] os: [linux] '@rollup/rollup-linux-x64-musl@4.24.0': resolution: {integrity: sha512-w1i+l7kaxzndyl+vfvzszy8y1ars7vmgiy8wusxjzrrpyof5lab02kgr1pd2ekrcl73khuliid0m501ln+vobq==} cpu: [x64] os: [linux] '@rollup/rollup-win32-arm64-msvc@4.24.0': resolution: {integrity: sha512-vxbrnpwgbpvdcvy6xf3lew0pou51kbahhcchw6as6vbwic60eqsh19daeeobl+g8nkaz04qfdl/cefta0xqtuq==} cpu: [arm64] os: [win32] '@rollup/rollup-win32-ia32-msvc@4.24.0': resolution: {integrity: sha512-xrncgdu0oxvcpth/8n/shh4uevzxkio6hjfk0e15xitzp2ucailfd5kix7hjnqcbsztuf8qot+jwbc/qxrpywq==} cpu: [ia32] os: [win32] '@rollup/rollup-win32-x64-msvc@4.24.0': resolution: {integrity: sha512-fbmkaf7fufku0n2de5tbxcnlg0pt0cjue4xbre2qc5vqikxr4vcgkj/ht6smdfcoacva9rqf70apj8rn/4vmjw==} cpu: [x64] os: [win32] '@swc/core-darwin-arm64@1.9.3': resolution: {integrity: sha512-hgfl/ktic/qy4tb9dktbnuxy5cv4ieejppd4zo+lzt4illdwieanl4fkg67fivcenjboqg48cux+aphdho5g1w==} engines: {node: '>=10'} cpu: [arm64] os: [darwin] '@swc/core-darwin-x64@1.9.3': resolution: {integrity: sha512-iarq05zldtgf5h9czlcganhyg4vxuistnofpfnemui5fm5afp2s0fhq8wdakuz5wppsbddtdpll+vpeapt/wcq==} engines: {node: '>=10'} cpu: [x64] os: [darwin] '@swc/core-linux-arm-gnueabihf@1.9.3': resolution: {integrity: sha512-pbwe7xyprj/nenzrnbvzfjntxlbicfapagdz2erohjppj+fbqba3woogqbsuggbdcphf8s+kpprl1z+odwkmsq==} engines: {node: '>=10'} cpu: [arm] os: [linux] '@swc/core-linux-arm64-gnu@1.9.3': resolution: {integrity: sha512-aq5jziwngvv/2k2tvulg0mw/3lyfqpjzo6jdptr2evnbk9yt57ysvzs+3vhslubqdrv9/jqmuzyvu3p13xrk+g==} engines: {node: '>=10'} cpu: [arm64] os: [linux] '@swc/core-linux-arm64-musl@1.9.3': resolution: {integrity: sha512-tzvh480ry6rbml/qrgh5hk3zn1ztfsthuxdgo6iuk1mdwibdfyuy034hewuti4u3db97arkh0hnl0xho3+pzdg==} engines: {node: '>=10'} cpu: [arm64] os: [linux] '@swc/core-linux-x64-gnu@1.9.3': resolution: {integrity: sha512-ivxxbrdxdc9k4cdv10r21ccbmgebvowkxt/udh1phxun9m/h8erawjz5pcelwjimf27wokqpgawvfacldbge+w==} engines: {node: '>=10'} cpu: [x64] os: [linux] '@swc/core-linux-x64-musl@1.9.3': resolution: {integrity: sha512-ilsgmgfnoz1hwddz+zgeuomiwkp1pht6maigzxaciuc6opehke8uyna22uu63xvyclqvzydzpr3ms47wqpuneg==} engines: {node: '>=10'} cpu: [x64] os: [linux] '@swc/core-win32-arm64-msvc@1.9.3': resolution: {integrity: sha512-e+xmltdvihieunnjhtspn6b+pccfomyxnjb1gqoccyinkeiqnwc8ktwgmquucubewjkpc35nhy9k8acxrmw9kg==} engines: {node: '>=10'} cpu: [arm64] os: [win32] '@swc/core-win32-ia32-msvc@1.9.3': resolution: {integrity: sha512-rqpznfpaoosl4ufqnhhkw8al+oyjqjnidp0qwzfgnjdojsbtpyshg2lpcobedsneh+uizq6j96qf0zfd8agfxa==} engines: {node: '>=10'} cpu: [ia32] os: [win32] '@swc/core-win32-x64-msvc@1.9.3': resolution: {integrity: sha512-3yjjlq5suiehekc1ghtqvq475guiyqisksounoartxkdaw5g1yvpt9iosloe2mrs7+ffhggu693rsbuswoxsdq==} engines: {node: '>=10'} cpu: [x64] os: [win32] '@swc/core@1.9.3': resolution: {integrity: sha512-orj0afepuhtatx+bscvhnzaamwjpfaeyspm1tcbxa1rtbdeh/jdhi5yyzaknedytvtbva7apfeuzhmc9ye4xsg==} engines: {node: '>=10'} peerdependencies: '@swc/helpers': '*' peerdependenciesmeta: '@swc/helpers': optional: true '@swc/counter@0.1.3': resolution: {integrity: sha512-e2br4lsjkkrlkz/qchpw9zasxc0mvud7gtbtab7amvhejvye8sob8dbzkp2dtishgsku9sck6t6cny0ctxrocq==} '@swc/types@0.1.17': resolution: {integrity: sha512-v5grru+ad8yvycomajmpwr1ui577dd5ksjshp8raxopah22jfz6gzd/qxqjo6mjhqhcsjvjofxydhylqunmveq==} '@tootallnate/quickjs-emscripten@0.23.0': resolution: {integrity: sha512-c5mc6rdnsajdjo3upgw/cqthtckaylscztly4jiu97jxo/odcih0itndxsjptorekk/ycsz0aogtmkdtkosvia==} '@tsconfig/node10@1.0.11': resolution: {integrity: sha512-dcrjdcujk/kck/cue8xz8zspm8ms3mnnpta+jgca6usedfktlnvm1+iuz9etcdbnk41bhwphhew+n1lkcz4zow==} '@tsconfig/node12@1.0.11': resolution: {integrity: sha512-cqefursh12pwygsiobkja9lufu3mrxca+orzva4ktlsziucutwvxgiuxigewo5/ywwfmz2qegkwvkzg1zdmtag==} '@tsconfig/node14@1.0.3': resolution: {integrity: sha512-yst8mhdixwk6hw3i1v2aerqz5wfxg1g43mqoylm2nc6388fq5jcxyr5mrsqvilx/gjydol0bfxd8nmf+zn/iow==} '@tsconfig/node16@1.0.4': resolution: {integrity: sha512-vxhuy4j8lyeyinh7azl1pdd43gjhzh/tp2wen8tntqbloy+a0xbt8djk1/ocpuooyg/ja757rg0cghcwc8ofma==} '@types/chrome@0.0.270': resolution: {integrity: sha512-advkowv7ynjfyczzxl2brluz6stgw+9okg37b422uepf2pcxufa/xderi0t18wtuwpx0tmfezqq6moxvk1ic+q==} '@types/estree@1.0.6': resolution: {integrity: sha512-aynb1nqyy49te+vravgmzfcgjys91my5p0tkudclem+gnna+3t6rwitxrlycpahpqsqbn5ce+ghpnpyxjhwxcw==} '@types/filesystem@0.0.36': resolution: {integrity: sha512-vpdxozuannb9fzdxghnqswag/jvdgm8wq+6n4d/d80z+d4hwh+bitqszavrqykan6weveeklm2oqigyhtgb0ra==} '@types/filewriter@0.0.33': resolution: {integrity: sha512-xfu8zxtw4gd358lb2jw25nxy9qagqn2+bkkjkoyfnczn4dkcfetk7sptrlpg66ywe3vwy9fnxprzawah9wfj3g==} '@types/har-format@1.2.15': resolution: {integrity: sha512-rpqh4rxluvtxkr0zqhq3go0rvxyv/yvqv4tnph95vbwuxzdqlk1etcmvqvmpdnghbt13csh9z4qt9abkiqh5ba==} '@types/json-schema@7.0.15': resolution: {integrity: sha512-5+fp8p8mfnc+ayzcdxrb2pkzfpgzqqwuzpseuuvlvm8vmcornyavbqofcxk8bqz4qsbn4oueeem4wdlfcysgha==} '@types/json5@0.0.29': resolution: {integrity: sha512-drljcwhyg4oaa77cxo64oo+7jwcwnizkzpdrrc71jqmqtlhm556pwko5buzqvzndkvbefliii+9tc40jnf5hnq==} '@types/node-fetch@2.6.12': resolution: {integrity: sha512-8nnerwkcg3rmtf69nlqjnoyucbafyefsjqkw3jcrlsqkwflhaoqrr5mxmoffgox3dkn7ufmbmyov8ysvlrvlda==} '@types/node@18.19.74': resolution: {integrity: sha512-hmwekkifei3l605gfdv+/uwtpxp6jszm+xfk2ia6dnfswsvbrh9qp5tgf4lnfomfpvuu0wnkcwpxzpgn5ufo4a==} '@types/node@20.16.10': resolution: {integrity: sha512-vqukgwtjeirfcvk6cyriph3mzyiylny0fkieyhwbcowlegs4opurggklebrtlqdsmibximh6xexniiynuv3wpa==} '@types/node@22.7.4': resolution: {integrity: sha512-y+npi1rfzds1ndqhhtoqeix2tis79sweaw9gyhkkx8bd0chpfqc+n2j5oxocpzfojbebt6dnenng9my0zk1xlg==} '@types/prop-types@15.7.12': resolution: {integrity: sha512-5zvhxytrnrluoe/jap4gvssduvuznwkkozrcdbwyte7bizywwdc2acezg+csmlfrfvgeafqpfnabipjxfddv1q==} '@types/react-dom@18.3.0': resolution: {integrity: sha512-ehwaputmmbmxufoikhqlibun6ufg81swlmoaugodjf14sobocmdu04gdoyi0wojjhd144tl32z4ydqcw3dnkqg==} '@types/react@18.3.5': resolution: {integrity: sha512-weqmfgjlgulcqhgyrghxnkrxctitc6l/nbuwfwpctarg3t9psququmuvexzeca+mgly4vo5gzjci0a3or2lnxa==} '@types/retry@0.12.0': resolution: {integrity: sha512-wwkoclttiizczhxnpy4wikvawmdyhp8q6dmc+ejuzamsycb7hb32kh9rn4+0gexjmpmzsaqjgurxigatpegava==} '@types/uuid@10.0.0': resolution: {integrity: sha512-7gqg38eyhgyp1s+7+xomftl+znhckv6dwnaczmjmo1vgmugyf3tcnxvg4t1uk89mlnwnltny3tpopcoyp1/xhq==} '@types/ws@8.5.13': resolution: {integrity: sha512-osm/gwbtpkghv8xktunnegtrisvf6owmf5w+jtafow472dptdm0dlgv4xct6gwqrcc2xvovvre/0baoqcl2qka==} '@types/yauzl@2.10.3': resolution: {integrity: sha512-ojoftv0lsuadze3le4dbkx+ks9g36nzoesap90uik0yma/nhkjhqlsgtndornraibqfzjxdrqa0ytj6mnrgz/q==} '@typescript-eslint/eslint-plugin@7.18.0': resolution: {integrity: sha512-94eqtwz40mzbc42atnibimbedltsj9rqhcc8vc/pdbxi4k8dvwuav4o98dk50m1zb+jgfxp43fp7f8+fp8r6sw==} engines: {node: ^18.18.0 || >=20.0.0} peerdependencies: '@typescript-eslint/parser': ^7.0.0 eslint: ^8.56.0 typescript: '*' peerdependenciesmeta: typescript: optional: true '@typescript-eslint/parser@7.18.0': resolution: {integrity: sha512-4z+l8i2oqhzv8qa132m4wnl30ypzgyoqvbfmgxdh/k5ux0pnqtu1c6za9st5r9+tavvhitwmbnkzpcj/glvftg==} engines: {node: ^18.18.0 || >=20.0.0} peerdependencies: eslint: ^8.56.0 typescript: '*' peerdependenciesmeta: typescript: optional: true '@typescript-eslint/scope-manager@7.18.0': resolution: {integrity: sha512-jjhdie/fpf2b7z1uzc6i3owkbgchb87qw7awj6jmeqnofdfbjwtjt/xfwcpvnkpgwlcjaog5vtr+vv8+w9jfla==} engines: {node: ^18.18.0 || >=20.0.0} '@typescript-eslint/type-utils@7.18.0': resolution: {integrity: sha512-xl0fjxucladux2syqzuusoj2sg5/i1aaze+axqmlnsknevmvylf+cbwlb2w8d1tinfusikhmfta+p+hoofrlea==} engines: {node: ^18.18.0 || >=20.0.0} peerdependencies: eslint: ^8.56.0 typescript: '*' peerdependenciesmeta: typescript: optional: true '@typescript-eslint/types@7.18.0': resolution: {integrity: sha512-izqi+ds1y4edyutlooc+aumxne9xs/ycigkja7xptkv6ncbd3hp/prggmdwnfkv2thmyyldp1wrpm/id99sptq==} engines: {node: ^18.18.0 || >=20.0.0} '@typescript-eslint/typescript-estree@7.18.0': resolution: {integrity: sha512-ap1v/bspnnyhmhts8cf1qq6q1ifwwrvaqgrvbfkwlo3/lh29oxa3pts+c10nxrxibrdnomqzhgdwve5f2d6oza==} engines: {node: ^18.18.0 || >=20.0.0} peerdependencies: typescript: '*' peerdependenciesmeta: typescript: optional: true '@typescript-eslint/utils@7.18.0': resolution: {integrity: sha512-kk0/rna2j74xuhvcoczxdfbmf+aq/vh83cxaohiec+2gis4mf8jjxt5eafyd3k0saxtpuwxaioiovhwzvdt/kw==} engines: {node: ^18.18.0 || >=20.0.0} peerdependencies: eslint: ^8.56.0 '@typescript-eslint/visitor-keys@7.18.0': resolution: {integrity: sha512-cdf0/gf81qpy3xyyjkdv14zwdmid5+uuenhjh2eqfaf0ni+yayq/lzmaijdhnjxzi7ulzwila+v7owoyn6curg==} engines: {node: ^18.18.0 || >=20.0.0} '@ungap/structured-clone@1.2.0': resolution: {integrity: sha512-zuvdfrmjiucdqumczqad6kl28mjnqqn8xnaqieq9pnm/hcptsgfrxcofwj1ow4lfb/tnymjpwsnbvepc1xfqrq==} '@vitejs/plugin-react-swc@3.7.2': resolution: {integrity: sha512-y0byko2b2tsvvf5gpng1eehx1ovpc7x8yns1fx8jdzljp4ls6cmkcpflw47cjyomrshqdoqw4qcgjsu9vvlcew==} peerdependencies: vite: ^4 || ^5 || ^6 '@webassemblyjs/ast@1.12.1': resolution: {integrity: sha512-ekfmuoprruty5uii4qjdgppqfwjomz5jegfwid9mnoqifk+e0vqoi1qh56jpmzszel53jknnzscdmftjyg5xwg==} '@webassemblyjs/floating-point-hex-parser@1.11.6': resolution: {integrity: sha512-ejaj9hfrj2xmsnhk/v6fu2dgs+i4uaxbxgemofq/jfq6mdqg/wxtwleqrlls4ovfdhv8rynvwh27yjlmyysxhw==} '@webassemblyjs/helper-api-error@1.11.6': resolution: {integrity: sha512-o0ykop4pvu4rn8atjgayj9hc2sv5ulkzchhxqwj8butalvnpdc2jowh4ewe6cx0txsfln/uyav/phes2txg//q==} '@webassemblyjs/helper-buffer@1.12.1': resolution: {integrity: sha512-nzjwqw99dndkr9bvcozclujjulqkjh+kvzvl6fmq/ti5zteywt1kzmyoxltxlzjmdtvlcdgwsyrkohetoptxcw==} '@webassemblyjs/helper-numbers@1.11.6': resolution: {integrity: sha512-vuihz8lzoiwhbohieobxvm6hwp034jwmc9kuq5gdhzh0wilvlipcmcdpjzg4c11choq25tfiqj9kavadvx7n3g==} '@webassemblyjs/helper-wasm-bytecode@1.11.6': resolution: {integrity: sha512-sffhkwcmbpro9e7icf0+gddywydvil8bppjjjl0whxcdetktxdmtwlgvzohbqucy4be1lknfwtmxojufzysjda==} '@webassemblyjs/helper-wasm-section@1.12.1': resolution: {integrity: sha512-jif4vfb6fjlulsbgemhuyk1j234gtng9dbj4xjdoysoj518xj0ogsni59cuqf4rrms9oubuxdddybvfptypa5g==} '@webassemblyjs/ieee754@1.11.6': resolution: {integrity: sha512-lm4p2cspnvbij6u1f19v6wr56qz8jchg3qijtlswzfcmx6wsoricyj6i63f9yu1keutrpg+kjkiiakevhpdxrg==} '@webassemblyjs/leb128@1.11.6': resolution: {integrity: sha512-m7a0fhe67dqxgouf1tbn5xqcdwongaauoulhifgfievka6tu/edls6xnilkms6frxaqujrpni3zzkjw6fspjpq==} '@webassemblyjs/utf8@1.11.6': resolution: {integrity: sha512-vtxf2wtq3+up9zsg8sa2ywiqpzssmyxj0qvivp6xkgcut8p8yj6hqi7l5ecnwx1t/fydsv07hqs2wtfbbof/ra==} '@webassemblyjs/wasm-edit@1.12.1': resolution: {integrity: sha512-1duwbvvadvs5mgnxbe+c9nfa8qrcz6ikquqjjmr10k6o+zzsrvesil54dkexiowcfcpdr/q0qamgb01+sq1u6g==} '@webassemblyjs/wasm-gen@1.12.1': resolution: {integrity: sha512-tdq4ojh9fcohaw6oimxqiictq5kuxtgrkvxbso1hqnsy6lam5gsdfwwesxpao0yzgsgf182e/u0mdnhua0tw7w==} '@webassemblyjs/wasm-opt@1.12.1': resolution: {integrity: sha512-jg99j/2gg2iaz3hijw857avyekze2saskcqlwizxjji5wstnopvoat3gqft/q5tb2djncjbtmocy/su1gfxpbg==} '@webassemblyjs/wasm-parser@1.12.1': resolution: {integrity: sha512-xikii7c2fhxysxxe3corvupsheubtpcfhbpfj4gmu7krlyozanztwuu0ibsqvmqzunk2+glrgwceqzo1wclyaq==} '@webassemblyjs/wast-printer@1.12.1': resolution: {integrity: sha512-+x4waloisvwqmikjbcvy2e0rwpskq9f688lkszhbcpycbbuii3o7m8facbdmwdojpaqvjincrg8j0xhkyqfvea==} '@xtuc/ieee754@1.2.0': resolution: {integrity: sha512-dx8nkgqcgwsc0ejsqyt5lwp4dh5flhnmuwwbry7x0ncagr0ztuyeesgmwtyvetxmsngy+qit4qyt/miytotpea==} '@xtuc/long@4.2.2': resolution: {integrity: sha512-nuhqby1pb/d8xu6s/thbgoaiap7hoydq32+bfzilj8ivkukahqnwfn6whl79owj1qmunon/yphktdioucipkaq==} abort-controller@3.0.0: resolution: {integrity: sha512-h8lq8taczynr3vnqtgibj+todhi5/+l06au2pcriv/gmet0eaj4twwh41so9wnhdiqsej19q0drzdwdeahtweg==} engines: {node: '>=6.5'} acorn-import-attributes@1.9.5: resolution: {integrity: sha512-n02vykv5ua3ehgm/z2dqrcd56kl8tydb2p1+0p83pclmnc/nc+anbqrhiownsq4ke/kvdpry3c9hdtc/a3ehnq==} peerdependencies: acorn: ^8 acorn-jsx@5.3.2: resolution: {integrity: sha512-rq9s+jnhf0ichjtdxxllj7g41ozk5slxtp0lhwya5cejwn7vkmkp4ppri6yeepv2pu65sasegbxtiinmdfdxgq==} peerdependencies: acorn: ^6.0.0 || ^7.0.0 || ^8.0.0 acorn-walk@8.3.4: resolution: {integrity: sha512-ueeepnujpqee2o5aiynvhu6c0a42mndsideqy5bydrkuc5r1zuufnm27eefjgoehjqgn3ulervmtxajgfxbt4g==} engines: {node: '>=0.4.0'} acorn@8.12.1: resolution: {integrity: sha512-tcpgyi9zbizt9jbv6oye477v6mtlxvvi0t0g3sniye2apm/g5huba1+k89vgeovbg+jyccrfhl3adxerouo6jg==} engines: {node: '>=0.4.0'} hasbin: true agent-base@7.1.1: resolution: {integrity: sha512-h0tsyfndmommnjqbn8wfv5yc/2ej+vxecwoadzjt554xp6codzhpx3h9qmqecxvrgisop1phjy1smwqvyjouoa==} engines: {node: '>= 14'} agent-base@7.1.3: resolution: {integrity: sha512-jrr5wdylq8ckoe6hei19ggznxm6rbgwfl3bg0yitgdimvjgtavdzk4pu6cl4u4igsws4a1fd1vq3ezrhn4kmfw==} engines: {node: '>= 14'} agentkeepalive@4.6.0: resolution: {integrity: sha512-kja8j7pjmnconqatsb8fq+we2msu2dj9d4xkoj5pfwidrma6slsn1ff4mor4jcbfrssxr4keiiysju0n9t5hiq==} engines: {node: '>= 8.0.0'} ajv-keywords@3.5.2: resolution: {integrity: sha512-5p6wtn0ddtgvqk6vjceju19igahudalcfabd7yhdgea6bcqnml+cpveljq/3hvfwd1aof6l386ougkx6rfymiq==} peerdependencies: ajv: ^6.9.1 ajv@6.12.6: resolution: {integrity: sha512-j3fvlgvto527anyyyjogtyjbg+vnnqyve0m5mmkc1tk+nxappkclmil0az4dblvcnogshhm+kze4zuykbomg4g==} ansi-escapes@7.0.0: resolution: {integrity: sha512-gdyo7a61mr0folasvc9/rihf7l96sbc6dewzeou+kaea5bzyqrpipojrvoi4axgjs/ycu/fbtdlruka4odrvjw==} engines: {node: '>=18'} ansi-regex@5.0.1: resolution: {integrity: sha512-qujqxltsugl2lh9suxo8vwsy4soanhgo6lnsm84e1lbce8s3o0wpdirzyr9z/zzjmlmwv37qoob9pdjlmuekfq==} engines: {node: '>=8'} ansi-regex@6.1.0: resolution: {integrity: sha512-7hsx4qqb4cspcilpvfwyre79o3xsizddler21kerq71oapodf8jl725agjmfaybooiqoljorlum81speukpkva==} engines: {node: '>=12'} ansi-styles@4.3.0: resolution: {integrity: sha512-zbb9rcjat1rbjivdb2hqkfhnylxgtk8nurxz3izwd3f6ntxbxzqcnnsi1lkx+idohdplfp222wvalihezjqseg==} engines: {node: '>=8'} ansi-styles@5.2.0: resolution: {integrity: sha512-cxwpt2sftzttxcfolzgeee8o+c+mmuggrnibcxnuwxufjhe6a5hz7qwhwe5ogasyi0ijvklqwx1asg+cjokeia==} engines: {node: '>=10'} ansi-styles@6.2.1: resolution: {integrity: sha512-bn798gffqx+viw3r7yrgwrqnrn2orkekujjl4jnn4e8gxxbjtg3fbreiiy3l8/hrwuwieczvi4quotp4mervug==} engines: {node: '>=12'} any-promise@1.3.0: resolution: {integrity: sha512-7uvmkalwrt1wgjl1rrgxosjw/0qzfiegpegvzg9kjp8vrru55xthbwnqq2gpxm9ulbcuhxm3iqx9ob4mzr1b2a==} anymatch@3.1.3: resolution: {integrity: sha512-kmrefur0b4t+d+obkjr3kyqvocp2xaszo55ucb6mgqmd3kbce+mwtyvvv7d/zsdebnnv6aczuutkihqxvtr1rw==} engines: {node: '>= 8'} arg@4.1.3: resolution: {integrity: sha512-58s9qdqg0xx27ywpst9fjxivjyl432ycwfdmfz+71raqurzef7lrkqz3lhlowcs4flnbplp533zx895seochva==} arg@5.0.2: resolution: {integrity: sha512-pyjyfolkq9y57jvq6qlo8dagnqswh8m1rmjydqdut6xbwsgk36p/z/v+p888pm69jmmfs8xd8f6i1kq/i9hugg==} argparse@2.0.1: resolution: {integrity: sha512-8+9wqebbfzpx9or+wa6o29asiogermzcgtaindpmhhyag10f05asfvbbceqgf/pxw1ejaz+q2/bebg3dvurk3q==} aria-query@5.1.3: resolution: {integrity: sha512-r5ij5lkuhybztufuoaznmboyjwq8o6sqnqtk7cloqdydi54vnborp49mb14kbwgg1qd3jfo9hjdz+y4kutfdoq==} array-buffer-byte-length@1.0.1: resolution: {integrity: sha512-ahc5w1xgou+ktxix4sao8ki12q+jf4i0+tmk3sc+zgcynshkhxzpxdimbehiuykkkdwvffijl1tzt6ewscs1mg==} engines: {node: '>= 0.4'} array-includes@3.1.8: resolution: {integrity: sha512-itawrbybqpgxkghzpguulwnhvf5hpy1xicfsgqyigglbbxmg5vsjxqen3/wgojppnev1rtblkxbmvxm8hpjstq==} engines: {node: '>= 0.4'} array-union@2.1.0: resolution: {integrity: sha512-hgyxootyuycm6stue6ejgnd4eoewai7zmdfqo+kgjnlzmbdz/cr5pf8r/cr4wq60sl/p0ikcjueepws3gfriyw==} engines: {node: '>=8'} array.prototype.findlast@1.2.5: resolution: {integrity: sha512-cvvd6fhg1z3popblxo6e6zr+rskeq9l6rzhaay7llfhkswyubboums0e9o24oopj6h+gercx0yj+tjlbk2ehyq==} engines: {node: '>= 0.4'} array.prototype.findlastindex@1.2.5: resolution: {integrity: sha512-zfetvrfa8o7einn++n5f/kacw221hrpgsdmcpndvupkpzec1wuf3vgc0qby1bbhs7f5dvyjgteu2llh5bqegfq==} engines: {node: '>= 0.4'} array.prototype.flat@1.3.2: resolution: {integrity: sha512-djyb+zx2vlewy8rwlncudhjdxs2xogm602s9e7p/uphgfehl00criif+in/g/auj7kgpb6yo/erdi5v2s8iyca==} engines: {node: '>= 0.4'} array.prototype.flatmap@1.3.2: resolution: {integrity: sha512-ewyx0c9pmpcsbyhsw4r+9zdu7sgjfc86qf/kktuscrdhfbk0snllkat5qvchnrggc5np/ly/y+qkxkqonx54cq==} engines: {node: '>= 0.4'} array.prototype.tosorted@1.1.4: resolution: {integrity: sha512-p6fx8b7b7zhl/gmusay0d15whvdccw3mngnbzpi3pmejdxtwsj2jeai4y6oo3xihfzusgpwkc04myt6kgvc/wa==} engines: {node: '>= 0.4'} arraybuffer.prototype.slice@1.0.3: resolution: {integrity: sha512-bmxmkajg13ebsvscxtaya4mrc5t1uaxa2kxigtnfz079hiwxekkmkgfrh/njqamalsrxo5h4wffkpealjwbs3a==} engines: {node: '>= 0.4'} ast-types-flow@0.0.8: resolution: {integrity: sha512-oh/2e5fg20h2aprbe+ql8jzqfko0yzaf+j4mnq7bghfavo7opsla8a0y9sbwomhdsbkhts8tqnaybfnw5dwbvq==} ast-types@0.13.4: resolution: {integrity: sha512-x1fcfnfifvyddztalii71vg5uvdwgtmdtevwaxrgeir8vjmonccxjx7e+usjdthlwfmt9mysbqgf9b9vjr6w+w==} engines: {node: '>=4'} asynckit@0.4.0: resolution: {integrity: sha512-oei9oh4trh0yqu3gxhx79dm/mwvgvbzjasnark+bshkj0s5cfhcgyakrebjrhwatxkbz+ioidylxrkim2mjw0q==} autoprefixer@10.4.20: resolution: {integrity: sha512-xy25y5xsv/weoqzdyxxme4affkzi0p23z6fs3ygymdnkjkcgonkl0itxca85utqasgfcqyf3ua6+c7wuvx/16g==} engines: {node: ^10 || ^12 || >=14} hasbin: true peerdependencies: postcss: ^8.1.0 available-typed-arrays@1.0.7: resolution: {integrity: sha512-wvujbtsgn7+7sjnpq/9m2tg350uzd3q62ifzlbrar1bsmlco1zaew+bj+d090e4hiizlbctdwe4mh4jvudajzq==} engines: {node: '>= 0.4'} axe-core@4.10.0: resolution: {integrity: sha512-mr2zakwq7xuajp7pawqwrhhk8mqq6jaanwsjmjxil0r8bpiomtqstloolgykji1rcl++3dcqza3zwqpt+9ew6g==} engines: {node: '>=4'} axobject-query@3.1.1: resolution: {integrity: sha512-goklv8dzrk9huh975fnhzhnio4junfcfv/dszv5vwugdfji6vq2vwoyjyjynebbe8ah87tduwp5uydr1d+iteg==} b4a@1.6.7: resolution: {integrity: sha512-onayll5b7lekalw87fuvafqw5rvr9rjwgd4kuwnq6drrnmavaucglipfvlzrpq4twor9p0ixgnox50jyccdsjg==} balanced-match@1.0.2: resolution: {integrity: sha512-3oseuo0tmv67hn1ambxsk4yaqu7tjihlbxrdzoph0kw9+cex4braax0anxt0tx2mrprpwwqapwilisejhyu5pw==} bare-events@2.5.0: resolution: {integrity: sha512-/e8dde9dsblyh2qrz64pepadoq0f4gbl1sujormph7xoiixfy8vwab/4bflh4y88/hk/ujkcrqkc+ps0mv873a==} bare-fs@2.3.5: resolution: {integrity: sha512-sle9etxifpdjrt6ygemq1wgfleevzwy+xap1xqgl56htcrisc2chcz2tq6dbpch2tnnxwueughweo+lrqtyuiw==} bare-os@2.4.4: resolution: {integrity: sha512-z3uii2yi1mk0sxerdc4o1kk8aoa/e+fnwzctipb/dftwylypue99libgraqki914jq//yawylcat+mknkdixrq==} bare-path@2.1.3: resolution: {integrity: sha512-lh/eitfu8hrj9ru5quup0io1kjwik1btjzo7jh1p5dwmq2el4hfulfi8fonahslgifhn63p84cdy/x+pisgcxa==} bare-stream@2.3.0: resolution: {integrity: sha512-pvrwciewguecykeurxwv06m079r+frjaqjbek2p6oygro43o+z0lrpzzejlc4mb6c2rpz9axj1s7nletoho6ea==} base64-js@1.5.1: resolution: {integrity: sha512-akpaylhn8t4svbohcy+b5+kkgvr4vrsd8vbvrbiqjps7fkdtkjkdry6ji0rujjc0kzbneplwzxq8iypo41qewa==} basic-ftp@5.0.5: resolution: {integrity: sha512-4bcg1p8xhuuqcii/s0z9wihirqvpmermm1any+mx5gegd7fad3/msqudglol9wocz4/jbg/wjngqojf6libdtg==} engines: {node: '>=10.0.0'} binary-extensions@2.3.0: resolution: {integrity: sha512-ceh+7ox5qe7ljulhoy0feh3phuudhacrueyl2vyghzwfpkniy/+8ocg0a3uusoyzavmylwulwqof3hl0jjmmiw==} engines: {node: '>=8'} brace-expansion@1.1.11: resolution: {integrity: sha512-icuphdfgrhx7h2vei/5xpz07zshb00tpugqhmytvmmo6518mcurmooyfldebl0g187ufozdahgwkcyfb61qgia==} brace-expansion@2.0.1: resolution: {integrity: sha512-xnaivq8em+kc6aulx6wuqiwvsnzsi9d3wxzv3fpwtga19f621kwdbsacfkxgkuhzwsy+my6il1shtxwefcytda==} braces@3.0.3: resolution: {integrity: sha512-yqbxgo/oszvd2isillro+7hf6q18ejrksesdomzkepkxct3gvd8olcoqdizgupr5fj+ede8go/lxc1bzfmpxva==} engines: {node: '>=8'} browserslist@4.24.0: resolution: {integrity: sha512-rmb62sr1zpjql25esanfgehaxcfwfa1k0guqcloajbacenegrqut3hydhxff1obqfidyqiw/clm5hsj/9k884a==} engines: {node: ^6 || ^7 || ^8 || ^9 || ^10 || ^11 || ^12 || >=13.7} hasbin: true buffer-crc32@0.2.13: resolution: {integrity: sha512-vo9ht/+p3sn7skwqcrgezjgbrsjytx+q1ptqc0wrwqhx0vpjraq6gthx8tvcg1rlk1byhu5gccxgogj7b0tdkq==} buffer-from@1.1.2: resolution: {integrity: sha512-e+xqcrwsbaaichtv6k6dwgc+bx+bs6vukjhhl5kox/bakbhixzqqowk4co22yelgp2ocmjwvht3hmxgypgnjfq==} buffer@5.7.1: resolution: {integrity: sha512-ehcyipbq4bsglvjb16k5kgaj27cishy/2jbmcrreo48y9rq3mauzwx3kvlba4u7myx02hdvj0k7c3wab3ju7fq==} call-bind@1.0.7: resolution: {integrity: sha512-ghtsnsyicq7sch7sz+m2rfoprolh8t2blsw6bbgrtlsahoib5iyavjf9gjwk3cytdamj4xdbpm1ca6pis0kv2w==} engines: {node: '>= 0.4'} callsites@3.1.0: resolution: {integrity: sha512-p8bjasxvzs+vidui11hhcqev74yt67yui5jjfnwiql235sbmjx4+qx9muvls5ivynenctx46xqlq3atue7ssaq==} engines: {node: '>=6'} camelcase-css@2.0.1: resolution: {integrity: sha512-qosvevhslijgywrx6rv7zkdmf8lbrmx+uqgx2+vdc+ki/ebnsy9kit5aj23aggu3pa4t9agwbnxwqs+ioy+2aa==} engines: {node: '>= 6'} camelcase@6.3.0: resolution: {integrity: sha512-gmy6fhylcy7uoelzusbxo2ucdh8owek996gkbrpsggtrjlm3j7jgxl9ic7qwwj4ivoe5awzwrmecddf7hqgjfa==} engines: {node: '>=10'} caniuse-lite@1.0.30001667: resolution: {integrity: sha512-7ltwjjcrkzkfmtqgsibmeuxmvfdfzq/nzijnmgcgzkkrvzjd72selldk1opf/oxzmt4fncpvtdvgqsdg4tcalw==} chalk@4.1.2: resolution: {integrity: sha512-oknbhfyrixpuuez8ibmmyea4nbj4ioqyuhc/wy9ky7/wvpcwio9va668pu8rko7+0g76slroeyw9cpq061i4ma==} engines: {node: '>=10'} chalk@5.3.0: resolution: {integrity: sha512-dlitg79d+gv1nb/vyccdfivjek1hiukt9qjrnvosutty1rr1yjsmpggtz3qjos+uw7wmwf4wuwbd9jxjocfc2w==} engines: {node: ^12.17.0 || ^14.13 || >=16.0.0} chokidar@3.6.0: resolution: {integrity: sha512-7vt13fmjotkpgipcw9jeqausepe+ei8nl6/g4fbamim0goolmua9nddo/dwp0zaxcr3cpq5zpbqmpaqgdda2pw==} engines: {node: '>= 8.10.0'} chokidar@4.0.1: resolution: {integrity: sha512-n8enuvced/kvrqlab1hr3mvpcvmvxtzjmea956u+4yijlmqed223xmsyj2tlukvr4jcctznnmpqduer72mmmza==} engines: {node: '>= 14.16.0'} chrome-trace-event@1.0.4: resolution: {integrity: sha512-rnjapalzuwaotjcit8lsddgn1apciqkchlmjxjpwlunpat5fy8xgu9/jnochv84wfixra0lrqb7oct8jrn/wrq==} engines: {node: '>=6.0'} chromium-bidi@1.1.0: resolution: {integrity: sha512-hislceczcuamwm3+55lig9xkmmf13k+bgkum9rwtdazguaht4h5jnwhdmd4u20vovug8ujnv9uz89qiif5uf8w==} peerdependencies: devtools-protocol: '*' cli-cursor@5.0.0: resolution: {integrity: sha512-acj4o5wkyszjmmdt4tzj93kxyydn/k5zpwsce6/0av/aa1pqe5zbiw0a2zfpqv7ll5/yb5hsurej6ufaf1teqw==} engines: {node: '>=18'} cli-truncate@4.0.0: resolution: {integrity: sha512-npdafdq0h/geigbpclz11d0v/zjewxmevzgemo3z5stptutka9o1ld6qwoiryisdzbcwn2xcjwmcp68w1is4ta==} engines: {node: '>=18'} cliui@8.0.1: resolution: {integrity: sha512-bsennyus75c4//nq9gqt1/cstxyo/8sb+aflakzaptfumsod9hfokgnudzpi/oqv73hnvk+sr+5pvrmd+dr7yq==} engines: {node: '>=12'} clsx@2.1.1: resolution: {integrity: sha512-eym0qwbturbwzwg0d386ogaw16z995piovo2b7bjwsbhedgl5e0zwaq65koggusneseidkb9isbtg/jk9dhcza==} engines: {node: '>=6'} color-convert@2.0.1: resolution: {integrity: sha512-rrecpsj7iu/xb5okycsfhsppfnnsj/52ovtrkb4zp5onxwvf3zvmmtoncofgc+crdpfk/u584fmg38zhcaelkq==} engines: {node: '>=7.0.0'} color-name@1.1.4: resolution: {integrity: sha512-doy+3auw3a2wnbzhiumzptcgjgulu/ubl/ubczf9oxbdo8ff4o8yvp5bf0efs8ueoyo5q4fx7dy9ogqgxgasqa==} colorette@2.0.20: resolution: {integrity: sha512-ifedxwowijkexl1excdiow4ubkjhldq6/eusvr9gmn7kvh3r9gq83e73hsz1nd1t3ijd5xv1wcwryo+d6kci2w==} combined-stream@1.0.8: resolution: {integrity: sha512-fqn4mrfujehf7cbbbmjfxhksdq+2kaarblmrbvcvfe5bb1hzkxtsfasdhdlz9zoywxh8lddnvmmoe/+5cdoedg==} engines: {node: '>= 0.8'} commander@12.1.0: resolution: {integrity: sha512-vw8qhk3bzm9y/p10u3vib8o/ddkva2otptzvd871qkjy74wj1wskfilmprpsdusx5rfk1arljzeta4pkfgnbua==} engines: {node: '>=18'} commander@2.20.3: resolution: {integrity: sha512-gpvkmm8vf2vqukj2lvzmd35jxejolcwj9cukugyk2nuhbv3+mjvplyyt+0+usmxe+oj+ey/ljenhzw75x/omcq==} commander@4.1.1: resolution: {integrity: sha512-nokm8xhkzajzfx8b2v5oaht+u5prqc2uca2vq9jyl/31o2wi9mxba7lifs3sv5vsc49z6pehfbmulvshkj26wa==} engines: {node: '>= 6'} commander@9.5.0: resolution: {integrity: sha512-krs7wvdkg86pwiuaqhdraqntxzkravccc6vfdl14qrz/dcwwuro7voiyxalxo7s5gkpqyivewcbgfdfxnhkjbq==} engines: {node: ^12.20.0 || >=14} concat-map@0.0.1: resolution: {integrity: sha512-/srv4dswyqnbfohgpz9o6yb3gz3srudqbh5rtuhgr7ahtlbyknvxw2bcfmrljaa7exhaxz8wshdodfvbkhkmqg==} confusing-browser-globals@1.0.11: resolution: {integrity: sha512-jspkdmh8zkmnhxdk55fz1tqvlveqtvobyjzrn9jzi0ujxk/qgamsphz7pgtqgpieqz/cqchwxcr7atdnhge+ya==} console-table-printer@2.12.1: resolution: {integrity: sha512-wkgoqrrvdnd89pceh96e2fn4wkbensp6lmhfjfynlmbguhefbmqqnuxxqd0oxg9caioq1ftvc5uijp9/4jujnq==} create-require@1.1.1: resolution: {integrity: sha512-dckfx3jn0mpiaxjisorvexijvekzaq7z2rzkxf+msr9tkdmhmsu4m2lclojrj/fhl8mk5vxmmya+ftrkp/3okq==} cross-env@7.0.3: resolution: {integrity: sha512-+/hkd6egcqcjgh2psjzuuitqbqynkor4wrfbrg4dtags1awo+gu52xph7m9scggxsymavs9bij8ezuagw0onaw==} engines: {node: '>=10.14', npm: '>=6', yarn: '>=1'} hasbin: true cross-spawn@7.0.6: resolution: {integrity: sha512-uv2qowp2nwzsy2amp8aribhi9dlzf5hgh5shab9oitgeydtijjyx0uy51qxdywbtahnua4xjzukca3ozkud3va==} engines: {node: '>= 8'} cssesc@3.0.0: resolution: {integrity: sha512-/tb/jcjk111nnscgob5mntsntnm1acnudipb/tkwzfhydrre47sox/18wf2bbjgc3zzcskw1t5nt5ebfoaz/vg==} engines: {node: '>=4'} hasbin: true csstype@3.1.3: resolution: {integrity: sha512-m1uqkml8rqk/szd0lnhtqxiplpimgm8sobwu7llncpsbtyy3yeu1vc7l4kt5zt4s/yoxhh5o7tiuulocnladrw==} damerau-levenshtein@1.0.8: resolution: {integrity: sha512-sdqsfb7+llfucqhuqo3+b8errj0oa4w9powmi/pugtuf7gfywgmkalcelnudftikzv+nvhql0ifzdri8ro7esa==} data-uri-to-buffer@6.0.2: resolution: {integrity: sha512-7hvf7/gw8e86rw0ptuws3ocbgdjii6szva7hcywc0yyry2copmlijxauhi6dk2hsnwjd9ifmt57i8ev2n4ynpw==} engines: {node: '>= 14'} data-view-buffer@1.0.1: resolution: {integrity: sha512-0lht7ouga5x3ijlowfhwk/5ehondprk0isxqvfn/nfrdu+cuc8iadfrgqz5bnrk7llu3jmkbxsxaqx+/mxytua==} engines: {node: '>= 0.4'} data-view-byte-length@1.0.1: resolution: {integrity: sha512-4j7wrjd3abazr8wp+ocicqq2dlukp4dvflx++hs5h5zkydwmi6/d/faot+yh6g2thh8flftvnoavn357nvsroq==} engines: {node: '>= 0.4'} data-view-byte-offset@1.0.0: resolution: {integrity: sha512-t/ygsytq+r995ej5pzld4cu56swa8inxysavirzw9apusqsoo2bqp+sbyzahr0pfkob+43lyy8rwban9jsuxna==} engines: {node: '>= 0.4'} debug@3.2.7: resolution: {integrity: sha512-cfjzyyai4thfiqvizrfqevttxhtncqwfe7x1ahgesctz6zblbfolrlpugtqybth6f8zervusywhfd/7wu4t1xq==} peerdependencies: supports-color: '*' peerdependenciesmeta: supports-color: optional: true debug@4.3.7: resolution: {integrity: sha512-er2nc/h7rrmxzbfceim6tcmmk02z8vlc2rbi1kebggpo0fs6l0s1nnapwmii3yw/+gojap1krg4w0hg80ocqgq==} engines: {node: '>=6.0'} peerdependencies: supports-color: '*' peerdependenciesmeta: supports-color: optional: true debug@4.4.0: resolution: {integrity: sha512-6wtz/ixcy/t6balozhae4ctp9xm+z5ky/pzyachrfeyvhojxlrm+46y68ha6hr0tcwessoxnideujqjfpz/rya==} engines: {node: '>=6.0'} peerdependencies: supports-color: '*' peerdependenciesmeta: supports-color: optional: true decamelize@1.2.0: resolution: {integrity: sha512-z2s+w9x73hauuki+n+9za2lblun89zigoygrsax+kuq6wkw4zowpeybkghqjwajjdckwxhy0vkehk8wzy7f5ca==} engines: {node: '>=0.10.0'} deep-equal@2.2.3: resolution: {integrity: sha512-ziwpnevours8bpt4192sqaowwm76jdkshyzmlty3bzgsswgq6pbah3dhcsw5xvaziczykdobpjwww5wfgt/6pa==} engines: {node: '>= 0.4'} deep-is@0.1.4: resolution: {integrity: sha512-oipzksmtg4/mriiaygo+okxdt7ztn/w3eptv/+gsidmdksjo0u4cfynfjpy+4skmucqgw2wxna+urmg3t8a/bq==} deepmerge@4.3.1: resolution: {integrity: sha512-3suqbmec77xqpdno7fryrog+ew3ph+gycbj+rk+uyyrmuwsvy0rmivtpn+qjlkfvwp/1pypapqyn0me2knfn+a==} engines: {node: '>=0.10.0'} define-data-property@1.1.4: resolution: {integrity: sha512-rbmvizlpa8v6e+sjzoo++hayqslrkg7msfiinmpfhmkorw7x+doxvjqs+qt69zgkzmyfdnimn2wid1+nbl3t+a==} engines: {node: '>= 0.4'} define-properties@1.2.1: resolution: {integrity: sha512-8qmqkqeasld5nx0u1b1oklelbuuuttj/anymrxbbbgdwh6us208ejd4xqq/i9wk7u0v6o08xhtwnt5xtebr6dg==} engines: {node: '>= 0.4'} degenerator@5.0.1: resolution: {integrity: sha512-tllpmr/t0m5sqcxfj85i4xaazxms5tva16dqvdkmwgmzi+dxlxnw3j+3vdv7vkw+thltmbok6i9rnz6nntj5cq==} engines: {node: '>= 14'} delayed-stream@1.0.0: resolution: {integrity: sha512-zysd7nf91alb0rxl4kgrkhbxl7eds1damedcovawxnld7sdhpngtuii2aakg7a7qs41jxpsz17p4vdgnmhk3mq==} engines: {node: '>=0.4.0'} devtools-protocol@0.0.1380148: resolution: {integrity: sha512-1cjabgqlxbyxvi+ujy/uduhjtj0kztsjnyjykqd9froxt33wdakdhnxrapmegzej/c3rcs01+avshmnpmkqbva==} didyoumean@1.2.2: resolution: {integrity: sha512-gxtyfqmg7gkyhqmb056k7m3xszy/myh8w+b4rt+qxbqsvaodc3xymqddphx1bgpgsdaa5siifona89ytratdzw==} diff@4.0.2: resolution: {integrity: sha512-58lmxksa4bnylz+hhmuzloepg09fv+ev6zme3vjihgdxzgcwz8voeepmalczg9lmqfvonmmkpttiytvg6udy7a==} engines: {node: '>=0.3.1'} dir-glob@3.0.1: resolution: {integrity: sha512-wkrwp9gr4kxfkgyzolmtugvi1uwffws377n9cc55/tb6duqyf6pcq5abiheshadpy9v6oasr2xcdidgmmwdzia==} engines: {node: '>=8'} dlv@1.1.3: resolution: {integrity: sha512-+hlytyjlpknig8xurg8wvmbp8xs8p71y+skks6zxwoegluepxtdoueih7wkdepwrq5jbpe6aovqfzfjuqkjxwa==} doctrine@2.1.0: resolution: {integrity: sha512-35msku4zxk0vfcuhedawt55dg2jnajhz1odvf+8ssr82eszy4qmxfuwso8oed8zrhvobsn18am0cjsdobx7ziw==} engines: {node: '>=0.10.0'} doctrine@3.0.0: resolution: {integrity: sha512-ys+q5i3hbf7gbkd4kg8a7ebnnwngltaewwywuijiym7zrlydm0bfxhjjpwlwz1rg7uaddzeidmi9jf3hmqiq2w==} engines: {node: '>=6.0.0'} eastasianwidth@0.2.0: resolution: {integrity: sha512-i88tyzwc9xiyhrq4/3c5rjjfgkjhlyw2lugihegerbnq6oy7ytybanspdxza8y7vup9ymdcya+eyq4ca7ilqwa==} electron-to-chromium@1.5.32: resolution: {integrity: sha512-m+7ph0vgbqqqptt2yrabjnksq2fel9pvx6ak3n558gdh9no8o6xn9sxxfwro9u9pbeg/bwq+tjxqr+exmxubcw==} emoji-regex@10.4.0: resolution: {integrity: sha512-ec+0oumy1rqm4o6llrgjtydvcvyty7chdnm4q7030tp4kwj3u/pr6gp9ygnp2cjmk5gq+9q2oqmrfjaz01dxjw==} emoji-regex@8.0.0: resolution: {integrity: sha512-msjyzcwnoa0ewahpz0mxpyfvwg6yjy1ng3xteoqz644vco/rpgnr1/ggt+ic3ijtzq8eu3tdm14sawnvumge6a==} emoji-regex@9.2.2: resolution: {integrity: sha512-l18dajsxsuk2+42pv8mls5jjt2hqfkfe4j21womgbuqsz2hl72nsuu785g9rxgo3s0zngvl42tihp3ztov/vyg==} end-of-stream@1.4.4: resolution: {integrity: sha512-+uw1inihvpqoavuhzryxd21icm+cnt4czd5rw+nc1wjoustos+te7fov7ahn7vs9x/oiyhlp5pr1h+phqahu5q==} enhanced-resolve@5.17.1: resolution: {integrity: sha512-lmhl3dxhtcfv8gm4keziuetq+7fpda0l2tuf34bddxpkz2a5xj5l/pchd5bl6rdccm9qgvu0swzzk1z1t4wwyg==} engines: {node: '>=10.13.0'} environment@1.1.0: resolution: {integrity: sha512-xutopkmggbz0mpypiiwr1kp4aewjjdz6smvurhimjdzgsrudplf5/s9hcgghyxmhs+6vpnuoiz2kfiu3fmns8q==} engines: {node: '>=18'} es-abstract@1.23.3: resolution: {integrity: sha512-e+hfnh61bj1x9/jlc5v1owalyuhdehhsqlkhcbitk8rbvkaull/begmxwrmxjpyrv4pz22bly570vvepa2ho4a==} engines: {node: '>= 0.4'} es-define-property@1.0.0: resolution: {integrity: sha512-jxaylkshreqqzj0eumqbvhtyqm27cft1t35+gcgdfol82jlsxqtj76zv6a0ylogenlumvlzsdsgirl8nfpt2gq==} engines: {node: '>= 0.4'} es-errors@1.3.0: resolution: {integrity: sha512-zf5h2kxt2xjtvbjvp2zwleicxa6j+hammzilypy4xcbg1vkvnx89wy0gbs+kf5cwcvffzdcfh2xscfnuls6csw==} engines: {node: '>= 0.4'} es-get-iterator@1.1.3: resolution: {integrity: sha512-spzmqhbe6jiitfn5q2pei//twxmafhwj/xeuyjtuse78i8kxaqmttzxpofkuzrpdptj+0nabpfenkmh2reptuw==} es-iterator-helpers@1.0.19: resolution: {integrity: sha512-zomwbcch5hwukkjkt8kdibzsz9i6mvg//+ldcinlcgov4+r7niy0ld8o03m0cjxl2spvf6esyvs6/gpifq1ffw==} engines: {node: '>= 0.4'} es-module-lexer@1.5.4: resolution: {integrity: sha512-mvnk56nimrowitfb7cqdwq0cqutbw+0bvlshjsse0munu+y1fc3bus/aqg7oung+/wkrrki7jfmwtvhkvfpllw==} es-object-atoms@1.0.0: resolution: {integrity: sha512-mz4iq6jwhobqjahnjwac1ztibh+2ohjamzao3oahcxyup7qxjf2fixyh+q71vowheoki2q/tnjao/kfxyizwbw==} engines: {node: '>= 0.4'} es-set-tostringtag@2.0.3: resolution: {integrity: sha512-3t8unmc3oqthkfusfq8r/bwaxlhvu/9o9me0fbc/my5iq/8h7ncvo947lmya6ldww9uh8yhf25zu6n7nml5qwq==} engines: {node: '>= 0.4'} es-shim-unscopables@1.0.2: resolution: {integrity: sha512-j3ybrxczdu4ulnqwxytoo/ojdmx6akgvc7k6few0a7f/0wltmkkn7i73ah5t2836uuxrqn7qg+iiuw/+yjksrw==} es-to-primitive@1.2.1: resolution: {integrity: sha512-qcollgzjtauo9miybclchtuahnjjf3pys1vidd7awiej1kyxkeqtctlaezaoh5zkrh0g2igpn6kwb4it8irpva==} engines: {node: '>= 0.4'} esbuild@0.25.1: resolution: {integrity: sha512-bgo5ltrgc7vxnqucae/rmvkdjllfgaywdyabvymoxqlfymb2bbrurewr5tege//4lcnjj9xrkovtqnyrfzhamq==} engines: {node: '>=18'} hasbin: true escalade@3.2.0: resolution: {integrity: sha512-wuj2qlxaqto4g6pq5c29gtcwgdyd8itl8ztlipgecz3jesaiiokotd8ju6otb3pacgg6xkjuyvhboms+bje/ja==} engines: {node: '>=6'} escape-string-regexp@4.0.0: resolution: {integrity: sha512-ttpcnj3xazx3gq8swrzjavajrs0uvxa2yakdb1jm2ykpz4g6egufaya3n5vteizefpk5wa4uxbkus5fkkjwdga==} engines: {node: '>=10'} escodegen@2.1.0: resolution: {integrity: sha512-2nlidtwuwjn0mrpqodtqbzbuhvdgy2p1vxsyu83q3xkxm7whx2ql8dkq782q9tgqunolezeyu9bzlnj1q88i5w==} engines: {node: '>=6.0'} hasbin: true eslint-config-airbnb-base@15.0.0: resolution: {integrity: sha512-xax3z4zzicflvh2ounvcx5oeofxda7giymuplvxoog5a7exjmruyqrgr+mhdhpk8lz4pttfobvcydbx3suouig==} engines: {node: ^10.12.0 || >=12.0.0} peerdependencies: eslint: ^7.32.0 || ^8.2.0 eslint-plugin-import: ^2.25.2 eslint-config-airbnb-typescript@18.0.0: resolution: {integrity: sha512-oc+lxzgzsu8fqyfva4qfavkiittyiiw3frb9kyw5owdprqfc7fzxgb20hp4chmlr+mbzgcll3jncovoydl9mig==} peerdependencies: '@typescript-eslint/eslint-plugin': ^7.0.0 '@typescript-eslint/parser': ^7.0.0 eslint: ^8.56.0 eslint-config-prettier@9.1.0: resolution: {integrity: sha512-nswl5bfqwepi1j4tjvnitzyv7dzxz+wp6i6zhrbgpchqhzruaelihe9urrkcbrnnb76umkdf3r+wtmncgpksqw==} hasbin: true peerdependencies: eslint: '>=7.0.0' eslint-import-resolver-node@0.3.9: resolution: {integrity: sha512-wfj2isz22jahuv+b788tlo3n6zl3nnjgu8cczbpzvvekbpajdcv4vy5wyghty5rofbcrnm132v8bscu5/1bq8g==} eslint-module-utils@2.11.0: resolution: {integrity: sha512-gbbe5hitek/og6muvj6sfuzeja/clznflvrlovhi/jgldc7fin5glay1wipw1a0v5i999mnsrvvrcogmmvqdbq==} engines: {node: '>=4'} peerdependencies: '@typescript-eslint/parser': '*' eslint: '*' eslint-import-resolver-node: '*' eslint-import-resolver-typescript: '*' eslint-import-resolver-webpack: '*' peerdependenciesmeta: '@typescript-eslint/parser': optional: true eslint: optional: true eslint-import-resolver-node: optional: true eslint-import-resolver-typescript: optional: true eslint-import-resolver-webpack: optional: true eslint-plugin-import@2.29.1: resolution: {integrity: sha512-bbpc0cuexzhimo4ff1btvwhpjjv28c5r+bttogacrc7uez801up0jadwkesk5ued6tg34uaczuvuh6qyy5yuxw==} engines: {node: '>=4'} peerdependencies: '@typescript-eslint/parser': '*' eslint: ^2 || ^3 || ^4 || ^5 || ^6 || ^7.2.0 || ^8 peerdependenciesmeta: '@typescript-eslint/parser': optional: true eslint-plugin-jsx-a11y@6.9.0: resolution: {integrity: sha512-nofocajg2pyqorjk19lqpqxmo/jpvdczdptndxy3kvom3jtvkabovqvd8wud0g8byr0igagydlzqwjoh/ybn2g==} engines: {node: '>=4.0'} peerdependencies: eslint: ^3 || ^4 || ^5 || ^6 || ^7 || ^8 eslint-plugin-prettier@5.2.4: resolution: {integrity: sha512-sftuymnhwyctucdtkpok+cezcnegktu2qtlwocxvrc0mfbtixo1i6hdyoi4cwhae5gztlwmtn3yfucyi7kjwpw==} engines: {node: ^14.18.0 || >=16.0.0} peerdependencies: '@types/eslint': '>=8.0.0' eslint: '>=8.0.0' eslint-config-prettier: '*' prettier: '>=3.0.0' peerdependenciesmeta: '@types/eslint': optional: true eslint-config-prettier: optional: true eslint-plugin-react-hooks@4.6.2: resolution: {integrity: sha512-qzlinjq4gindbcd8gpb5v0wh6g8q3sui6eff0x8n/bl9povs0atugc47ozmryowakdwaz5onboea3wr+dsgkuq==} engines: {node: '>=10'} peerdependencies: eslint: ^3.0.0 || ^4.0.0 || ^5.0.0 || ^6.0.0 || ^7.0.0 || ^8.0.0-0 eslint-plugin-react@7.35.2: resolution: {integrity: sha512-rbj2r9zwp2gynciak4xoamv57hrbh3htar0k7hvjwcqgrye/pw5px4b13eyjduoi0hfxyzhwbxagpotbwsgzkq==} engines: {node: '>=4'} peerdependencies: eslint: ^3 || ^4 || ^5 || ^6 || ^7 || ^8 || ^9.7 eslint-plugin-tailwindcss@3.17.4: resolution: {integrity: sha512-gjaehmcq2xffup/+vwefej9igrpezfg+skemtsxqusqdxba9xrk5bn0bp9jxg1vv9/wwpki1g3zjitu6mijhng==} engines: {node: '>=18.12.0'} peerdependencies: tailwindcss: ^3.4.0 eslint-scope@5.1.1: resolution: {integrity: sha512-2nxwbf/hz0kpepyn0cnbo+fn6xok7gahlqhgx/hizl6va0bf45rqoowhliy8lqdbuciadslcbnh2cfyquit5bw==} engines: {node: '>=8.0.0'} eslint-scope@7.2.2: resolution: {integrity: sha512-dot21o7ltmhdm+x9mb4gx+dzrztcujpl/wlctqxyrx5ivo0iytildtrqgqp+8n5s0gwsvmof9nqrjmogfqzlig==} engines: {node: ^12.22.0 || ^14.17.0 || >=16.0.0} eslint-visitor-keys@3.4.3: resolution: {integrity: sha512-wpc+lxeiyiisxplekuzu6svys1frio3mgxj1fdy7pm8ygzguax2n3fa/d/ag1wqboprdi+uy6wmul8/a2g+iag==} engines: {node: ^12.22.0 || ^14.17.0 || >=16.0.0} eslint@8.57.0: resolution: {integrity: sha512-dz6+mexnatibsbzwgou51u6omzihym2vcndtitti7qpnzm35akpr0f6vtw3w1kmn5pyo+tzvfh13wrhps6olqq==} engines: {node: ^12.22.0 || ^14.17.0 || >=16.0.0} deprecated: version longer supported. please see https://eslint.org/version-support options. hasbin: true esm@3.2.25: resolution: {integrity: sha512-u1suiz2odvwv4zpo56s0ncr5qrieahgtdn2or6fiog4wjvcjbvfb0qi4+ekowfh483pkguluu6v8z4t5g63uva==} engines: {node: '>=6'} espree@9.6.1: resolution: {integrity: sha512-oruzafkjortpf32kdsi5/75viwgezginggy2noosg3q9bnwlnmdm4hlnkl0re3n+njdxr037ay1+x58z/zfdwq==} engines: {node: ^12.22.0 || ^14.17.0 || >=16.0.0} esprima@4.0.1: resolution: {integrity: sha512-eguffw7upda+g4p+qhvnw0rytx/svejbdm/gctmaro0clut2hcekntpvhjv6ageqrcb/sbnop0kszm0jsawu4a==} engines: {node: '>=4'} hasbin: true esquery@1.6.0: resolution: {integrity: sha512-ca9pw9fomfckpvflxhbkuk90zvgibigovrjnbjljy7s7uq/5yo4bozcytjqexdx99rf6aacnrxhmcuhcz6sqsg==} engines: {node: '>=0.10'} esrecurse@4.3.0: resolution: {integrity: sha512-kmfkl3b6g+rxvp8n1vr3tq1kl/ocfgn2nyxetqp8/l3pkapua4g8cfvaof3su323cd4xypr/ffiohmkti6/tag==} engines: {node: '>=4.0'} estraverse@4.3.0: resolution: {integrity: sha512-39nnkffwz8xn1bu/2c79n9nb9hdzo0niyuqx6xyqunyoanqyywpotdzeeicch8bbu515t4wp9zmgvfvhn9ebpw==} engines: {node: '>=4.0'} estraverse@5.3.0: resolution: {integrity: sha512-mmdaruveqzintejd8dgmqmhwr11brq/cbp+pltydstnf3mio8ffeiinebx36zdnlfu/7a9f3guw49b3oqsvwba==} engines: {node: '>=4.0'} estree-walker@2.0.2: resolution: {integrity: sha512-rfkk/mp/dl7jvje3u18fxfujqltnr2q6qfmsmb7avcbx91ngj/ba3kcfza0f6dvdbw7ylrf/ndrn7pqrccyq/w==} esutils@2.0.3: resolution: {integrity: sha512-kvscqxk4ocp68sz0dkgekvi6/8ij300kbwtjq32p/dyewtswk41wytxaln1erma5z9uu/lx9d7fwsmv9sayx6g==} engines: {node: '>=0.10.0'} event-target-shim@5.0.1: resolution: {integrity: sha512-i/2xbnsz/uxrcu6+ndvjgkwdtm427+mqybkqzd321ducqjuqoujkia0im2+w2xtyhdkomz4dr6fexsd4sxl+wq==} engines: {node: '>=6'} eventemitter3@4.0.7: resolution: {integrity: sha512-8guhbzcwknfhydhr2ysurwertwhon2x8xelrlrrwpmfey2jjuun4taqmsulkuvo1k4dvzl+0pgfyoyshxvmvew==} eventemitter3@5.0.1: resolution: {integrity: sha512-gwkbvjiszk87elryosesuyevic9mvllf/nxalmos5dyrgzq9o5ovkbzavm06cvxyscwh9bdzfplqtlpa1j4aha==} events@3.3.0: resolution: {integrity: sha512-mqw+2fkqbalzq7v0my0iqdnxnoettp4r0ln9z7aaawcxgqea7bdii20ayribrfd/hx0m2ocz6s111cafkucb0q==} engines: {node: '>=0.8.x'} execa@8.0.1: resolution: {integrity: sha512-vyhnebxcifv2desc+p6b+y0ljsm0kru4ogjn44qfahby0tj+1v61tyd2+whusz6f9n5k+vl8k0sty7pefv4qpg==} engines: {node: '>=16.17'} extract-zip@2.0.1: resolution: {integrity: sha512-gdhu9ntwukygxdzbugtie+vxnwj0fppuetmdl0+idd5sta8tgphssn/eusa9mrpr9qndym6sxayzjnvcn/9rbg==} engines: {node: '>= 10.17.0'} hasbin: true fast-deep-equal@3.1.3: resolution: {integrity: sha512-f3qq9oqy9j2ahbe/h9vc91wlmkbccu/gdonknayg5hswo7blkj09hc5hynz9cgi++xlpdcigdaitvs03atr84q==} fast-diff@1.3.0: resolution: {integrity: sha512-vxpp4nqbujj6maaoafweun2cxwlcctljklutzf0ind4xq+qptma0b18zzy0jiqx+exrvcr/zqpbmik5lxshnsw==} fast-fifo@1.3.2: resolution: {integrity: sha512-/d9sfos4yxzpwkdkun7k2sqfktynmctzgfepz82x34im9/zc8kgxqoxg1linc/izprm/mbdt44nmx41zwqk+fq==} fast-glob@3.3.2: resolution: {integrity: sha512-ox2ruafqwf/orj8m737y5adxdqo0lab7/s5mnxcdtndd4p6bsyivsv9jqsatbtsq8khrplwihbvlunatxd+1ow==} engines: {node: '>=8.6.0'} fast-json-stable-stringify@2.1.0: resolution: {integrity: sha512-lhd/wf+lk98hzotctlvrahtfh5xyijijalxck7sautuansdylmxnhhsxedjqhxd7msr8d0ucmqlkwjcv8xvwhw==} fast-levenshtein@2.0.6: resolution: {integrity: sha512-dcxu6ifhqcks7tzky3hxp3y6qphy5sjzmrwmdrkcersoxwqdmhu9ig/pyrzyw/ul9joiyh0n4m0tbc5hodg8dw==} fast-xml-parser@4.5.0: resolution: {integrity: sha512-/pltqci96+fzmaolmzk4cwg1itcbfz/0jx7uijfchpnrx7tcegerugwbeiecm9mfhinudyk8dwyz+yrywdjutg==} hasbin: true fastq@1.17.1: resolution: {integrity: sha512-srvd3lwvixwg6by68zn7vho9a1pqcn/wbfaaasddfzljjvogx0p8z7v1t72grfjfjhu3ypzbuu25f7kaw2jn1w==} fd-slicer@1.1.0: resolution: {integrity: sha512-ce1qsb/vwyqozz+q1dgxr8lbynzeofhedungsmbqd3gw2lazx9zb3uiu6ebc/fmyjo9awwfnn0auchqtevs/8g==} fflate@0.8.2: resolution: {integrity: sha512-cpju47oaaocbg0pbvzsgptphmhqi5ejjh/jiu8tpj5q+t7ilvw/jayuqme7kob4r1zyehzbaiqpqpardbf5z8a==} file-entry-cache@6.0.1: resolution: {integrity: sha512-7gps/xwymblk2qlyk4nzpmoryjmhdixxuivy2qbsle6ljuodkvdkws/cpyjj3cvivph0oi1hvg1ovbmzldfbbg==} engines: {node: ^10.12.0 || >=12.0.0} fill-range@7.1.1: resolution: {integrity: sha512-ysgpe3whlk8zyi4twdg2jy3ebrz2rxowdxnld4bkqb00cc/1zw9awnc0i9ztdjitivtqvai9kalykrc+hbw0yg==} engines: {node: '>=8'} find-up@5.0.0: resolution: {integrity: sha512-78/pxt1wllldgtzds7sjq9hzz0vxd+zn+7wypee4fxqxcmdmqfgsepqxmicsqi3ajfv91bvssvntrjriw6ngng==} engines: {node: '>=10'} flat-cache@3.2.0: resolution: {integrity: sha512-cycena+ftcuklmhhqyctpclsq7qf38pkjzhsgnisqf5r4ftokdwabfdl3hzaeqmvt1lheysw5twglvpyyb4vbw==} engines: {node: ^10.12.0 || >=12.0.0} flatted@3.3.1: resolution: {integrity: sha512-x8cqmllie7ksnudsdzen8fyk9ret4dt67osg/dngnytsdbg4ufajfbnueiv+zcvavwfy56ijm9sh51jvaehnxw==} for-each@0.3.3: resolution: {integrity: sha512-jqyflp7mo9viyqf8ykw2v7a+2n4qjecei5+dz9xraio1ign81wjih7fb9vsowvqfntmsa4h2roqtrrxivduzmw==} foreground-child@3.3.0: resolution: {integrity: sha512-ld2g8rraymyfxbheqmz8zahbi4j4us1i/cxgmdnjyfwddmxlvcdp051dzfu+t7+ab7wv6smqpwmyfij5ubffvg==} engines: {node: '>=14'} form-data-encoder@1.7.2: resolution: {integrity: sha512-qfqtyan3rxrnck1vyaa4h+ms9xdppqvlza6xmmgfvho32x7/3j/exctd6qpxm0vh2gdmi+poehybzvqfmtto8a==} form-data@4.0.1: resolution: {integrity: sha512-tzn8e4tx8+kkxgpk8d5u0fnmjpujw3lwc9lslxxob/+gtsjg91co8bswy73aplgazzzbxeyzjuxjkhh2w+ezhw==} engines: {node: '>= 6'} formdata-node@4.4.1: resolution: {integrity: sha512-0iirzp3uvdjvgt9p49ataqjk84trgleneduqfdlzq1roc9cwlpk6avf8eenzncaqponwkg35x4n3ww/1thyaeq==} engines: {node: '>= 12.20'} fraction.js@4.3.7: resolution: {integrity: sha512-zsdfxo51wgaxrey55a7la9lscwpwv9rxiryabrlvofblh/shpnrtsxeuuifxkkovicnxq+o8jtbjvjs4m89yew==} fs-extra@11.2.0: resolution: {integrity: sha512-pmdi3uwk5nfuxh7xdtlvns17xjs7vw36is2+w3xcv8svxib4nyatf4ctkvy5bksjx0y4nbvzcq1/ejteyr9ktw==} engines: {node: '>=14.14'} fs.realpath@1.0.0: resolution: {integrity: sha512-oo0ph2lk6a0hznadau5itzhpi6pulvi7jmvnxuqrtw4owf2wk8losabtgdctp4ggrg2mbgnwo9x8k1t4+fgmdw==} fsevents@2.3.3: resolution: {integrity: sha512-5xodfx+fl7faatnagmwppbftwh/r77wmmmqqhgs65c3vvb0yhrgf+b1ymz3441tmj5n63k0212xnojwzlhffqw==} engines: {node: ^8.16.0 || ^10.6.0 || >=11.0.0} os: [darwin] function-bind@1.1.2: resolution: {integrity: sha512-7xhnxh7qx9xg5miwxkhumtox/mirncogdrxwsmt2par23whp6mrrln7fbsfpcpr+ovo0f744iugr82njmfg2sa==} function.prototype.name@1.1.6: resolution: {integrity: sha512-z5kx79swu5p27weayxm1tbi5ze/lbiyingu3qyxuof9b2rgxyyf9dy9cx+iqv/lc8wcg6l82zwuppss9hgehig==} engines: {node: '>= 0.4'} functions-have-names@1.2.3: resolution: {integrity: sha512-xckbuxytiqt97tq2x2amb+g163b5jfysyk0x4qxnfwbfqkmnzoirhb6spzi9/qv33weuvvybuiid4nzniyqarq==} get-caller-file@2.0.5: resolution: {integrity: sha512-dyfp3bm/3yhtqocul/w0ozhr0lpkegrxotchwcqnednltqfwxvfhebq94eio34afqpo0rgki4cyiifty06h2fg==} engines: {node: 6.* || 8.* || >= 10.*} get-east-asian-width@1.2.0: resolution: {integrity: sha512-2nk+7sivb14qrgxfhcm84td4bkqz0rxpumt8ag5kpoq7j5femag0ubxdtoshqnuhsu28k55qnceesxxrzgzkwa==} engines: {node: '>=18'} get-intrinsic@1.2.4: resolution: {integrity: sha512-5uyhsjh8vjbtv7oslg4bznjyhdori6waycxmmcdntrccrha/fcfkotfz2jkke0hddfuf7/oquhzumxjk7pabrq==} engines: {node: '>= 0.4'} get-stream@5.2.0: resolution: {integrity: sha512-nbf+f1razvcu/p7rjzga+yb4lfyxrpl7a6vmjru8wf9i1ckvp/qwpnzhnolwbtky6dvtfizfmsyqxblotqprpa==} engines: {node: '>=8'} get-stream@8.0.1: resolution: {integrity: sha512-vaujspbffn/lmcjvomvsadmscjys1auj5zulnn5uoycy531uwmdwhrwkcgkngu93m5hsxp9lp2usoryrbtqowa==} engines: {node: '>=16'} get-symbol-description@1.0.2: resolution: {integrity: sha512-g0qyk1dzbxgwk+ngc+ltrh2ibp2f7zbkbmbjzcderh6ehlhsr6+9irmcut/09zd6qkarhusn529sk/yl4s27mg==} engines: {node: '>= 0.4'} get-tsconfig@4.8.0: resolution: {integrity: sha512-pgba6textz0fjan1qkjajiekodj3csi2chulohjnzl/ttu8mvrq3b+2t5uopfra4rmsorclbjjalkjumjg1paw==} get-uri@6.0.3: resolution: {integrity: sha512-bzurjbs9ecub4cfol8r4w3v1cpssyajlsthnkz5bxbpdchn5tirm10e2envfnvbn3dat3dugx0opsbkkaopanw==} engines: {node: '>= 14'} glob-parent@5.1.2: resolution: {integrity: sha512-aoigsqcepijywp3arngx+5vntu2hbydzbgp45elw1vr3zb3vzleyed1sc9hnbcoc9/srmym5rpqrkgz4as9zow==} engines: {node: '>= 6'} glob-parent@6.0.2: resolution: {integrity: sha512-xxwi8eohvqgwp6idl+3b0r86f4d6ax6zsu55hfb4ydceuxlxc5fcyeou+nngfts4teju/11rt4kjptmgbfmv4a==} engines: {node: '>=10.13.0'} glob-to-regexp@0.4.1: resolution: {integrity: sha512-lkx1hjxwymcprw/5yuzc2s7drpaihb21/v+e1rhurvnokkvb6bqmzt0vfv6/86znabt1k14yoiat7ndvox3iiw==} glob@10.4.5: resolution: {integrity: sha512-7bv8rf0k6xjo7d4a/pxylbucfb6c+vpd2/mb2yrdlew7jb5hexicd9ibfo7wpk8i4sevk6dfny9h7eybm3/shg==} hasbin: true glob@11.0.0: resolution: {integrity: sha512-9uix/bl6j2yabbxkoebrm4cipxgok8kqycopehscpwebu2i0hoqouydio6s3hluwozgpdpwqzmztfxgpkyt76g==} engines: {node: 20 || >=22} hasbin: true glob@7.2.3: resolution: {integrity: sha512-nfr0zlpu2ycarxwocjvl6uvch2jfyfvivwtlsif21auhlmska1hhtdk+llyjtolyt9v6dvszd2bgrqbl+iqk9q==} deprecated: glob versions prior v9 longer supported globals@13.24.0: resolution: {integrity: sha512-aho5qucj8llrbg09iwhpu2b204j1xnpel8kqmvorssy+sjj1sk8giyh6cuocgmh4l0uuhajy+hjmra4mga4mfq==} engines: {node: '>=8'} globalthis@1.0.4: resolution: {integrity: sha512-dplkbnu4wylpxjykqujfccwywiv/jhm50goo0wrvilav5jor9d+h+ur3phscd2rcceig0uc+g+mubtwd54jhdq==} engines: {node: '>= 0.4'} globby@11.1.0: resolution: {integrity: sha512-jhixaozy1sb8iyocaruwsn1tjmnbvs8ayhcy83rmxnj8q2uwkcaj3cnjy+kpgsxcueapc0i05kvvvktp1t9s3g==} engines: {node: '>=10'} gopd@1.0.1: resolution: {integrity: sha512-d65bnliadxvpb/a2abvdlqkqv563jurnz1wtk6s1sir8unsxr70xqizvqxvf1etqdunwt2mkczeeaezcktzhwa==} graceful-fs@4.2.11: resolution: {integrity: sha512-rbj5/jmfcnnccdv5o9etnblj/hszwv0p73bc+ff4ns/rjj+yas6igyiol0vobyx+l1wrl3k63h/krh+nhj0xvq==} graphemer@1.4.0: resolution: {integrity: sha512-etkwoo6kxcl9wo5xipihtzlszbm7wlt627tqc/uvrd0hkmq8nxyebnnyxdobi7wt8etwrurkxcovafq9x1kgag==} has-bigints@1.0.2: resolution: {integrity: sha512-tsvcktbr9lkf0ex0aqip9n+opv4zi2r/nee5vkrdbaqv35rlymzbwqffszzh0kr+rd6302ujz2p/bjceor3voq==} has-flag@4.0.0: resolution: {integrity: sha512-eykjt/q1kjtwctppgiagfso0tkvuzujhgmr17kqtumml6afv3eisleu7qzuzoxdftahtdc4noog/zxu3evlmpq==} engines: {node: '>=8'} has-property-descriptors@1.0.2: resolution: {integrity: sha512-55jnkuiw+vq4ke1bjotjm2yctqivct7gfzhwmfzpgo5wnrgkid0yqtnalefsqumzm4az3n2bs+erby5ipjdgrg==} has-proto@1.0.3: resolution: {integrity: sha512-sj1amzajuizs+phsvlf5tgydlavb8edfpaso4gmiukuoxk8qzn5aiy4zejumh22znidk/umaut2pl3fxzvuh+q==} engines: {node: '>= 0.4'} has-symbols@1.0.3: resolution: {integrity: sha512-l3lcuf6mgdnwtdkkdygeihyjt5prpbeg46rtlmnsplubgmb8loirkjbyyfbsbnpajexmktipo8hmerjrz2td+a==} engines: {node: '>= 0.4'} has-tostringtag@1.0.2: resolution: {integrity: sha512-nqadb8vjpflm2v0vvhuewwwsw0zwbaidgo+iehtk3haslz4qecrjycqfb6aqrbggrkppkf8l52/vqdvso47dlw==} engines: {node: '>= 0.4'} hasown@2.0.2: resolution: {integrity: sha512-0hju9scpvmmzibdzfqnpxwa6dqh7wdh0cii9y+cys8rg3nl48bclra9hmkhvvuhypwnh5y7xdwab7bfgsjkumq==} engines: {node: '>= 0.4'} http-proxy-agent@7.0.2: resolution: {integrity: sha512-t1gkaiyydwyx3v5bmyu7hcfcvl7murtwim6yofa3piphvij/gfpbvidq+veqsohci/pxbcdabeunczpoodjzig==} engines: {node: '>= 14'} https-proxy-agent@7.0.6: resolution: {integrity: sha512-vk9p5/iufdl95ai+jvyuuicvtd4ofvtror3hntm2yxc9bnmbedp3x01ohqnnjb8ijyi38vlte3mbxwcfvywusw==} engines: {node: '>= 14'} human-signals@5.0.0: resolution: {integrity: sha512-axczb6vzzrfaue61hnn4mplqd/csiwnqjtnwr0eupm6y0iqx3g4goxaiddtddwzmhwe82la6+zinmw4ubwvepq==} engines: {node: '>=16.17.0'} humanize-ms@1.2.1: resolution: {integrity: sha512-fl70vytsafb/c06pts9dzbo7ihau+tu/dnck/oyhhea07s+aemwpffkuaxra8fi+sczbei8dfsxwy7gxz9savq==} husky@9.1.5: resolution: {integrity: sha512-rowavrubfi0b4+nia4sjmhfqwc107vlkbugeyyaoqabqdcnra1nyh83hf/mdmhys9t9n1e3dukors2lync+0ag==} engines: {node: '>=18'} hasbin: true ieee754@1.2.1: resolution: {integrity: sha512-dcyqhdvx1c46lxzcvqcpk+ftmrqvdimn6/df5js2zouusqg7i6sfxitic+7kyk29kdxolhdu9zl4sfnovqnqaa==} ignore@5.3.2: resolution: {integrity: sha512-hsbtnuqqtdwkwtcdyi2i06y/nubesnedjkjwdiglvegy8kdujas8urlpkkcqpyexl0z/pjdy5hbmmjrcj2gq+g==} engines: {node: '>= 4'} immutable@4.3.7: resolution: {integrity: sha512-1hqclzwywjrdfljcfxom5aykkg0rpfppr1rlpmeugczos7ya8glhy8swxyraa/xwfehpfo3cw5jgios32fnmrw==} import-fresh@3.3.0: resolution: {integrity: sha512-veyyhqa+d1qbkznvhuhxb8faxlrwunxsedabap457e0wlnio2bosknjydhmj+yiaq61xrmghqk9ixvk5fzgqmw==} engines: {node: '>=6'} imurmurhash@0.1.4: resolution: {integrity: sha512-jmxmz6wuvdmliheml9ykzqo6lwfbof0gg4ikcgaendcrddmmvnny7s5hsighcbaq0w2myphdqkhtugs2lu2pha==} engines: {node: '>=0.8.19'} inflight@1.0.6: resolution: {integrity: sha512-k92i/b08q4wvfscxclvqfshcrjrf7yixsquivvve7n82w3+aqpzuudbbfhwcy/fzr3/4igflmgklosvpdrgcja==} deprecated: module supported, leaks memory. use it. check lru-cache want good tested way coalesce async requests key value, much comprehensive powerful. inherits@2.0.4: resolution: {integrity: sha512-k/vgax4/yla3wzymcvtqoxyeihvqoktnqbduzthpzpqzzaskkmhz2k+enbism9zgsoifempxkxa4dyeziqqewq==} internal-slot@1.0.7: resolution: {integrity: sha512-ngnrkwxzsms2quuih/ilz5jbqntsa1+zmp6flaip6kmselge9qdndzs3cqjrdovwfdmwsgsldefgb6suw+1e9g==} engines: {node: '>= 0.4'} ip-address@9.0.5: resolution: {integrity: sha512-zhtqzgojzxtwzthqqra+etkd4sn3vgi7ubmlpoxvwzqyvukmti0l/vztjqgmjy9x88ggoaz9+g9es8hc4t4x8g==} engines: {node: '>= 12'} is-arguments@1.1.1: resolution: {integrity: sha512-8q7earjzenkpt/pcd7e1cgus0a6x8u5tdsimqxhojodov9tsmsio+9vlc5vamo8n7/gmxn7yjr8qna6bvaezfa==} engines: {node: '>= 0.4'} is-array-buffer@3.0.4: resolution: {integrity: sha512-wcjaerhw0ydzwfhikbxjwldy8a7yv7khjqopb83hgggfid/aqa4tovwyzn2pusww2gpcyel/neaisvpdoj1lxw==} engines: {node: '>= 0.4'} is-async-function@2.0.0: resolution: {integrity: sha512-y1jxkrfykrjgdldwdkllplymiiwqwvusd17tvzk68plaogoof4xyav1z0xhoi+gcyjzvec5si+hyfofvxmgrca==} engines: {node: '>= 0.4'} is-bigint@1.0.4: resolution: {integrity: sha512-zb9crumamjym81i2jz3umn54pkgsqzsjeo6xvn3hjj4casqnb6irutp2to77ofcnuoxspsihzapoo1zycehfog==} is-binary-path@2.1.0: resolution: {integrity: sha512-zmeryes6pdydyugidse7oshxtbi7wveueozgr/g7rd0xuimynlvzre/k2mgztjwy725ifellevcem97mmtrgxw==} engines: {node: '>=8'} is-boolean-object@1.1.2: resolution: {integrity: sha512-gdyakhjmnj4awxyj6yhyxvpdqawtvlhu5cb+eztpgczf6cjutdwve5ziefgxqh4e57an1d1akf8cz3kyrqrqya==} engines: {node: '>= 0.4'} is-callable@1.2.7: resolution: {integrity: sha512-1bc0bvfhs/p0qtw6enp8e+8od0urk0oflztsjnzhcka3wdujxxapxzpuptkkjey9uuoewlx/8fgkeu2s8i9jta==} engines: {node: '>= 0.4'} is-core-module@2.15.1: resolution: {integrity: sha512-z0vtxswucujtanqwldhbtbt7bnl0vxifjiddlaatwhdyty2bad6s+rijd6ri4yuyjublzijluidch09e1djevq==} engines: {node: '>= 0.4'} is-data-view@1.0.1: resolution: {integrity: sha512-ahkajrsuvw6wq6js8y3jnm/gjf/9cf+k20+idzlsajrineo5+7vriteoswbhhriayqatn1amy4hwzxjkpmyf+w==} engines: {node: '>= 0.4'} is-date-object@1.0.5: resolution: {integrity: sha512-9yqasxsaiswcvs33mbk3wtcvnwk+hhf8vzr2jrxehm16qcvodhqpn4vphmrk4lsr38n9jriurinlcp90xsynfq==} engines: {node: '>= 0.4'} is-extglob@2.1.1: resolution: {integrity: sha512-sbkbankn603vi4jezv49levjmn4ygwsbzzworeoyeiutsn3njydbo36zfhgj6qedpozifkdtnq5jrxmvl3jsoq==} engines: {node: '>=0.10.0'} is-finalizationregistry@1.0.2: resolution: {integrity: sha512-0by5vtujs8ifqb5tyuhhpudor+qxyimktiuzvlizitzujknfmziybjulhvrc+ds0dreflskdnjkyidizu/9pfw==} is-fullwidth-code-point@3.0.0: resolution: {integrity: sha512-zymm5+u+scsswyd9qnaejv3dfvhckclkdizyajuuha83rljb7nsugnddchgv0hk+ky7bmalswek4ueg6ev6xqg==} engines: {node: '>=8'} is-fullwidth-code-point@4.0.0: resolution: {integrity: sha512-o4l094n2/dz7xqvdrxhh9r1kodpjpfms8b5sgdjlpy664agvxsrezuycqqnitzrdlyug4xstljnp/sz3hvbowq==} engines: {node: '>=12'} is-fullwidth-code-point@5.0.0: resolution: {integrity: sha512-ova3u9kkbbw7b8xw5f9p+d/t9x+z4+jruyvnaptjpyzyuznq5yfwefkoj606xyyw8yugtfc8pj0hyqvi4ryaha==} engines: {node: '>=18'} is-generator-function@1.0.10: resolution: {integrity: sha512-jsejy9l3yixeq+psxdmbwepcoxaxwlspkdplfuvi9vq1izgiekec0l167qeu86czqaxed3q/uzuw0swl0irl8a==} engines: {node: '>= 0.4'} is-glob@4.0.3: resolution: {integrity: sha512-xelsayhh36zge7zwhli7pw34hnbnl8ojv5kvmkjd4hbdd3th8tfk9vyaslm+mxwozhfkgzfxhlsnrwrr4elssg==} engines: {node: '>=0.10.0'} is-map@2.0.3: resolution: {integrity: sha512-1qed0/hr2m+yqxnm09cja2d/i6yznff6r2oraoj36euds6qiv/hupjnsepkbupewfs+zsjlxsjjpbc0/afw6lw==} engines: {node: '>= 0.4'} is-negative-zero@2.0.3: resolution: {integrity: sha512-5koiu2ngpyek75jxodfvnafb6djgr3u8uuk0lezjjru19drmd3everar8sjz8ccggpzvxpl9sue1gmvpfhx1mw==} engines: {node: '>= 0.4'} is-number-object@1.0.7: resolution: {integrity: sha512-k1u0irzlmo7zlyifzru23oh6miifasgpb9x76eqffzaqwh44ui4ktbvbyiz1dsl9zzchtb9shhflkr4pdw5krq==} engines: {node: '>= 0.4'} is-number@7.0.0: resolution: {integrity: sha512-41cifkg6e8tylspdttpelvmqvsbevzttthverd741+pnz8anv0004mrl43qkpdlk9cgvnp6nzwzublbgxyxxng==} engines: {node: '>=0.12.0'} is-path-inside@3.0.3: resolution: {integrity: sha512-fd4gabb+ycgamkou8emftcupsir5lrxqf4ad/vd0cd2qc4hl07ojceuhmr8ro4comaeckdb0/ecbovwjtwuvpq==} engines: {node: '>=8'} is-regex@1.1.4: resolution: {integrity: sha512-kvrdxdsxzjhzux07znlydzs1tu/tjltuhhy4yll87e37oua49dfklqgy+vjfocowy29ckvcsiu+kiv728jttvg==} engines: {node: '>= 0.4'} is-set@2.0.3: resolution: {integrity: sha512-ipajerrse27/ygglxw+ebr9agv9y6uleyvjmu+qncoouj1/1ri0mgrcwpfcqfzuzzx3wjtwxg098x+n4ourkpg==} engines: {node: '>= 0.4'} is-shared-array-buffer@1.0.3: resolution: {integrity: sha512-na2hv5xihlr3uvzddfciknerhx8xuknstuoerpnniinxg7v9u+ohxf67vxm4tptepu6lm61zkwp3c9pcb97rhg==} engines: {node: '>= 0.4'} is-stream@3.0.0: resolution: {integrity: sha512-lnqr4bz9iaddrskvpqmgvt/tejwclzklngsw48v5eaaaedd6qgvn8ei6k5p0tvxsr171vmgyhutiaofxabr8ka==} engines: {node: ^12.20.0 || ^14.13.1 || >=16.0.0} is-string@1.0.7: resolution: {integrity: sha512-te2uxzivje6ofpw7l23cjdoma09gb7xlaqg6jg5ej6upv32tlwp3nkpigtagehnu9fohccryviizmfoonoyutg==} engines: {node: '>= 0.4'} is-symbol@1.0.4: resolution: {integrity: sha512-c/cpbqkwnvdcxqiarxyoh4v1uueochpgda0wygpkdfmszcrpcffg5uhwsgpcld2wwxmq6isisz87tzt01tughg==} engines: {node: '>= 0.4'} is-typed-array@1.1.13: resolution: {integrity: sha512-uz25/bualuy5fr4okt4rzqebrzqwyv9zjyggsumej6thodvj1hx64epq6z0qpwp+m+uq6e9uugre38jeysdsmw==} engines: {node: '>= 0.4'} is-weakmap@2.0.2: resolution: {integrity: sha512-k5pxyom9wqy1rgjpl3ytkf39tni1xajuikawtluo9ezevufga5gsqjf8nns7zwjq02y+1ycnycmh+hif1zqe+w==} engines: {node: '>= 0.4'} is-weakref@1.0.2: resolution: {integrity: sha512-qctsulzmiq0+vssmfovvyfe2+gsevnmz2eztup1sbse9+twcceial6eei3nc2kfcf6+qz2fbpnjxsk8xhksapq==} is-weakset@2.0.3: resolution: {integrity: sha512-lvim3/kwzs9orfhugab7d+m/gcbxuxx5xzkzpmn+nxihdqlzuq4dwusv1xr/sq6upl1tjedrfbgrephfdbtsnq==} engines: {node: '>= 0.4'} isarray@2.0.5: resolution: {integrity: sha512-xhjhdr3cnbk0bzdujspxzntqux/mwms5rw4a7lpj90xgao6isp/epdnuo0vhqozu+ud5joodwcaaozqd3feakw==} isexe@2.0.0: resolution: {integrity: sha512-rhxmlp9lnkhghrng9qfhrcmbyacvpn69smsgcq3f36xjgvvwthj4qqlbtllq7ssj8b+fiq1eucegi2lksyqeiw==} iterator.prototype@1.1.2: resolution: {integrity: sha512-dr33hmmr8ezwurl8y9d3u2bmj8+rqse850jfgu59ks7tbmplzgkzmvsfycfsdxuziey6rzt3t2na/qu+nwvj1w==} jackspeak@3.4.3: resolution: {integrity: sha512-oglzqpz2yfaha/rd1y8cd9siesqvxklvosw/cgwhnhfmdbsqfezyojj7bizbs9bcamuw96asq/nppwugm+rqbw==} jackspeak@4.0.1: resolution: {integrity: sha512-cub8rahkh0q/bw1+gxp7aese29hhhn2v4m29nndlvcdlgu+3ugxkzp7z53jludpx3jdto0njzudl3xvbwc2xog==} engines: {node: 20 || >=22} jest-worker@27.5.1: resolution: {integrity: sha512-7vuh85v5cddofpyxn58nrpjbktzo0u9x1g8wtjqol+jzdae+fhn+civtj11gndbnmnyfruog1szqxcdjkh+dkg==} engines: {node: '>= 10.13.0'} jiti@1.21.6: resolution: {integrity: sha512-2ytgewtwzmwkhu6jp9nkgepdayhbntiwvyuujlbbn9vl7dc9dvxkob2bc3zz92d3cvv/aflh0osdfwphepq53w==} hasbin: true js-tiktoken@1.0.17: resolution: {integrity: sha512-fzmf02rup8lu6ean0ctwwer//msvgogj6lk6d++of+zvvtfvpnabdsan1p2qa0/q8izoulhioijnlfy6qwynbw==} js-tokens@4.0.0: resolution: {integrity: sha512-rdjuflce3cuzkimqqgscu06fpu9udijo0beybphhn4k6apgjtifcoctt9bcxopybtpd2kcm6sbzg4causw/pkq==} js-yaml@4.1.0: resolution: {integrity: sha512-wpxzs9noxzajesjgiztydeaypl0fksa+fb9ajiyemkhmwkxqg63h4t1kjgughptqpdnrcmmylugrrjjlbtwvra==} hasbin: true jsbn@1.1.0: resolution: {integrity: sha512-4byvv3aamtdttu4+xsdya6sy9gyj69/amsu9syf2zqjieoza5xji3brfx3uy+/iekiu7mwdobdbdwpozdbv3/a==} json-buffer@3.0.1: resolution: {integrity: sha512-4bv5bfr2mqfqtjm+v5tppdf+zpuhiivtuab5g8kcrxozptt/qwwvrwbywx1ozr6leupdbhxwajlm9g6mi2sfsq==} json-parse-even-better-errors@2.3.1: resolution: {integrity: sha512-xyfwyhro/jeof6ghe2iz2ncxoj2slonswr/xserdk/oipcfanhl5onfp+jqdazrqq0ijwnzh9zizf7li91kh2w==} json-schema-traverse@0.4.1: resolution: {integrity: sha512-xbbch5dcyu5t8lcehhuh7hj88hxuw3qsi3y0zozfkfzehcpwihu/jxzk629brsab/mmihqti9wmp+845rpe3vg==} json-stable-stringify-without-jsonify@1.0.1: resolution: {integrity: sha512-bdboy+l7ta3ogw6fjyfhwkp5lubyj1tk33ljyq0axyzdk9//jsi2u3fp1qsmd1knwq6vokyglau87cisvir6pw==} json5@1.0.2: resolution: {integrity: sha512-g1mwmlbiz8fki1e4w0uyvl3w+ijcewafbaabnngkopna5f8tlktkbre1+s6oicydwam+hrugtmi+//xv2hvxya==} hasbin: true jsonfile@6.1.0: resolution: {integrity: sha512-5dgndworiysm5cnyajnhallndkoqfwydb/rr1e9zsgcigvkps8r2xygcacuf3z6k1ykdz182fd+fy3cn3pmqxq==} jsx-ast-utils@3.3.5: resolution: {integrity: sha512-zzow9hbi5o6epgsjlub8n2nkgmvwtwcvhgwfujlmjvlfqlgg6pjirphtdssealzjsibd8eegzmypuzwoilj2cq==} engines: {node: '>=4.0'} keyv@4.5.4: resolution: {integrity: sha512-oxvhkhr/ejf2cnxnwxrlw6mg7jyccucg0dtegml2ctuo1pntin1puil+r/+4r5mpvgc/fn1kjsx7mjsujkqipw==} langsmith@0.3.4: resolution: {integrity: sha512-klyy7htoeh3rqqskstufvwe8nmrlcp1+ng50ddeejjyf5wi+lsgbdipjgrvjmgnbnex+rgnuk0kbkiu5gzjvfq==} peerdependencies: openai: '*' peerdependenciesmeta: openai: optional: true language-subtag-registry@0.3.23: resolution: {integrity: sha512-0k65lea881photogea5gdlmxt3pctli2rplbb7ezh4rrdleotgi7n4ewk9lamnuckkbqaekrvebtq6baxskpxq==} language-tags@1.0.9: resolution: {integrity: sha512-mbjn408fendfiqxbfq1vnd+1noldsnqw41410oqbxiyxdmyh5z505juwa4kue1lqxrc7dgogzdbklxhiwm27ha==} engines: {node: '>=0.10'} levn@0.4.1: resolution: {integrity: sha512-+bt2uh4e5lge7h/n3evcs/sqljxcpip6ym8owj5ev6+67dsql/laat7qjbat2rzfoa/5qbgbhxdix1dmt2kqkq==} engines: {node: '>= 0.8.0'} lilconfig@3.1.2: resolution: {integrity: sha512-eop+wdavpituys0fwkhikec9ybyrtgbu41u5k7+bttzzeohvny7m9dz5kb21gnwift2q1ooptvncpcgsovo5ow==} engines: {node: '>=14'} lilconfig@3.1.3: resolution: {integrity: sha512-/vlfkaoh5cgt3ie+jlhrbwoscqepabiu3tj1eggvyq+33r/vcwm2zl2qr/lzjsbeitpt3osvxapn+m4nqdvpzw==} engines: {node: '>=14'} lines-and-columns@1.2.4: resolution: {integrity: sha512-7ylyleszq/pv29jhedl3ufjo6zx7gcqjr5f7pkrqc93v7fzsymt1bpweu8nauxs8qzzvqhbjhk5qzg6mt/hkbg==} lint-staged@15.2.10: resolution: {integrity: sha512-5dy5t743e1byo19p9i4b3x8hjwaliznl5e1fwynu6oww33kxnbslac6cy7f2psfeo8fknlwjwm5hx7amf0jzzg==} engines: {node: '>=18.12.0'} hasbin: true listr2@8.2.4: resolution: {integrity: sha512-opevsywzihd3zhcvqgaj8zu+z3yhnkkoyhwignq54rrcvwlz0mozotjednksiblvkflgn6bloyaerryi0pka4g==} engines: {node: '>=18.0.0'} loader-runner@4.3.0: resolution: {integrity: sha512-3r/1m+ys3j5ou80me59j7f9ims4pxs3vqrrm0tu3abkpxlmpoy1tnscjv/ogjxo8qcatfgtfdby6w6ipgoyxfg==} engines: {node: '>=6.11.5'} loader-utils@3.3.1: resolution: {integrity: sha512-fmjtlmxfclmlfjxcx9pfqx5qd88z5mrgazcvzfuqezspsyibzs+pahdqjbiwz2qizpzz0nx9zy4fx3lmk6yhig==} engines: {node: '>= 12.13.0'} locate-path@6.0.0: resolution: {integrity: sha512-ipzk6eyjbxru3ub4/wz3eseimjfmqaoopl3r+zuq0ujcam/mo6kcwedgpfp3eltztokp3ktnvhxtn2nhbsdvuw==} engines: {node: '>=10'} lodash.merge@4.6.2: resolution: {integrity: sha512-0kpjqxrvvryycsx1swr/xtk0va6vqkqm6mno7pqw77byjahoara8efrp1n4+klkj8ys0zuctrt/yuuhyydujiq==} log-update@6.1.0: resolution: {integrity: sha512-9ie8itpr6tjy5uyjh8k/zrv/rmz5volowvtzdehystfkzfibpqa9toaeeawhd+aninelj22w5fjoytoutpwq5w==} engines: {node: '>=18'} loose-envify@1.4.0: resolution: {integrity: sha512-lyuxpgr/wfhrlem2cl/ucnuc1zcqkaimbdzuky7y5f/yqindko6+frlevlw1hgmysw7f611uiy408etxrsok3q==} hasbin: true lru-cache@10.4.3: resolution: {integrity: sha512-jnazzcxrct42vgluyz0zfazdfavjww6afyldbqydv5dcli2m5samk+oio7s59xfsrswhp02jajrradprgtt6sq==} lru-cache@11.0.1: resolution: {integrity: sha512-cgeul5uom6j/zvrg7g/+1ixqry8jxx4hghfy5ye0ehoyqwvndp1kufu58cmzlnidknrhzrxfds9urvwx98aipq==} engines: {node: 20 || >=22} lru-cache@7.18.3: resolution: {integrity: sha512-jumlc0biurs3qjggikwzsyfam7ncwibccdhnd+3nnm5kbbmltghvfwbcg6w+rlusipzperpsvwup7cckaqsooa==} engines: {node: '>=12'} magic-string@0.30.11: resolution: {integrity: sha512-+wri9p0qhmy+545hkww7yau5nyzf8iompl/rqazugq9+ez4ic3mermd8ztx5rfk944j+560zji8iawgak1ac7a==} make-error@1.3.6: resolution: {integrity: sha512-s8uhlne7vpkomqhc1qfelmokr/sc3agnbso3n74mvpa5ltzwkb9nlxf4xpamlxje8h0gh73rm94xvwrt2cvinw==} merge-stream@2.0.0: resolution: {integrity: sha512-abv/qocupfk3urpfdzmzu1lkmuw8kt+0nihvkrkgfrwifol/dowcda4zqswq8enrfkkd67mfpo/lovbiusbt3w==} merge2@1.4.1: resolution: {integrity: sha512-8q7vegmjw4j8tcfvpy8g09ncqwzdbwfeqhe/wzkoizjn/3tgdwtocytxgxa3o8tpzpczccdgv+p2p5y00zjoog==} engines: {node: '>= 8'} micromatch@4.0.8: resolution: {integrity: sha512-pxwfbhyu0hbcpw8dn0e+wdyb7af3dslvwki3hgv84idf4tyfoc0ysxfd0goxw7nsv4t/pzejqxsyseifcko2ba==} engines: {node: '>=8.6'} mime-db@1.52.0: resolution: {integrity: sha512-spu4uv7dylvtwjxwwxhd0puihvnie7tyabq5swxdcb9muyvogroqowyqqokpj8cibe+1etvlook1uc2nu3gyvg==} engines: {node: '>= 0.6'} mime-types@2.1.35: resolution: {integrity: sha512-zdy+bpm5zttf+ypcrau9nk0ugicypt0qtt1nzwfv4s++tnkcgvat0g6+4r2ui4mjqjzyshb1zxuwl50hzaexiw==} engines: {node: '>= 0.6'} mimic-fn@4.0.0: resolution: {integrity: sha512-vqic06cuhbtudzh+ryl8sfrl096va45ok5iso6se/mr1jrbgh4csnhi8f3wkvl7x8mo4au7ir9d3oyv1vymfjw==} engines: {node: '>=12'} mimic-function@5.0.1: resolution: {integrity: sha512-vp79xupxv2cigyp3jwwaufsku2akqbh7utaapfwcbqutsbmdo96ky5o8uh6u+/ysin5oxjnxp73bevkpqmigha==} engines: {node: '>=18'} minimatch@10.0.1: resolution: {integrity: sha512-ethxtt3sggr+95gudmqj1enhro7egegigya9vnpatk4/etz2mevdno5gmcibdmtubmyelzilgxmna3k94xdidq==} engines: {node: 20 || >=22} minimatch@3.1.2: resolution: {integrity: sha512-j7p63hriajw1ndeww1w7i37+byirowo5xqqazz3vocl0pnybwpfmv/n05zfazwq9usyecx6t3uo+k5aqbqoihw==} minimatch@9.0.5: resolution: {integrity: sha512-g6t0zx48xgozx7587koex9ys2nyy6gmv//p89sete9v9whiapmnf4idkxnw2qtcclitwlb/wfcabatafwhhbow==} engines: {node: '>=16 || 14 >=14.17'} minimist@1.2.8: resolution: {integrity: sha512-2yyar8qbkn3yuhejanupwc5u3bb5osdywnb8rzdvldwdhbocajveqqj1u8+svd7jkwt4yvshcpwqqwqaxb0zca==} minipass@7.1.2: resolution: {integrity: sha512-qoozs1cbtwyf4bh8fvepdboo9iptmnguezwnc/cmwntv2nvlz7vonwephkyczza0pdoa7dl6e7fl659nx9s2aw==} engines: {node: '>=16 || 14 >=14.17'} mitt@3.0.1: resolution: {integrity: sha512-vkivatfr97l2/qbcyakxydbriwpm2iikel7yphjcvklg3ke2gm+ubo6nexk3m5/ffh/flpkexzoq3jjojgfkbw==} mrmime@1.0.1: resolution: {integrity: sha512-hzzeagagdyou1q6yg5ui+aorqgdvmcur3fckf7nhmkwsayg+rnbtyhra/9illf9rf455moctcqqrqq83ppp7uw==} engines: {node: '>=10'} ms@2.1.3: resolution: {integrity: sha512-6flzubtlzg3j2a/nvcaleehjzq5oxghyacu9yyxvclsvovahjq/s5xxi6/xxp6tz7r9xaothnso/txtf3wrtla==} mustache@4.2.0: resolution: {integrity: sha512-71ippsywq5yb7/tvyygbkbggbu8h3u5rz56fh60jgfgr8uhwxs+askeqmluivzm0m0kb7xqjks6qpfd0b2zoqq==} hasbin: true mylas@2.1.13: resolution: {integrity: sha512-+mrqnjrtxdf+xngffuukimqruul0ksxbadukn23z/4ibgg192q+z+cqyiywvwtsyjjygmmr8+w3zda98zh6esg==} engines: {node: '>=12.0.0'} mz@2.7.0: resolution: {integrity: sha512-z81gno7nnymehrgh9leymoe4+yr0wn5mchizmk5cfqcl+ndx08sczguc9/6mhni9iwuflm1z3htcxu2z9fn62q==} nanoid@3.3.11: resolution: {integrity: sha512-n8spfpunup1bk+pmyw8qswdl9u+wwnwi4qkxoydy9jaro3wmx7p2oevrf9v+347pnaknevpmihhnmz2hbfa76w==} engines: {node: ^10 || ^12 || ^13.7 || ^14 || >=15.0.1} hasbin: true natural-compare@1.4.0: resolution: {integrity: sha512-ownd8ei3vtnc9h7v60qff3svobhr996ctwgxubgyqyepg290h9j0buyecnnjexkfm5soajh5g116rya1c8zmsw==} neo-async@2.6.2: resolution: {integrity: sha512-yd3ues5mwcsqr+qnt93s3uoyukqaz9llg8a7g9rimswmygk8cvtoa4/sf3rrshdyv3sagmxvumpmyow+dlpouw==} netmask@2.0.2: resolution: {integrity: sha512-dbpdmdxv9irdq66304olfemq9tbnrfnftuzilo+bd+r332bbmmj8gblxklixxgxd3+v9+kunzaur5pjma75gsg==} engines: {node: '>= 0.4.0'} node-domexception@1.0.0: resolution: {integrity: sha512-/jkzompw0f8grwl4/elropa3cfcxtlapp0qzlmut/hupczwyb7iy9zrmekw2o/nfiqpqb3pvm9aym0f312axdq==} engines: {node: '>=10.5.0'} node-fetch@2.7.0: resolution: {integrity: sha512-c4frfum/dbcwz7u+1wq0awcyfl+3nt2bew05wfxsz+dwpwsitgmsgymy2dqdwykc1694elpqms/yzusnozlt8a==} engines: {node: 4.x || >=6.0.0} peerdependencies: encoding: ^0.1.0 peerdependenciesmeta: encoding: optional: true node-releases@2.0.18: resolution: {integrity: sha512-d9vext4sj7zeoqgx6r5em022wpl+ewpooli+5upwn2jct1aosuqehqp214x33wkwx3jqmvim+tiovododfs40g==} normalize-path@3.0.0: resolution: {integrity: sha512-6ezs5ls3wtcishwp9s2guy8dqkpgi4bvsz3gaqie6ezub0512esztxuwub6c6ikbqky2pnb/md4wyojcrwcwla==} engines: {node: '>=0.10.0'} normalize-range@0.1.2: resolution: {integrity: sha512-bdok/xvkii3nupklnv6p2hxtmnrcboojacybuqnweho665fwrsnrxu+aqpsyvo6lggypspn+lu5cltw4jprkna==} engines: {node: '>=0.10.0'} npm-run-path@5.3.0: resolution: {integrity: sha512-ppwttijzq0o/ai0z7yfudtbpwioxm8ye6nhi1x47efr2eworqfbu6cnplnsjen683et0qg6h/pyf9fccvjnnnq==} engines: {node: ^12.20.0 || ^14.13.1 || >=16.0.0} object-assign@4.1.1: resolution: {integrity: sha512-rjgtqnkunh1sfw8yt6vsu3zd3swmu6szhisey8vx+gru3p6f7fu+jndoxfklelbljsnc3fuqhve4cu5hj+bcug==} engines: {node: '>=0.10.0'} object-hash@3.0.0: resolution: {integrity: sha512-rsn9f68pjh9hqtltssnqyc1xxowe9bju5+213r98cngttag9q9yaotzdbsqvia7anm5wffbzfpwyr2awrklwaw==} engines: {node: '>= 6'} object-inspect@1.13.2: resolution: {integrity: sha512-irzsruzjiynemaxpytpe5boi/resnyr7tym50mc5mqbd3jmw5y790seryw3v6sryfjd64b74qqqs9wn5bg/k3g==} engines: {node: '>= 0.4'} object-is@1.1.6: resolution: {integrity: sha512-f8cz+kfglsgi09ljt7/nd6kjz9ygtvyc0/uyyli9nmqklmnydpb9yvbv9k1uskeu7fu9vypmvwlg328tx+ot3q==} engines: {node: '>= 0.4'} object-keys@1.1.1: resolution: {integrity: sha512-nuaesuoumrlixofhkzd6bppu3tyt3xvjndriq+fet0lnb4k8wr70cadxhungus2xg+gjkymwozsn5zktimfhla==} engines: {node: '>= 0.4'} object.assign@4.1.5: resolution: {integrity: sha512-byy+u7gp+fvwmyzkpyhw2h5l3crpmgsxl7x2s8y43igxvg4g3qz6cffdtsnqy1wsmzpqbo+ybo0alw7ty6dcbq==} engines: {node: '>= 0.4'} object.entries@1.1.8: resolution: {integrity: sha512-cmopxi8vwriaw/fkijjohsfpef5pdn0pmqjn6vc/zkvn0liknwd8ktgy6klqdec4tijcq3hxsmmnvtziscdayq==} engines: {node: '>= 0.4'} object.fromentries@2.0.8: resolution: {integrity: sha512-k6e21fzysssk5a21kradbd/ngneregfo5plhfdqlprdetunjuelxs3wczyq3tfrdygbq3khgxftbi2bs8wq6rq==} engines: {node: '>= 0.4'} object.groupby@1.0.3: resolution: {integrity: sha512-+lhy3tqtuzxi5hevh8sbgqbmurhbbijai0z4s63nthvlmlxfbj4t54a4cfzrxirt9ip4mvapymo/v99taj3wjq==} engines: {node: '>= 0.4'} object.values@1.2.0: resolution: {integrity: sha512-ybyjy9qx2hnrmzhajg/f13mzmbzxzygqhfrke06ttyky5zsteqkoeukbzidva3j3ulu8qa3mbvfshv7t2rmgtq==} engines: {node: '>= 0.4'} ollama@0.5.14: resolution: {integrity: sha512-pvoueya2wkkaumxzjp0rdeyhkbz64ayyyuszxvx7rulvk5l+eio2g71da2gqeq4iak4j6eloubgk5arzft1wja==} once@1.4.0: resolution: {integrity: sha512-lnajgi+2q5urqbkccekhtqopaxduxnzzelqtzy0mfuauaeqe1e+nyvgdz/aiyni6z9mzo5dv1h8n58/gelp3+w==} onetime@6.0.0: resolution: {integrity: sha512-1flr+gjxk7x+asahso35mnyn5kqgwjri/31ft6x0m194ht7s+rwavd7phss9xskmze0asv1pyihajyq+bbacaq==} engines: {node: '>=12'} onetime@7.0.0: resolution: {integrity: sha512-vxjjc87fscf88uafs3jlldgvam+c/slfz06lorj2uay34rluu0nt+v8wreiimcrgajjihp1rxptdllogw29wwq==} engines: {node: '>=18'} openai@4.82.0: resolution: {integrity: sha512-1btxovgzuvgskkuwbh3bewx1qxixuftjv+9cohhggvdtfwiaod4gwsmynf2ewj1mg6by3/o+u8+eehpwrdpajg==} hasbin: true peerdependencies: ws: ^8.18.0 zod: ^3.23.8 peerdependenciesmeta: ws: optional: true zod: optional: true optionator@0.9.4: resolution: {integrity: sha512-6ipq7mkuxrcznliobr0hz7lxsapssiynzjwxpgef0mtvqgkfixj1dqcmot22s3roclyy/rz0pwawz9aywmad9g==} engines: {node: '>= 0.8.0'} p-finally@1.0.0: resolution: {integrity: sha512-licb2p9cb7fs+0er1oqwnhhp0fljglzcwbe9aix0uye9w8ltqpwmtyvgwqwiw9rdqidg4+epxqodwiyjtsjaow==} engines: {node: '>=4'} p-limit@3.1.0: resolution: {integrity: sha512-tyoanm3wgwngszn2cvtyparw454xnxj5qmwf1beoac4+cu/ol7gvh7odevjp1fnhduhc3kzmcfduxu5xc6ujrq==} engines: {node: '>=10'} p-locate@5.0.0: resolution: {integrity: sha512-lanjtrwuby++zb5ne/nwcaomylspk+s+zhnb1tzdbmjmny6dynpagt7x/tl/qyq3tiee6nxhppbo2lgymrg5pw==} engines: {node: '>=10'} p-queue@6.6.2: resolution: {integrity: sha512-rwfpb72c/bhqlexiz5k2e+ahgnvmiejgltgib9mzz0e93grvqz7usi0dvrf7/xixdenkra2fnhbxtypdgyspjq==} engines: {node: '>=8'} p-retry@4.6.2: resolution: {integrity: sha512-312id396ebjdvronlngux0nydfriq5lsyu0znkvuzvvarzeit08v1qhtyesbgvd1fgx7uktifp5uwkzdm8wiuq==} engines: {node: '>=8'} p-timeout@3.2.0: resolution: {integrity: sha512-rhiwuycgwwkcp9ytoofk/aksaopjjcakvqlhepo3cc6mir1z99xt+r63jzxat5lfzla2ins5h+zs2gvr99/fbg==} engines: {node: '>=8'} pac-proxy-agent@7.1.0: resolution: {integrity: sha512-z5fnlvvzsnx7wjbg0mhdtyderz1xmcatzthjysquhqr+0ksp8kqaw23fnkkaan/z8gwlus/w7xdl0i75ep2xyw==} engines: {node: '>= 14'} pac-resolver@7.0.1: resolution: {integrity: sha512-5npgf87at2stgwa2ntrmr45jtkrybgkvu36yt0ig/n/gmaa3opqhzfiq2kmeimreg0+t9kzvidvz83qfvulckg==} engines: {node: '>= 14'} package-json-from-dist@1.0.0: resolution: {integrity: sha512-datvcezn/8wqsgywez1mzhttlp22h8oefprvmlnr4/ega+ijtln/6m5f0dy8uknrc2o9ucu6ssog3qrknt7stw==} parent-module@1.0.1: resolution: {integrity: sha512-gq2ewrpqv8/o+aw8yqtfzzpfnrwzykbide9k5rpl/hc3vthhbfgm2ifi6qwv+codgkrukzaxe3lot5kcsrlh+g==} engines: {node: '>=6'} path-exists@4.0.0: resolution: {integrity: sha512-ak9qy5q7jyb2wwcey5fpvg2koac/zihlslosbmrmygpsgwkvvt0fza0qrtmz+m6tjtahfzq8fnmb4mg4lwy7/w==} engines: {node: '>=8'} path-is-absolute@1.0.1: resolution: {integrity: sha512-avbw3uj2e9bq64vsas9am0fje1pa8pbgqttsmxfaiimpnr5dldhfjoulj9sf95zpvdauerdfek88mpmpe7ucqg==} engines: {node: '>=0.10.0'} path-key@3.1.1: resolution: {integrity: sha512-ojmen0qd+y0jszetoy48r0peq5dwmekilcou6q5f41lfkswxuktyrhgotplnyichm24uhqx+5tqm2inswlhe6q==} engines: {node: '>=8'} path-key@4.0.0: resolution: {integrity: sha512-hareypq7xkm7erfgiya0z+bj4agklmsdlqe2jvjo6huwd1edkkyv+g/t4nq0yef2vgtt8kqmfko1uhn950r4sq==} engines: {node: '>=12'} path-parse@1.0.7: resolution: {integrity: sha512-ldjzpveeepr+y48z93a0ed0yxb8pabygwo/k5yydygpy2/2esosksjrq7lohxryrvon1ejg6oap8ahvoiqd8sw==} path-scurry@1.11.1: resolution: {integrity: sha512-xa4nw17fs9apqfj9umlijs4orgjm7zzwurwamcgquhszdyth9bokdaycyddczduqyatxw4hfxgaqwtctw/v1ha==} engines: {node: '>=16 || 14 >=14.18'} path-scurry@2.0.0: resolution: {integrity: sha512-ypgjsmgtdxuoem5u93tyeiefehm6s+ljahrk5vavsx8uyy/02ovrzna0yngurpxfpjmgi1odd3nwz8npx4o4cg==} engines: {node: 20 || >=22} path-type@4.0.0: resolution: {integrity: sha512-gdkb8azmded/tzws9p6+q0j9mwkdl6xmv8tjngp3qjvj06bdmgkbbllu8idfosisfz2bw1rnvt3xunel8zpavw==} engines: {node: '>=8'} pend@1.2.0: resolution: {integrity: sha512-f3asv42uuxchdzt+xxqfw1oglvbe+mxa2mqi0pg5yahzpvfmy3y6drsf/gq1a86wgwen9kzh/wrgka6igchxlg==} picocolors@1.1.0: resolution: {integrity: sha512-tq92mbow0l3lemeylv6mzy/kwr8lkd/hp3mtg7wyk7zjhubstmgmbg0bdedzs/dzx1iukax6bk11zcln25o1aw==} picocolors@1.1.1: resolution: {integrity: sha512-xceh2snhtb5m9liqdsmew56le376mtzkex/jeb/rxnfyegnul7enslcxp9fdj/lcu0x8keymcep2ntpahrdeva==} picomatch@2.3.1: resolution: {integrity: sha512-ju3tehtnjme2vcgfzuy8exzcdvweqb2a8fsivwasthhawjeevd1o1qd80cu6+zdexxslbssulwjjkcbwqrquva==} engines: {node: '>=8.6'} pidtree@0.6.0: resolution: {integrity: sha512-eg2dwtvw5bzqgrztnhexcznxt5vgse6owtecg3fduf9kbszzo3r5oiiizwr+iza0ntz+rdvdaoe2dk1cn6jh4g==} engines: {node: '>=0.10'} hasbin: true pify@2.3.0: resolution: {integrity: sha512-udgsay+ftnvv7ki7aaxbqwwnb0ahib0qbo89pzkpkotmgogdbrhdkd+0b2x4utfj/ft1r09r9gtsjujnjotuog==} engines: {node: '>=0.10.0'} pirates@4.0.6: resolution: {integrity: sha512-salsh7weyypid25ldulrry/i+6hapyr6g1ouln39otzkstxknubr9rtxs3/kk50s1g2jtgfwwqdqyplc5/shzg==} engines: {node: '>= 6'} plimit-lit@1.6.1: resolution: {integrity: sha512-b7+vdyb8tl6omjt9oso2cw8xc/t4ucjgrwovongwoqsqyhlpfajmrmj5xeejqaasq3v/eqthyoeateomusexia==} engines: {node: '>=12'} possible-typed-array-names@1.0.0: resolution: {integrity: sha512-d7uw+ezoloe0ehdiyoe+bq5wxngmopmizftumwcwpjzzkl2ntjckiak4hh8tjngye2twwok3uxucz+3rbmba8q==} engines: {node: '>= 0.4'} postcss-import@15.1.0: resolution: {integrity: sha512-hpr+j05b2fvyuaxhek1yyi267j/dddhmu6b6civm8hsy1jyjnbxxzkdkdswzjmtlhryrjhndjqqp/49t8falew==} engines: {node: '>=14.0.0'} peerdependencies: postcss: ^8.0.0 postcss-js@4.0.1: resolution: {integrity: sha512-ddlf8peo191hjmtlhfpra8xsizham82mlfnkuhdutvev3tgtp5oj+8qbeqym57slfc74ksbw//4sejma2lrviw==} engines: {node: ^12 || ^14 || >= 16} peerdependencies: postcss: ^8.4.21 postcss-load-config@4.0.2: resolution: {integrity: sha512-bsvhyjgl00wmvopuzavanbeowyqrxkjv64tul427sknprentq6hjwuojromz2vb+q1edmi4ifrappami5vvgmq==} engines: {node: '>= 14'} peerdependencies: postcss: '>=8.0.9' ts-node: '>=9.0.0' peerdependenciesmeta: postcss: optional: true ts-node: optional: true postcss-load-config@6.0.1: resolution: {integrity: sha512-opttm4oerl+uxmx+93ytzvn82rrly/wpuv8iedxfrzijxolf1pn+emkplbubvkht2hc20xxscah2z+ckv6oz/g==} engines: {node: '>= 18'} peerdependencies: jiti: '>=1.21.0' postcss: '>=8.0.9' tsx: ^4.8.1 yaml: ^2.4.2 peerdependenciesmeta: jiti: optional: true postcss: optional: true tsx: optional: true yaml: optional: true postcss-nested@6.2.0: resolution: {integrity: sha512-hqbt28kulc5ajzg+cztj9kvkb93cfcdlvog1wflf1d+xmmvpglbstkptezfk5+an9hfjocybfcniqys48bpgzq==} engines: {node: '>=12.0'} peerdependencies: postcss: ^8.2.14 postcss-selector-parser@6.1.2: resolution: {integrity: sha512-q8qqfpiz+tho/3zroro0cjjkfpycagtmukxbnefmgujwxg6z/wbeoys9apbbpctsidv+s4swqgu8yfsimriudg==} engines: {node: '>=4'} postcss-value-parser@4.2.0: resolution: {integrity: sha512-1nncs6uurfkvbexg4s8jft9t19m45icnif8zwld5opsz50qnwmfk+h3jv408d4jw/7bttv5axs5iiholavnheq==} postcss@8.4.47: resolution: {integrity: sha512-56rxcq7g/xfb4ekxq9egn5gcqugwvdfjafdothidmbsi15iqpqr5r15tfsr1ypyeei19yeaxmcby6u88y76glq==} engines: {node: ^10 || ^12 || >=14} postcss@8.4.49: resolution: {integrity: sha512-ocvpniobs4n29kxtjzlfuryokvzeq+pf8jtf0lg8e7uetuwha+v7j3c/xjmiqpx450191llmzfukkxxktry7na==} engines: {node: ^10 || ^12 || >=14} prelude-ls@1.2.1: resolution: {integrity: sha512-vkcdprrzo1qzlbn5rlgppg/wmiq65qowwhcgkf/b5eplkkarx0m9z8ppcat4mloquswpynuygo3vryryhszx5g==} engines: {node: '>= 0.8.0'} prettier-linter-helpers@1.0.0: resolution: {integrity: sha512-gbk2cp9nrassuf9n2xwuwqfzlaflmnyyl+she/v+h8a9unl/ouqb1w2el54jh0olyrsd8rfwyj3covs4trop2w==} engines: {node: '>=6.0.0'} prettier@3.3.3: resolution: {integrity: sha512-i2tdna0o5irmo757lfrdqzcc2jpndvntv0m/+4whidfwatkfmngr7qz0naegz/nrqf4m5/6clzbp4/liht12ew==} engines: {node: '>=14'} hasbin: true progress@2.0.3: resolution: {integrity: sha512-7pihtlll5ldnkimw100i+8xjxr5gw2qwwykt6ijva0bxitzka/xmrsbdmg3r2xnaidz9qumd0vpamrzlf9v9sa==} engines: {node: '>=0.4.0'} prop-types@15.8.1: resolution: {integrity: sha512-oj87cgzicduluohogvar7ajlc0327u4el4l6eavoqceudmdvu0nthnav+b9df4dxgsp1gxmtnpdhfe/2qdh5cg==} proxy-agent@6.5.0: resolution: {integrity: sha512-tmatmxdr2klria2cydu8gqr8ejahtg3ay3nxjdzfyozbmb8hrbstymezhulixknc0jpfjlmiz3+eaczoinsu/a==} engines: {node: '>= 14'} proxy-from-env@1.1.0: resolution: {integrity: sha512-d+zkorcba9f1tdwrk0racr3gpv50cmxcrz4x8k5ltsud1dkw47mkjezqnunitrtkwwgtauso1rvfrig9zxifyg==} pump@3.0.2: resolution: {integrity: sha512-tupxtzlgm8fe3p0zl6dvs/3p58k9nk8/jzeqcurtjylqa8qfyzhffhbjkuqye0fifosq0ukwekiz5g8wtr28cw==} punycode@2.3.1: resolution: {integrity: sha512-vyt7ud1u9wg6138shltlovdau+8dsc/ilftevhch+wydcspne20afsoduf6mkrfahl5fy7x1ou7nkvzftfq8fg==} engines: {node: '>=6'} puppeteer-core@24.1.1: resolution: {integrity: sha512-7ff3gq6bpisbq3i8mfbodxh3dczxagoz3l2egv1cxooyu4g0p4mchqvhubd4iszpxng8wjzlp5kmrwk9uvwf0a==} engines: {node: '>=18'} queue-lit@1.5.2: resolution: {integrity: sha512-tlc36iopemaubu8bkw8ydbv+wyigklyu7zuns0j5vk9sksz4jfglpoqplp0ahdfv7hl0b2pg6nwiq60qc6m2hw==} engines: {node: '>=12'} queue-microtask@1.2.3: resolution: {integrity: sha512-nuansa6flkt5jasyqzjok04jztl1ca6aghv5rflw3pgqa+m2chpzqnac8h8i4zfkbs8x5rqkdbha7r4hej3k9a==} queue-tick@1.0.1: resolution: {integrity: sha512-kjt5qhmxoszgu/62plp1cjytzd2nketjsrnyuj31fdd3rlcz3fzlfdfld1situnpwyqeokca6gbv612bwfabag==} randombytes@2.1.0: resolution: {integrity: sha512-vyl3iox+4ckuwuxgi9ukhie6fsqxqs9fe2zaic4tnfd2n2qqaxomfbukk4qmdhc0jo6b1zp41j0lpt0or68amq==} react-dom@18.3.1: resolution: {integrity: sha512-5m4nqkp+rzrb09lnh59gm4bxth9251/ylbkibpe7tpgxfj+9kv6blklbxijjspbgbnibnqli23trntwt0snuiw==} peerdependencies: react: ^18.3.1 react-icons@5.4.0: resolution: {integrity: sha512-7eltjxgvt7x64ohh6wswnwwbktctmfk35hcjvjs0yxeahpm8oukds3+kqaw1viciltw+kr2unhaa12s9ppaloq==} peerdependencies: react: '*' react-is@16.13.1: resolution: {integrity: sha512-24e6yne2h+okt4kqsovnd8kbpv65zoxba4bvseob3arvwqki/dhzauoc5kuon/biccdacctzbuocfzs70kr8bq==} react@18.3.1: resolution: {integrity: sha512-ws+hagjshr0khevpjarfupvn1+hz1t0y6n5jlrgqbkb4urgpe/0rve+1kmb1v/owghgm4wicv+i7f2ptvj+2iq==} engines: {node: '>=0.10.0'} read-cache@1.0.0: resolution: {integrity: sha512-owdv/ft7ijogm/i0xvndz1lrranrfew4b2prf3owmqlxlfu3bs8fvhcsrscmk4lr56y9ya+athotpdctxcmpra==} readdirp@3.6.0: resolution: {integrity: sha512-hos089on8rduqdbhvq5z37a0esjsqz6qnrcffsmu3495futdqsm+7bhj29jviosbdeenan5dpu9t3to9vrlmza==} engines: {node: '>=8.10.0'} readdirp@4.0.2: resolution: {integrity: sha512-ydmz9g+vazkqbys/ozobjwabhtbzo3unyqhnrw1d3ufqb8ohb4us/taodo+zljgwmubknilowo+aaiiaxruwha==} engines: {node: '>= 14.16.0'} reflect.getprototypeof@1.0.6: resolution: {integrity: sha512-fmfw4xgodke3kdi6h4xcuz1dg8uaiv5q9gcewls4pnth2kxt+gz7yehs1jtmgbqmtv7y4gfgbs2re2nqhdozug==} engines: {node: '>= 0.4'} regexp.prototype.flags@1.5.2: resolution: {integrity: sha512-ncdidktlupr+++ockb0nwafemhg/da8auplpmqbk+bxkkcm1/s5he+aqya4plmcvbalb4/yxirub6qkex5yjbw==} engines: {node: '>= 0.4'} require-directory@2.1.1: resolution: {integrity: sha512-fgxei7+wsg9xrvdjsrlml22omttihrwamroieemgq8gzolc/pqr7rsrdstlug/bzaztf+tvikhc6/4rikrui+q==} engines: {node: '>=0.10.0'} resolve-from@4.0.0: resolution: {integrity: sha512-pb/mymxstakysrfx8pini1tgfnqifa3vke3gq4eua1df6ghp/+vgzqscgjapvy8n3q+4o7fwvqupjcnz7ryy4g==} engines: {node: '>=4'} resolve-pkg-maps@1.0.0: resolution: {integrity: sha512-ses2tj26tbvoc2nic2roe2y2zo7efxittlzcgsonhhnoq7ckiubfw0iw2ck6xkihpwlhknls8bo+hepngqlqzw==} resolve@1.22.8: resolution: {integrity: sha512-okwepcxqpd6fllvgv1vu0x7bkpmmcnolxzjmf4nczodnqciwraf+cptzn5i6n+rfd2d9i0tzpkng6yk168yiyw==} hasbin: true resolve@2.0.0-next.5: resolution: {integrity: sha512-u7wjgvg9sh8tvjw5smgbquui75fiyjax72hx15dwbbwf9dniqzrqag9nnphyy+tune0+vcrttuvni8osxzcoca==} hasbin: true restore-cursor@5.1.0: resolution: {integrity: sha512-oma2dcrw6u0yfxjqxm342bfkx/e4sg9rbtzo9ptucr/e8a33chuvstiyowh7fszkzlz1z/ta9aaopk2f4qioha==} engines: {node: '>=18'} retry@0.13.1: resolution: {integrity: sha512-xqbq3i8w1cge0seh+6gjj03lbmrfwuoszgk9oocpwyirhhoo80pfq4cuku5dkknwfoffterwlz56pyogyyfwdg==} engines: {node: '>= 4'} reusify@1.0.4: resolution: {integrity: sha512-u9nh88a3fc/ekcf1l0/up1iosiuijyth7hbvxvmhygvcfgvt897xguj2uoldei5bg2m7/uwyalvt6fbtcwtyzw==} engines: {iojs: '>=1.0.0', node: '>=0.10.0'} rfdc@1.4.1: resolution: {integrity: sha512-q1b3n5qkruwul7iyylaaj3kopit0n2i9mqieqxp73gvsn9cw3fdx8x63cemwhjgi2ppcf23ijp7ktmd39rawia==} rimraf@3.0.2: resolution: {integrity: sha512-jzkjmzkagffpp2yqxzxpbmlmbgsxze8ils4lmix/2o0l9ubw9o/y3o6wfw/i9ylapcujwwqbi3kdxipdc62tia==} deprecated: rimraf versions prior v4 longer supported hasbin: true rimraf@6.0.1: resolution: {integrity: sha512-9dkvaxask/xnxsjzmgfqqmcufgt2+ksofek3tmlfo8ncpfwpbmqwynn5y+nx56quyfctsyhf3ayiboeoumjk/a==} engines: {node: 20 || >=22} hasbin: true rollup@4.24.0: resolution: {integrity: sha512-domrlgsxnk1dm0ljiqa+i+o0rslhtii1je5wgk60j49d1jht5yyttbv1iwonystg+fzzesuosnial89siet+cg==} engines: {node: '>=18.0.0', npm: '>=8.0.0'} hasbin: true run-parallel@1.2.0: resolution: {integrity: sha512-5l4vyzr86lz/ldxztr6jql8afe2s0iflmp26abjslvadxhdhb/c0gush+y39ufci3dzz8olqupmnajomodhqba==} run-script-os@1.1.6: resolution: {integrity: sha512-ql6p2lzhbttdfzkts+qo4h94vukpxkdfz6qxxwauzn0mwvi7l3lpoi7bqpcq7lgdh3xll0dpexwfcviitlryrw==} hasbin: true safe-array-concat@1.1.2: resolution: {integrity: sha512-vj6rscswbcf19jiehefkrmw8dpibb+dmxklq/1sgdhomlhdpukzxfq2ydpls23zestijacurb1asgja3agmu1q==} engines: {node: '>=0.4'} safe-buffer@5.2.1: resolution: {integrity: sha512-rp3so07kcdmmkbgvganxqsjr7bgvsvk5s9eq1f+ppbro70+yeadxkw5dd8npn+gd6bjnym2vupucxmpuyvmcxq==} safe-regex-test@1.0.3: resolution: {integrity: sha512-cdasjnjpvra7roo6ra/glybtzyzzpyybxximdgw3usqlyjwels2rgw5ubtxaqvp+orpeck3blem8smtmheoruw==} engines: {node: '>= 0.4'} sass@1.79.4: resolution: {integrity: sha512-k0qdsnpxgyqo4gzq2ho5q70tlxth6cit59rdochmivrc8rqzatw5ab9prjz9kun1el4flxrbxjhik61jr4hcgg==} engines: {node: '>=14.0.0'} hasbin: true scheduler@0.23.2: resolution: {integrity: sha512-uoshspwz7nrmuqhr6t0hwjfduvozbtv7todh1/hirfrnidbnnbwd0cwjtgvtpngvlmwgcdp9/zl/tvrdqcuyzq==} schema-utils@3.3.0: resolution: {integrity: sha512-pn/yoavcc+5rq5nerguwrjllyvltbcibnz1i7b1laiaz9brble9gmge/eqv30p7ajquf7ddimy/rsbyo/grvgg==} engines: {node: '>= 10.13.0'} semver@6.3.1: resolution: {integrity: sha512-br7vvdcvho+q2xbewskxs6dje1qrnb7dxzurogb71cwosficbxysiagd+kl0mmq/mprg9yarrkyrqxto6xjmza==} hasbin: true semver@7.6.3: resolution: {integrity: sha512-ovekp1ckti+ctdvhwyfucmtsk/00wmaefyqkfndarm8u1wnvhsgax7a8d4uuilui5e84iewohs7zpyrmzu9u6a==} engines: {node: '>=10'} hasbin: true serialize-javascript@6.0.2: resolution: {integrity: sha512-saa1xpbyttq2gdefzyllo+rfe35nhzkabqzewnd3bpzppevisaqpdjcp8dyf6uiveqjrd46jemmya4ifievk8g==} set-function-length@1.2.2: resolution: {integrity: sha512-pgrc4hj4/snjwcss9amns40x3bnmdtknhgl5uambtmyjnu90egwh1rz+mc9efu4bun/uwzjkquy/1v3rm7hmfg==} engines: {node: '>= 0.4'} set-function-name@2.0.2: resolution: {integrity: sha512-7pgflmtwseadb0wyyvcma1t+yke6daig4wirafur5kcf+mhunpms1uer0ckqdtzd81yeswmhbtn+tr+dmviakq==} engines: {node: '>= 0.4'} shebang-command@2.0.0: resolution: {integrity: sha512-khxr2zzpytdmrn1qdjrrx/z1rr1kg8dx+gkpk1g4exmvxswmce1htwbwyuzlrayw1/yzp6yudy77ytvbn0dmda==} engines: {node: '>=8'} shebang-regex@3.0.0: resolution: {integrity: sha512-7++dfhtcx3353ubaq8ddr4nuxbetbzc7zqohmtqinhed6bsrxdieyzcvg07z44uydlshwuyxt5m/yhz8ekcb1a==} engines: {node: '>=8'} side-channel@1.0.6: resolution: {integrity: sha512-fdw/ez6q9rio8efg8hj+7u/ow+xrptichwcom2+th2a6obldtyyipve9m+kvi9z4c9qsexlagr6bteyhreugla==} engines: {node: '>= 0.4'} signal-exit@4.1.0: resolution: {integrity: sha512-bzyz1e88w9o1injbknolvytrwpdl46o1bg0d3xinv+9tkprxrn8juutifldkkmkwgn1m6cfia13sugqoa9korw==} engines: {node: '>=14'} simple-wcswidth@1.0.1: resolution: {integrity: sha512-xmo/8enretarot7tjvwjqhbdtmfn4eiq5i4jrmuilwfnfcv5w9u7rukuenkdw0jpqgmx36icywels5yiltuoxg==} slash@3.0.0: resolution: {integrity: sha512-g9q1haeby36osstwb4ntcgggaksavsjq68fbxoqcutl5fs1vuy18h3wst3jfyftrkx+kz0v1g85a4myaddmi2q==} engines: {node: '>=8'} slice-ansi@5.0.0: resolution: {integrity: sha512-fc+lgizvpfie0kkhquscwru1o/lf6nogjmlcgk+/lyxdctk8sgelyahdhfcdn+sn3cv+3vsa4byeo+imczpmgq==} engines: {node: '>=12'} slice-ansi@7.1.0: resolution: {integrity: sha512-bsisngz/jwex93bqeiabimytbeihizcwnjforuiy/t1wwqsfsm2vw1agpkylxvqtu7iasgdhhyqrlqqzfz+htg==} engines: {node: '>=18'} smart-buffer@4.2.0: resolution: {integrity: sha512-94hk0hh8rpqql2xxc3hsabooxkv20mtopkcxvwbiswles+64sbq5kfgn2kjdhb1pry9yrp0dxrci9rrci7rxkg==} engines: {node: '>= 6.0.0', npm: '>= 3.0.0'} socks-proxy-agent@8.0.5: resolution: {integrity: sha512-hehcesotfqbpw9sj8wvyb6ubmimv7kuuorif2nncq4vqvbfnblibw9yzr5dlycsuhwcd628prllm7n+e+ytzjw==} engines: {node: '>= 14'} socks@2.8.3: resolution: {integrity: sha512-l5x7vuuwbjvfbafglxpwkyshihevmf85tbiefzwc8zptomyybuehl7jye/ooc4/d48fgojsjxgsf/ajpycw8zw==} engines: {node: '>= 10.0.0', npm: '>= 3.0.0'} source-map-js@1.2.1: resolution: {integrity: sha512-uxwmkhlowvkb728iutqpxxfyu+usdybturk/8uge8cqmvrhopwvzdbwj0qhsl7mqc7visisbg8vq8+idqxpfqa==} engines: {node: '>=0.10.0'} source-map-support@0.5.21: resolution: {integrity: sha512-ubhu3l3czsiyyxkx88fdrgovxdscotgdrz6syxtsrxlzuzhg5p/66ht6uoulhu9ezod+inxhko3qqgwxut/y1w==} source-map@0.6.1: resolution: {integrity: sha512-ujgapumwlbmhkbgzt7ykc5yxut46f0iku8sgxq0bcwp5dz/h0plj6enjqjz1zbq2l5waqynrvbwwowmyf3f47g==} engines: {node: '>=0.10.0'} source-map@0.7.4: resolution: {integrity: sha512-l3bikuxvpocn5e74dziq5bgstb5yewhatszccu6t4sdoh8nwjcstko5qt2cvtfok6f0sal7p9xhaqholcpjyga==} engines: {node: '>= 8'} sprintf-js@1.1.3: resolution: {integrity: sha512-oo+0refv59/rz3gfjnkqiblwfhasesl1pcgyabqsnnifwoft6jnj5gcog2u6mlz//igyd+na8ni+mtshrereaa==} stop-iteration-iterator@1.0.0: resolution: {integrity: sha512-icgqj+0l0hodz2aeebadlsrc+vsndszsbdsih1ynsjcfkm7fdpcmfqal/dwf5bliw/xhrft/wax6zqbhq2bcjq==} engines: {node: '>= 0.4'} streamx@2.20.1: resolution: {integrity: sha512-uta0mu6wuc65iuvzkh4x9hedvsw7rbpxptwfwilmsj3qtdqbaiuboztxaukfpfugiga1c2byijz7wgduxicjha==} string-argv@0.3.2: resolution: {integrity: sha512-aqd2q0144z+/rqg52nehekzautauwjo8c6ytftgjko3tja5tugifmil6kexvhtxsdp7fxb6dvzkfmpcd/f3g+q==} engines: {node: '>=0.6.19'} string-width@4.2.3: resolution: {integrity: sha512-wkyqrqpjj0sip62erszdgsjmjwsap5ornihhhu6g7jvo/9jib6uyevl+txuoqrng8j/cxktwywuwvstriizz/g==} engines: {node: '>=8'} string-width@5.1.2: resolution: {integrity: sha512-hnlocr3vjcy8beonltcjz5/nxn2afmme6lhrdrebokqmap+xbew8n9txppdoqdgk5qci3ot0gktw6wc7emivqa==} engines: {node: '>=12'} string-width@7.2.0: resolution: {integrity: sha512-tsatikkw9b4n+aej+sva+whjzv7/zmhcsu78mlkwsk7cxmoshsbkfwus0fwwq8qyk3mgjbqrx6gbi4kybdvgkq==} engines: {node: '>=18'} string.prototype.includes@2.0.0: resolution: {integrity: sha512-e34ckbgyeqndcrbu76cdjl5jlcvrtsdyq0meh/b10r17prp4cihlwtgnulv8ay6cgemlkcbkfckyfz43yldyzg==} string.prototype.matchall@4.0.11: resolution: {integrity: sha512-nudh0adavy2og7ibbpenwqr9exh+e26sv8e0/ete1tltdgzl+gtbkdannybtmekfk6/dq3mkcgtzxfed1lqrtg==} engines: {node: '>= 0.4'} string.prototype.repeat@1.0.0: resolution: {integrity: sha512-0u/tlddbkd8bfcq/4f5+mnrrxwz8hg2w7zr8wa16e8z9xpepwl3egecud0oxpeh/vjh/2g3gjutr3zoibe2s/w==} string.prototype.trim@1.2.9: resolution: {integrity: sha512-klhucnximz8mlsoihjhjebjaimvqu3z2nexwfwniqjn0gefs9j9+ixkozwwtqgcgoa1wuzzljkptr4zhnftfxw==} engines: {node: '>= 0.4'} string.prototype.trimend@1.0.8: resolution: {integrity: sha512-p73ul5vchco2bzz6krwwqe3kczm7nkmis8s//xec6fqonchbum4ep6kr4dlejqfo3wnj3fuo8nm0kosjvdhjzq==} string.prototype.trimstart@1.0.8: resolution: {integrity: sha512-uxsh262cszy1tfu3g3secr6uglcfvpmhiqhjlgcutcccgihyc/xks9djmtmuob2j1mvseu8eu6nwc/iqku6gfg==} engines: {node: '>= 0.4'} strip-ansi@6.0.1: resolution: {integrity: sha512-y38vpshcqkfrcpfnq9vusxmquuv5oxokpget6agrr3o3gc9alva6jbfusocnbxggzf+/0ooi7krpuusztudu5a==} engines: {node: '>=8'} strip-ansi@7.1.0: resolution: {integrity: sha512-iq6evvi64nqqtryq2kteg2d2uu7lelhtjwsh4yzihzshxlgzms/wic4vodqtlg/ivvirbkg06crznp0qv7hkcq==} engines: {node: '>=12'} strip-bom@3.0.0: resolution: {integrity: sha512-vavamrxogbvnf6nyeeml3dbk19irpdcoiww+swq+cbgiu7lju6t+jkla1mhweowtadgt4isvusxlydq34ddcwa==} engines: {node: '>=4'} strip-final-newline@3.0.0: resolution: {integrity: sha512-doesqjyr96iwyylgobzd39eunta5vjxyvvaem5jnh7kgo75v43hk1odpqkndyxnmur6k+geidvxnjb8hj3crxw==} engines: {node: '>=12'} strip-json-comments@3.1.1: resolution: {integrity: sha512-6fpc+r4ihwqp6n/aiv2f1gmh8lovtwqhoqc4yk6osdvvocumasfcqjkxnqiymhmmws/mehlp7vehlt3ql6leig==} engines: {node: '>=8'} strnum@1.0.5: resolution: {integrity: sha512-j8bbnykkxl5qycr36tio8w3mvgvhrmmxsd5paitgkmyzwjvybiw2ivq5nqd0i4lsnskb/sx9vhllbffdr9k1ja==} sucrase@3.35.0: resolution: {integrity: sha512-8ebvdiu9in/neswxesxdke0dunta1golhufmssxxmd2z2/tmzpdmpvxqgsc+ajgo8y2uyumixasruc/qpoq0ga==} engines: {node: '>=16 || 14 >=14.17'} hasbin: true supports-color@7.2.0: resolution: {integrity: sha512-qpcavrl9stuohveksn7hncjrvv501qiackzqlo/+lwxc9+0q2wlyv4dfvt80/dpn2pqobsjddiogxgr9+ovwrw==} engines: {node: '>=8'} supports-color@8.1.1: resolution: {integrity: sha512-mpuen2oodtuzxvkql72cuf7rq5eihsgvssvg0ia9c5rbwgl2ci4c7epps8utbiplnlzzinuv56w+funxy3ty2q==} engines: {node: '>=10'} supports-preserve-symlinks-flag@1.0.0: resolution: {integrity: sha512-ot0wnxs9fgdkgicepe6rhnk1wa8+mupa6csjer3v8k27q9bb1rte3r1p7hv0z1zyac8s6vvv8diywf681mat0w==} engines: {node: '>= 0.4'} synckit@0.10.3: resolution: {integrity: sha512-r1urvuyitawfecggqevpdjwaldvdst9nm+ip//tk2x7qhcksvbk/fwfgw/tlahzzlrannazmcrw0zd8hlyfteq==} engines: {node: ^14.18.0 || >=16.0.0} tailwind-merge@2.5.2: resolution: {integrity: sha512-kjebm+pvd+6eawzjl2bi+02/9lflal1gs61+qb7hvtfqq0axwc5lgt8pet1gs0cwkktke6ysptay3cbc5meiig==} tailwindcss@3.4.17: resolution: {integrity: sha512-w33e2acvsdp0tw9rzunxadxlkhxqfzskqew/aia2i/sj8fthxwovwlxhspxtbahweihbfxaeduhp2tueakp8og==} engines: {node: '>=14.0.0'} hasbin: true tapable@2.2.1: resolution: {integrity: sha512-gnzqvqtoip6rytfe2qxb8zvlnmw0n88vp1szwwrimp02mntsx3wtn5qrdqy9w2xdufnugvowhnnqsjwcp+kqaq==} engines: {node: '>=6'} tar-fs@3.0.6: resolution: {integrity: sha512-iokbdqqkuyexhgpyazxmczgphnhxz0cmrqi+mob/wfgs9dw5wnfrlgtjujbvz50vq3qfrwj62qvocfu8mpvu5w==} tar-stream@3.1.7: resolution: {integrity: sha512-qjj60cxt7iu1ffyc3njmjh6ekucfej46zuqj4j7pqylthyd9bo0xbtmcoihszzjvwfslks0+nle/j538yaw9rq==} terser-webpack-plugin@5.3.10: resolution: {integrity: sha512-bkfpwlpdndps+nggcr1u59t0xscl5317y0urenrhaw9/fwhpenlq6bfgs+4ypfyp51vqc1bq4rp1efxw5zsh9w==} engines: {node: '>= 10.13.0'} peerdependencies: '@swc/core': '*' esbuild: '*' uglify-js: '*' webpack: ^5.1.0 peerdependenciesmeta: '@swc/core': optional: true esbuild: optional: true uglify-js: optional: true terser@5.34.1: resolution: {integrity: sha512-fsjz7izld/bxkz+4xrrtgj26o/6vtjqytuk8b8oxkwcd2i+79vpjlz7qss1+ze7h8gniscfqxcdyj/kqbyzfva==} engines: {node: '>=10'} hasbin: true text-decoder@1.2.0: resolution: {integrity: sha512-n1yg1moj9dnpk3nezox7t6jchtbyjs3i3cucbnn6fcdprimzx7nsgrgpwwdwzzgxd7es1xb+3uoqhmgokan+fg==} text-table@0.2.0: resolution: {integrity: sha512-n+8uisaxdgk8pfxp4hazvr9nbfmvj3zylawitioqc5v5isinhr+r5uao8+7r3bmfuniufisa7rdpvgacc2cspw==} thenify-all@1.6.0: resolution: {integrity: sha512-rnxqh/qi8/t3thxjdwcstuo4zeqo64+uy/+snvrbx4xn2ox+oz9op+ijnnfqplfra2zuvekcsa2ovwi3t4uvma==} engines: {node: '>=0.8'} thenify@3.3.1: resolution: {integrity: sha512-rvzsiv5ig10hk3enotrhvz0t9em6cyhblkh/yazukqd8hrkkhsfcgicp2kuy0epxndzanbmnllzwpwak+bhesw==} through@2.3.8: resolution: {integrity: sha512-w89qg7pi8wadvx60bmdp+bfod5dvhm9olhefp5o4a2qf0csbgsbx4qzmadpmvvqlljbbci+wqggoapvcdensvg==} to-regex-range@5.0.1: resolution: {integrity: sha512-65p7iz6x5yer1cwcgvqxbbiw7uk3goy5didtz4rdvelqhrdjp+li/hx6tyk0neb+2gcynecmjigqradcsnk8sq==} engines: {node: '>=8.0'} tr46@0.0.3: resolution: {integrity: sha512-n3wmsuqv66lt30crxnbejx4gewlow3v6rr4mccv6prnfwhs01rkgyfdjpnbyd9br7lpxv1+emh01fhnq2gdgrw==} ts-api-utils@1.3.0: resolution: {integrity: sha512-uqmio7pb8wromkr1/+mfvltroivdvtmx3k6ouir8ynlyzb8jeriont2btatmnpa1ekagn7ypdyf6v+ygrdu+eq==} engines: {node: '>=16'} peerdependencies: typescript: '>=4.2.0' ts-interface-checker@0.1.13: resolution: {integrity: sha512-y/arvbn+rrz3jckl9c4kvnftfsm2/mep5fsz5eszsangpslqrpri5m4pkf+mjne52joo90pnpsc3ur3btqw0ga==} ts-loader@9.5.1: resolution: {integrity: sha512-rnh3sk9kgzch9dyzc7cewqm4ntxjtjsevrj2dybzr7f8/wcta+iv44upcxc5+nzdzivktlzv6c9p4e+ofhdlyg==} engines: {node: '>=12.0.0'} peerdependencies: typescript: '*' webpack: ^5.0.0 ts-node@10.9.2: resolution: {integrity: sha512-f0ffpidchgn8zcpsbf1drevwt047ymnaijm3u2w2rewrb+fob/zepzcroyqolmmo7abiddlcqiek5dyjklngrq==} hasbin: true peerdependencies: '@swc/core': '>=1.2.50' '@swc/wasm': '>=1.2.50' '@types/node': '*' typescript: '>=2.7' peerdependenciesmeta: '@swc/core': optional: true '@swc/wasm': optional: true tsc-alias@1.8.10: resolution: {integrity: sha512-ibv4kawffkfdkjxnwfvtdomb0zi1rjvxcbpgicdsfpcqssmpwyuzhg3rqyi5ykobwwxfpeyqfu1hdo4qlg2zpw==} hasbin: true tsconfig-paths@3.15.0: resolution: {integrity: sha512-2ac2rgzde/cn48gvoe3m+o82pefewd3upbyouhhdkashwjkjds4flxwf/ux5katbkn20oafgu+jbelp1pos0mg==} tslib@2.7.0: resolution: {integrity: sha512-glxckdn1/j47aihiokjn69hjmcbgthi0imlmbylhykhgen0jvgola9yvjfgzcuklszqmw55o+dw7ixv3rcxdza==} tslib@2.8.1: resolution: {integrity: sha512-ojfu94hqb+kvdusuql7wnpmqnfmlsoa/nah6b6eh0wceok0/mpexu6c3wkdv83mkouhprhtsxkku99ibazs/2w==} tsx@4.19.2: resolution: {integrity: sha512-poul6vo2luq/bsa8s5q7b91cgnsjctn9ugq/+mvow99qw6x/uzywzxy/3nmqot66ehyfcvvfvacc58ubpff28g==} engines: {node: '>=18.0.0'} hasbin: true turbo-darwin-64@2.3.3: resolution: {integrity: sha512-bxx82xe6du/3rpmm4acc5rdeilin99vuld4hkfquw+mvfg6darnbuqxywshzttc25xgyjqrjsv05888w1grpaa==} cpu: [x64] os: [darwin] turbo-darwin-arm64@2.3.3: resolution: {integrity: sha512-dybqwa3nsauwkcuyvzfoubbsubvqzh5hwufy2kgi3fgjiwvzofk86ss+xswu//rleafywemopigspysmw4x15a==} cpu: [arm64] os: [darwin] turbo-linux-64@2.3.3: resolution: {integrity: sha512-ehj9oib0dfap6bxb88jsuaclsoqsywbgmhy2ercu6d2gg6xw3b6e2uwhl/1ho9fstg4uvgo4db9wgska5erjua==} cpu: [x64] os: [linux] turbo-linux-arm64@2.3.3: resolution: {integrity: sha512-nmde/njzodj1uwbhmtopmqflebkhzgs61kobfrdebxvu3lekwheopvamfcovzswzch+kn2drtbnilz+/rp8ocg==} cpu: [arm64] os: [linux] turbo-windows-64@2.3.3: resolution: {integrity: sha512-o2+bs4qqjk3doerscxqv7n2gxncqhr9hxumkmxdj/ogx9ocatiwnnwx34umzodlosnjpgsqjl8irwiy65smyoq==} cpu: [x64] os: [win32] turbo-windows-arm64@2.3.3: resolution: {integrity: sha512-dw4zk1r6xlpnylikjc4o87hxyidtrrcbeo/hz9wng2xm/mqqykayzjxjggrmsc0mmen9z4+zifnsnbra0b08ag==} cpu: [arm64] os: [win32] turbo@2.3.3: resolution: {integrity: sha512-duhwqacc8btiuzdrzaygvpspgliaoqpfyxlcieqbwuvmml/lrgie3rakdropooix0dylzxs2nh6bowjozrj8ha==} hasbin: true type-check@0.4.0: resolution: {integrity: sha512-xleuoc9uwgxqjwwxautzamzmcfz5858qa2vvx1ur5xicixxip+8lnfdgrplu30us6teqdlskffu+ae4k79ooew==} engines: {node: '>= 0.8.0'} type-fest@0.20.2: resolution: {integrity: sha512-ne+ee4r0/iwnpaxd852z3a+n0bt5rn//njjwrd2vfhemrywxf5vszlh4r6lixl6b+wz/8d+matsakn1fiki3lq==} engines: {node: '>=10'} typed-array-buffer@1.0.2: resolution: {integrity: sha512-geymjykztkxzzbzm4jqa9w6q1jjm7x2d+sh19adsd4wqnmpdyyvwpsic2q/835khuo3beq7cjelghftsobb2mq==} engines: {node: '>= 0.4'} typed-array-byte-length@1.0.1: resolution: {integrity: sha512-3imj9q0ao7we9twcaykiptknbuoiczcct0d4mrvuuh88feoeh62iuqe0otrad3ebqeotrk8xcboknunc1y67pw==} engines: {node: '>= 0.4'} typed-array-byte-offset@1.0.2: resolution: {integrity: sha512-ous0vodha56fvizucs2e63zkgtgracj7omjwd/8ltemepffyjfixmz1zxenpgcfbbt4ec1j2xsyvs2gkg0etfa==} engines: {node: '>= 0.4'} typed-array-length@1.0.6: resolution: {integrity: sha512-/oxdn6otak5kbpgb28t+hzc2m+adtvrxxrkkbuwtslgdoxgx13hyy7ek6bfrl5+abs2yzzb0c4cnqfatvypw/g==} engines: {node: '>= 0.4'} typed-query-selector@2.12.0: resolution: {integrity: sha512-sbklcd1f0eizoypiw192rrhzzz5sbijb6xm+cpmrwdqobvdtunohhik9fcgsok5jviyxoyep4iede3upfh3pag==} typescript@5.5.4: resolution: {integrity: sha512-mtq29skdaeyp7aljrgtpoptvofbwrwls6dprzwjde+c0r4brx/guyhhsecbhmflnblcjipt9nl9yg5tz1weh+q==} engines: {node: '>=14.17'} hasbin: true unbox-primitive@1.0.2: resolution: {integrity: sha512-61pplcd9h51voreyj0breidem3mdkmknh6+v9l08331ipq6q8ofxzyiqp6n/tbhx4s5i9urhcye6brbkizkbdw==} unbzip2-stream@1.4.3: resolution: {integrity: sha512-mlexgw4w71ebdjvih16lqltzs32vkqssfk80gcfulwt/4/hnrfsoscrf/c++9xinkmzecl1ul9ddwxqfwkrupg==} undici-types@5.26.5: resolution: {integrity: sha512-jlcmo+ehdeikqlfxk6ifvoauvmgz7cu7zd/h9xz0qzeosshmujvozsqvvysywxkfxc+iflksiffhv0svzup6pa==} undici-types@6.19.8: resolution: {integrity: sha512-ve2kp6f/jnbpbfyobghuerc9g1fygn/f8n1lwtwnxcezd6ifqtwuqcnxgetmmq6dlrrc1hrsrbnczpokrrdhjw==} universalify@2.0.1: resolution: {integrity: sha512-gpthnqghinnc/vtgik0sofgfnxw7jvrlrutconjrlvaw6dux0wo5jeko9swrmbhh+psyaz7oxaionf/ukogyiw==} engines: {node: '>= 10.0.0'} update-browserslist-db@1.1.1: resolution: {integrity: sha512-r8uzcaa9az+38repij1txlimtjxlvfghzsglwbd/k6nj76ctsh1e3q4dogrukilqd3sgqyu56r5+lo5r94l29a==} hasbin: true peerdependencies: browserslist: '>= 4.21.0' uri-js@4.4.1: resolution: {integrity: sha512-7rkuyy33q1yc98pq1damltwx109f7tifwlw1ydo8wl1ii1sehieeh0hhfpel2fmxk6z0s8ecks9frculjvndbg==} util-deprecate@1.0.2: resolution: {integrity: sha512-epd5q1uxyfxjpcrlncc1nhnq3goa6dzbocaiii2tasca7vcj1ujdmagczikxnsuyfd1dak//lteq8xiibrhtcw==} uuid@10.0.0: resolution: {integrity: sha512-8xkaphelsdnegrdxuohb3rgvxz6teuysgezbojtttpm2lwhgbjlgozlhb63iuwfbpnucqjnd6d3aoudo+h3rwq==} hasbin: true v8-compile-cache-lib@3.0.1: resolution: {integrity: sha512-wa7yjyugfnzngi/vtk0uhan+lgdcxbpcylvxgp0zu59fz5aigtnxaq3dhiov063morb+vfuflh3jlf2kdtk3xg==} vite@6.0.12: resolution: {integrity: sha512-gzlogvgsgx2xyat0j5qhj7smdo5aldshabku8ev7dil8acrlfslcj9ghresq9pgjf/q5c4czkdtdlkc6dyvq3w==} engines: {node: ^18.0.0 || ^20.0.0 || >=22.0.0} hasbin: true peerdependencies: '@types/node': ^18.0.0 || ^20.0.0 || >=22.0.0 jiti: '>=1.21.0' less: '*' lightningcss: ^1.21.0 sass: '*' sass-embedded: '*' stylus: '*' sugarss: '*' terser: ^5.16.0 tsx: ^4.8.1 yaml: ^2.4.2 peerdependenciesmeta: '@types/node': optional: true jiti: optional: true less: optional: true lightningcss: optional: true sass: optional: true sass-embedded: optional: true stylus: optional: true sugarss: optional: true terser: optional: true tsx: optional: true yaml: optional: true watchpack@2.4.2: resolution: {integrity: sha512-tnbfsbcoccdgjz4piurlcbj3njhznvh9kw6f6iokjifpl8onxe9a6nmdvxdinbrsflils6vb07f7wlbrwpyzjw==} engines: {node: '>=10.13.0'} web-streams-polyfill@4.0.0-beta.3: resolution: {integrity: sha512-qw95tctahmsyfhdybgmwo5ijim93i/6vtrk+dahtwfphwh+c8cg7j7xykrwrj8ib6vyxe0ocynrmzy4xaan6ug==} engines: {node: '>= 14'} webextension-polyfill@0.12.0: resolution: {integrity: sha512-97tbmpowjee+3nfbq4vocycdlkfw54rfaj6evqylbcxqciplszkwggaspv4opt9gdkcj80rjlcmnznn008ag6q==} webidl-conversions@3.0.1: resolution: {integrity: sha512-2jan3z8ar6rjk8sm8orrc0h/bcl/dql7trpdgz4i1cjdf+eamlmyxbhyxukl849eucpfhvboxmsflfob8kxaeq==} webpack-sources@3.2.3: resolution: {integrity: sha512-/dymeordglkkig0fmvtz+4dux/3ghozwgm6ipp8krhvn+eqf9+q7gwxvnmk3+ucpwfdxyc4exgbckixdfefh1w==} engines: {node: '>=10.13.0'} webpack@5.94.0: resolution: {integrity: sha512-kcsgn50vt+06jh/iunzjedygujs5fgjow8wb9c0v5n1om8o1g4l6ljtfxwlxiatopoqu+voxxa7gyiswxcopyg==} engines: {node: '>=10.13.0'} hasbin: true peerdependencies: webpack-cli: '*' peerdependenciesmeta: webpack-cli: optional: true whatwg-fetch@3.6.20: resolution: {integrity: sha512-eqhifu6daoa8kpjowtl0olhvof3i7orfzsyigsemb8gcxs+rrzauaerx65xmenwvqxa6hxh2m69z9lakkdisfg==} whatwg-url@5.0.0: resolution: {integrity: sha512-sae57nupxk6v3hy35+jzbwya0rksy0xr8jsxzpwglr7ys0ibzhgvia1/tugjlmsvqs8pb9anvicxeuohlprytw==} which-boxed-primitive@1.0.2: resolution: {integrity: sha512-bwzdv0aklpplfy2kzrx6tvyun7ojjr7lwkg6ml0roiy9yeusr7js372qlnw18uqyzgyk9zigcerwqzomen9vng==} which-builtin-type@1.1.4: resolution: {integrity: sha512-bppkmbsshfmimsl8bo9tbsyzsvgjvoppt8xuigzwiu/bhdcgxnpokcxgqj6guyhe0minmdecbfplom2hzy084w==} engines: {node: '>= 0.4'} which-collection@1.0.2: resolution: {integrity: sha512-k4jvyjnbdgvc86y6bkalzen933swyoubfkdmbu9zfkcabdvbpitndmjvz/aqjrxqrv5epktnd1s39giiqbngcw==} engines: {node: '>= 0.4'} which-typed-array@1.1.15: resolution: {integrity: sha512-ov0jmftuky6cxfkqehvvbp/lswj2sy4vwmioienyjleprbo/ykyv9oyjysfakosh+rykil5zjcnz8/4jncrpda==} engines: {node: '>= 0.4'} which@2.0.2: resolution: {integrity: sha512-bli3tl1tw3pvl70l3yq3y64i+awpwxqsgbywkkqmtnbxgrmd+yj7rhw0kuedxzjayxgjew5ogapknmeknmjiba==} engines: {node: '>= 8'} hasbin: true word-wrap@1.2.5: resolution: {integrity: sha512-bn22b5eammi9umtjrgd5g5ecyppcpduy0fjxbysat5zyxjfocks53sqde3pwkvowphxvb3brycen4twa55b5ca==} engines: {node: '>=0.10.0'} wrap-ansi@7.0.0: resolution: {integrity: sha512-yvgij2kamlstxw6nszjobxfswsn0ycdesmc4p+q21c5zpuz1pl+nfxvdxptdhvmnvoq6xsyg4autyt/fi7d16q==} engines: {node: '>=10'} wrap-ansi@8.1.0: resolution: {integrity: sha512-si7qwi6zumq56besfvagtmzmdgotoxfr+sez11mobfc7tm+vkuckk9bw2uefftgvuboksxmsw0aa2gs8g71ncq==} engines: {node: '>=12'} wrap-ansi@9.0.0: resolution: {integrity: sha512-g8ura3s+3z2g+mkgnrq8dqafzauxfsxpbb8octgrtctp+l/v9nbfnmcup1bzmts3g1142mszfn6eeukrr4pd1q==} engines: {node: '>=18'} wrappy@1.0.2: resolution: {integrity: sha512-l4sp/drseor9wl6evv2+tuqn63dmkpjz/sp9xkghtebv9klps1xusz3u7/iqo4wxtcfb4bgpqprcr3qcvezpcq==} ws@8.18.0: resolution: {integrity: sha512-8vbfwfhlbbwu3+n6oksompbdt4kxpddb9cjk2bj6mh9ucxdlnnvh1e+roykkmn9nxw2yjz7vzeo9ooz2zj04pw==} engines: {node: '>=10.0.0'} peerdependencies: bufferutil: ^4.0.1 utf-8-validate: '>=5.0.2' peerdependenciesmeta: bufferutil: optional: true utf-8-validate: optional: true y18n@5.0.8: resolution: {integrity: sha512-0pffzegedwjhjiamtlrp2dwhjdf5s7jo9tuztdqxahincdvs+3nginqpd00aphqjr/0lhanus6/+7scb98yofa==} engines: {node: '>=10'} yaml@2.5.1: resolution: {integrity: sha512-blqojax/adgq20ispjrvf0iruhixvhyvr53of7wgcwlo2jvtulh5m87dsmulfvxrpnloni4tb6p/oh8d7kpn9q==} engines: {node: '>= 14'} hasbin: true yargs-parser@21.1.1: resolution: {integrity: sha512-tvpsjw7ddjecaifpbib1e3qxiqse6nopc5/etdrbbic4h0lvswhnoa3g+m2hclbiujhzsxz4vjva+guuc2/lbw==} engines: {node: '>=12'} yargs@17.7.2: resolution: {integrity: sha512-7dszzrq++cknni/krknyrv7jkkpuxmeh61soahkg9mrwehzfwhfnxpxgl+69cd1ou63c13nupcnmicrvqcum6w==} engines: {node: '>=12'} yauzl@2.10.0: resolution: {integrity: sha512-p4a9i6x6nu6ihogmbqacbjy1mlc4j27vepzx9f4l4/vzt3lyq1vkfhw/v/pucb9buo+dg3ihkt0x3qya58zc3g==} yn@3.1.1: resolution: {integrity: sha512-ux4yggwsu2c7isfwe8yu1ylujmqvhxqk2clxnqa5acc3qfbgnpm7fu0y8b/z16pxlnfxzyvwhd3fhby9dlmc6q==} engines: {node: '>=6'} yocto-queue@0.1.0: resolution: {integrity: sha512-rvksvsnncdj/ohgc6xgpwyn8ehecxsilm8mxue/t/movqjewpuo1milpthqirgtkclexl4meafvagts7hmnz2q==} engines: {node: '>=10'} zod-to-json-schema@3.24.4: resolution: {integrity: sha512-0unlcvgabyrni9ag8vghj21drk7+7tp7vtwwr7kxxxxc/3pbxz2phldgj3cicahgf1khm4dexbfj7bxrzjxzig==} peerdependencies: zod: ^3.24.1 zod@3.24.1: resolution: {integrity: sha512-muh7gbl9si1ncimzv67x5ftkkbltwpz5vbp1vsoqzj1mhrbz4wlvcm3gedkzwlp0oyel8sigfeiz54su+ovt+a==} zod@3.24.2: resolution: {integrity: sha512-ly7cdw43ecgw9u1tct3ioxhflywfvqdyze4waez812jr/bz8fhdsl7pfqosztz5n+2nqrxs8gbwnawo3znxqhq==} snapshots: '@alloc/quick-lru@5.2.0': {} '@anthropic-ai/sdk@0.32.1': dependencies: '@types/node': 18.19.74 '@types/node-fetch': 2.6.12 abort-controller: 3.0.0 agentkeepalive: 4.6.0 form-data-encoder: 1.7.2 formdata-node: 4.4.1 node-fetch: 2.7.0 transitivepeerdependencies: - encoding '@cfworker/json-schema@4.1.1': {} '@cspotcode/source-map-support@0.8.1': dependencies: '@jridgewell/trace-mapping': 0.3.9 '@esbuild/aix-ppc64@0.25.1': optional: true '@esbuild/android-arm64@0.25.1': optional: true '@esbuild/android-arm@0.25.1': optional: true '@esbuild/android-x64@0.25.1': optional: true '@esbuild/darwin-arm64@0.25.1': optional: true '@esbuild/darwin-x64@0.25.1': optional: true '@esbuild/freebsd-arm64@0.25.1': optional: true '@esbuild/freebsd-x64@0.25.1': optional: true '@esbuild/linux-arm64@0.25.1': optional: true '@esbuild/linux-arm@0.25.1': optional: true '@esbuild/linux-ia32@0.25.1': optional: true '@esbuild/linux-loong64@0.25.1': optional: true '@esbuild/linux-mips64el@0.25.1': optional: true '@esbuild/linux-ppc64@0.25.1': optional: true '@esbuild/linux-riscv64@0.25.1': optional: true '@esbuild/linux-s390x@0.25.1': optional: true '@esbuild/linux-x64@0.25.1': optional: true '@esbuild/netbsd-arm64@0.25.1': optional: true '@esbuild/netbsd-x64@0.25.1': optional: true '@esbuild/openbsd-arm64@0.25.1': optional: true '@esbuild/openbsd-x64@0.25.1': optional: true '@esbuild/sunos-x64@0.25.1': optional: true '@esbuild/win32-arm64@0.25.1': optional: true '@esbuild/win32-ia32@0.25.1': optional: true '@esbuild/win32-x64@0.25.1': optional: true '@eslint-community/eslint-utils@4.4.0(eslint@8.57.0)': dependencies: eslint: 8.57.0 eslint-visitor-keys: 3.4.3 '@eslint-community/regexpp@4.11.0': {} '@eslint/eslintrc@2.1.4': dependencies: ajv: 6.12.6 debug: 4.3.7 espree: 9.6.1 globals: 13.24.0 ignore: 5.3.2 import-fresh: 3.3.0 js-yaml: 4.1.0 minimatch: 3.1.2 strip-json-comments: 3.1.1 transitivepeerdependencies: - supports-color '@eslint/js@8.57.0': {} '@google/generative-ai@0.21.0': {} '@humanwhocodes/config-array@0.11.14': dependencies: '@humanwhocodes/object-schema': 2.0.3 debug: 4.3.7 minimatch: 3.1.2 transitivepeerdependencies: - supports-color '@humanwhocodes/module-importer@1.0.1': {} '@humanwhocodes/object-schema@2.0.3': {} '@isaacs/cliui@8.0.2': dependencies: string-width: 5.1.2 string-width-cjs: string-width@4.2.3 strip-ansi: 7.1.0 strip-ansi-cjs: strip-ansi@6.0.1 wrap-ansi: 8.1.0 wrap-ansi-cjs: wrap-ansi@7.0.0 '@jridgewell/gen-mapping@0.3.5': dependencies: '@jridgewell/set-array': 1.2.1 '@jridgewell/sourcemap-codec': 1.5.0 '@jridgewell/trace-mapping': 0.3.25 '@jridgewell/resolve-uri@3.1.2': {} '@jridgewell/set-array@1.2.1': {} '@jridgewell/source-map@0.3.6': dependencies: '@jridgewell/gen-mapping': 0.3.5 '@jridgewell/trace-mapping': 0.3.25 '@jridgewell/sourcemap-codec@1.5.0': {} '@jridgewell/trace-mapping@0.3.25': dependencies: '@jridgewell/resolve-uri': 3.1.2 '@jridgewell/sourcemap-codec': 1.5.0 '@jridgewell/trace-mapping@0.3.9': dependencies: '@jridgewell/resolve-uri': 3.1.2 '@jridgewell/sourcemap-codec': 1.5.0 '@langchain/anthropic@0.3.12(@langchain/core@0.3.37(openai@4.82.0(ws@8.18.0)(zod@3.24.1)))': dependencies: '@anthropic-ai/sdk': 0.32.1 '@langchain/core': 0.3.37(openai@4.82.0(ws@8.18.0)(zod@3.24.1)) fast-xml-parser: 4.5.0 zod: 3.24.1 zod-to-json-schema: 3.24.4(zod@3.24.1) transitivepeerdependencies: - encoding '@langchain/core@0.3.37(openai@4.82.0(ws@8.18.0)(zod@3.24.1))': dependencies: '@cfworker/json-schema': 4.1.1 ansi-styles: 5.2.0 camelcase: 6.3.0 decamelize: 1.2.0 js-tiktoken: 1.0.17 langsmith: 0.3.4(openai@4.82.0(ws@8.18.0)(zod@3.24.1)) mustache: 4.2.0 p-queue: 6.6.2 p-retry: 4.6.2 uuid: 10.0.0 zod: 3.24.1 zod-to-json-schema: 3.24.4(zod@3.24.1) transitivepeerdependencies: - openai '@langchain/deepseek@0.0.1(@langchain/core@0.3.37(openai@4.82.0(ws@8.18.0)(zod@3.24.1)))(ws@8.18.0)': dependencies: '@langchain/core': 0.3.37(openai@4.82.0(ws@8.18.0)(zod@3.24.1)) '@langchain/openai': 0.4.4(@langchain/core@0.3.37(openai@4.82.0(ws@8.18.0)(zod@3.24.1)))(ws@8.18.0) zod: 3.24.2 transitivepeerdependencies: - encoding - ws '@langchain/google-genai@0.1.11(@langchain/core@0.3.37(openai@4.82.0(ws@8.18.0)(zod@3.24.1)))(zod@3.24.1)': dependencies: '@google/generative-ai': 0.21.0 '@langchain/core': 0.3.37(openai@4.82.0(ws@8.18.0)(zod@3.24.1)) zod-to-json-schema: 3.24.4(zod@3.24.1) transitivepeerdependencies: - zod '@langchain/ollama@0.2.0(@langchain/core@0.3.37(openai@4.82.0(ws@8.18.0)(zod@3.24.1)))': dependencies: '@langchain/core': 0.3.37(openai@4.82.0(ws@8.18.0)(zod@3.24.1)) ollama: 0.5.14 uuid: 10.0.0 zod: 3.24.1 zod-to-json-schema: 3.24.4(zod@3.24.1) '@langchain/openai@0.4.2(@langchain/core@0.3.37(openai@4.82.0(ws@8.18.0)(zod@3.24.1)))(ws@8.18.0)': dependencies: '@langchain/core': 0.3.37(openai@4.82.0(ws@8.18.0)(zod@3.24.1)) js-tiktoken: 1.0.17 openai: 4.82.0(ws@8.18.0)(zod@3.24.1) zod: 3.24.1 zod-to-json-schema: 3.24.4(zod@3.24.1) transitivepeerdependencies: - encoding - ws '@langchain/openai@0.4.4(@langchain/core@0.3.37(openai@4.82.0(ws@8.18.0)(zod@3.24.1)))(ws@8.18.0)': dependencies: '@langchain/core': 0.3.37(openai@4.82.0(ws@8.18.0)(zod@3.24.1)) js-tiktoken: 1.0.17 openai: 4.82.0(ws@8.18.0)(zod@3.24.2) zod: 3.24.2 zod-to-json-schema: 3.24.4(zod@3.24.2) transitivepeerdependencies: - encoding - ws '@langchain/xai@0.0.2(@langchain/core@0.3.37(openai@4.82.0(ws@8.18.0)(zod@3.24.1)))(ws@8.18.0)': dependencies: '@langchain/core': 0.3.37(openai@4.82.0(ws@8.18.0)(zod@3.24.1)) '@langchain/openai': 0.4.4(@langchain/core@0.3.37(openai@4.82.0(ws@8.18.0)(zod@3.24.1)))(ws@8.18.0) zod: 3.24.2 transitivepeerdependencies: - encoding - ws '@laynezh/vite-plugin-lib-assets@0.6.1(vite@6.0.12(@types/node@22.7.4)(jiti@1.21.6)(sass@1.79.4)(terser@5.34.1)(tsx@4.19.2)(yaml@2.5.1))': dependencies: escape-string-regexp: 4.0.0 loader-utils: 3.3.1 mrmime: 1.0.1 semver: 7.6.3 vite: 6.0.12(@types/node@22.7.4)(jiti@1.21.6)(sass@1.79.4)(terser@5.34.1)(tsx@4.19.2)(yaml@2.5.1) '@nodelib/fs.scandir@2.1.5': dependencies: '@nodelib/fs.stat': 2.0.5 run-parallel: 1.2.0 '@nodelib/fs.stat@2.0.5': {} '@nodelib/fs.walk@1.2.8': dependencies: '@nodelib/fs.scandir': 2.1.5 fastq: 1.17.1 '@pkgjs/parseargs@0.11.0': optional: true '@pkgr/core@0.2.0': {} '@puppeteer/browsers@2.7.0': dependencies: debug: 4.4.0 extract-zip: 2.0.1 progress: 2.0.3 proxy-agent: 6.5.0 semver: 7.6.3 tar-fs: 3.0.6 unbzip2-stream: 1.4.3 yargs: 17.7.2 transitivepeerdependencies: - supports-color '@rollup/plugin-sucrase@5.0.2(rollup@4.24.0)': dependencies: '@rollup/pluginutils': 5.1.0(rollup@4.24.0) sucrase: 3.35.0 optionaldependencies: rollup: 4.24.0 '@rollup/pluginutils@5.1.0(rollup@4.24.0)': dependencies: '@types/estree': 1.0.6 estree-walker: 2.0.2 picomatch: 2.3.1 optionaldependencies: rollup: 4.24.0 '@rollup/rollup-android-arm-eabi@4.24.0': optional: true '@rollup/rollup-android-arm64@4.24.0': optional: true '@rollup/rollup-darwin-arm64@4.24.0': optional: true '@rollup/rollup-darwin-x64@4.24.0': optional: true '@rollup/rollup-linux-arm-gnueabihf@4.24.0': optional: true '@rollup/rollup-linux-arm-musleabihf@4.24.0': optional: true '@rollup/rollup-linux-arm64-gnu@4.24.0': optional: true '@rollup/rollup-linux-arm64-musl@4.24.0': optional: true '@rollup/rollup-linux-powerpc64le-gnu@4.24.0': optional: true '@rollup/rollup-linux-riscv64-gnu@4.24.0': optional: true '@rollup/rollup-linux-s390x-gnu@4.24.0': optional: true '@rollup/rollup-linux-x64-gnu@4.24.0': optional: true '@rollup/rollup-linux-x64-musl@4.24.0': optional: true '@rollup/rollup-win32-arm64-msvc@4.24.0': optional: true '@rollup/rollup-win32-ia32-msvc@4.24.0': optional: true '@rollup/rollup-win32-x64-msvc@4.24.0': optional: true '@swc/core-darwin-arm64@1.9.3': optional: true '@swc/core-darwin-x64@1.9.3': optional: true '@swc/core-linux-arm-gnueabihf@1.9.3': optional: true '@swc/core-linux-arm64-gnu@1.9.3': optional: true '@swc/core-linux-arm64-musl@1.9.3': optional: true '@swc/core-linux-x64-gnu@1.9.3': optional: true '@swc/core-linux-x64-musl@1.9.3': optional: true '@swc/core-win32-arm64-msvc@1.9.3': optional: true '@swc/core-win32-ia32-msvc@1.9.3': optional: true '@swc/core-win32-x64-msvc@1.9.3': optional: true '@swc/core@1.9.3': dependencies: '@swc/counter': 0.1.3 '@swc/types': 0.1.17 optionaldependencies: '@swc/core-darwin-arm64': 1.9.3 '@swc/core-darwin-x64': 1.9.3 '@swc/core-linux-arm-gnueabihf': 1.9.3 '@swc/core-linux-arm64-gnu': 1.9.3 '@swc/core-linux-arm64-musl': 1.9.3 '@swc/core-linux-x64-gnu': 1.9.3 '@swc/core-linux-x64-musl': 1.9.3 '@swc/core-win32-arm64-msvc': 1.9.3 '@swc/core-win32-ia32-msvc': 1.9.3 '@swc/core-win32-x64-msvc': 1.9.3 '@swc/counter@0.1.3': {} '@swc/types@0.1.17': dependencies: '@swc/counter': 0.1.3 '@tootallnate/quickjs-emscripten@0.23.0': {} '@tsconfig/node10@1.0.11': {} '@tsconfig/node12@1.0.11': {} '@tsconfig/node14@1.0.3': {} '@tsconfig/node16@1.0.4': {} '@types/chrome@0.0.270': dependencies: '@types/filesystem': 0.0.36 '@types/har-format': 1.2.15 '@types/estree@1.0.6': {} '@types/filesystem@0.0.36': dependencies: '@types/filewriter': 0.0.33 '@types/filewriter@0.0.33': {} '@types/har-format@1.2.15': {} '@types/json-schema@7.0.15': {} '@types/json5@0.0.29': {} '@types/node-fetch@2.6.12': dependencies: '@types/node': 22.7.4 form-data: 4.0.1 '@types/node@18.19.74': dependencies: undici-types: 5.26.5 '@types/node@20.16.10': dependencies: undici-types: 6.19.8 '@types/node@22.7.4': dependencies: undici-types: 6.19.8 '@types/prop-types@15.7.12': {} '@types/react-dom@18.3.0': dependencies: '@types/react': 18.3.5 '@types/react@18.3.5': dependencies: '@types/prop-types': 15.7.12 csstype: 3.1.3 '@types/retry@0.12.0': {} '@types/uuid@10.0.0': {} '@types/ws@8.5.13': dependencies: '@types/node': 20.16.10 '@types/yauzl@2.10.3': dependencies: '@types/node': 22.7.4 optional: true '@typescript-eslint/eslint-plugin@7.18.0(@typescript-eslint/parser@7.18.0(eslint@8.57.0)(typescript@5.5.4))(eslint@8.57.0)(typescript@5.5.4)': dependencies: '@eslint-community/regexpp': 4.11.0 '@typescript-eslint/parser': 7.18.0(eslint@8.57.0)(typescript@5.5.4) '@typescript-eslint/scope-manager': 7.18.0 '@typescript-eslint/type-utils': 7.18.0(eslint@8.57.0)(typescript@5.5.4) '@typescript-eslint/utils': 7.18.0(eslint@8.57.0)(typescript@5.5.4) '@typescript-eslint/visitor-keys': 7.18.0 eslint: 8.57.0 graphemer: 1.4.0 ignore: 5.3.2 natural-compare: 1.4.0 ts-api-utils: 1.3.0(typescript@5.5.4) optionaldependencies: typescript: 5.5.4 transitivepeerdependencies: - supports-color '@typescript-eslint/parser@7.18.0(eslint@8.57.0)(typescript@5.5.4)': dependencies: '@typescript-eslint/scope-manager': 7.18.0 '@typescript-eslint/types': 7.18.0 '@typescript-eslint/typescript-estree': 7.18.0(typescript@5.5.4) '@typescript-eslint/visitor-keys': 7.18.0 debug: 4.3.7 eslint: 8.57.0 optionaldependencies: typescript: 5.5.4 transitivepeerdependencies: - supports-color '@typescript-eslint/scope-manager@7.18.0': dependencies: '@typescript-eslint/types': 7.18.0 '@typescript-eslint/visitor-keys': 7.18.0 '@typescript-eslint/type-utils@7.18.0(eslint@8.57.0)(typescript@5.5.4)': dependencies: '@typescript-eslint/typescript-estree': 7.18.0(typescript@5.5.4) '@typescript-eslint/utils': 7.18.0(eslint@8.57.0)(typescript@5.5.4) debug: 4.4.0 eslint: 8.57.0 ts-api-utils: 1.3.0(typescript@5.5.4) optionaldependencies: typescript: 5.5.4 transitivepeerdependencies: - supports-color '@typescript-eslint/types@7.18.0': {} '@typescript-eslint/typescript-estree@7.18.0(typescript@5.5.4)': dependencies: '@typescript-eslint/types': 7.18.0 '@typescript-eslint/visitor-keys': 7.18.0 debug: 4.4.0 globby: 11.1.0 is-glob: 4.0.3 minimatch: 9.0.5 semver: 7.6.3 ts-api-utils: 1.3.0(typescript@5.5.4) optionaldependencies: typescript: 5.5.4 transitivepeerdependencies: - supports-color '@typescript-eslint/utils@7.18.0(eslint@8.57.0)(typescript@5.5.4)': dependencies: '@eslint-community/eslint-utils': 4.4.0(eslint@8.57.0) '@typescript-eslint/scope-manager': 7.18.0 '@typescript-eslint/types': 7.18.0 '@typescript-eslint/typescript-estree': 7.18.0(typescript@5.5.4) eslint: 8.57.0 transitivepeerdependencies: - supports-color - typescript '@typescript-eslint/visitor-keys@7.18.0': dependencies: '@typescript-eslint/types': 7.18.0 eslint-visitor-keys: 3.4.3 '@ungap/structured-clone@1.2.0': {} '@vitejs/plugin-react-swc@3.7.2(vite@6.0.12(@types/node@22.7.4)(jiti@1.21.6)(sass@1.79.4)(terser@5.34.1)(tsx@4.19.2)(yaml@2.5.1))': dependencies: '@swc/core': 1.9.3 vite: 6.0.12(@types/node@22.7.4)(jiti@1.21.6)(sass@1.79.4)(terser@5.34.1)(tsx@4.19.2)(yaml@2.5.1) transitivepeerdependencies: - '@swc/helpers' '@webassemblyjs/ast@1.12.1': dependencies: '@webassemblyjs/helper-numbers': 1.11.6 '@webassemblyjs/helper-wasm-bytecode': 1.11.6 '@webassemblyjs/floating-point-hex-parser@1.11.6': {} '@webassemblyjs/helper-api-error@1.11.6': {} '@webassemblyjs/helper-buffer@1.12.1': {} '@webassemblyjs/helper-numbers@1.11.6': dependencies: '@webassemblyjs/floating-point-hex-parser': 1.11.6 '@webassemblyjs/helper-api-error': 1.11.6 '@xtuc/long': 4.2.2 '@webassemblyjs/helper-wasm-bytecode@1.11.6': {} '@webassemblyjs/helper-wasm-section@1.12.1': dependencies: '@webassemblyjs/ast': 1.12.1 '@webassemblyjs/helper-buffer': 1.12.1 '@webassemblyjs/helper-wasm-bytecode': 1.11.6 '@webassemblyjs/wasm-gen': 1.12.1 '@webassemblyjs/ieee754@1.11.6': dependencies: '@xtuc/ieee754': 1.2.0 '@webassemblyjs/leb128@1.11.6': dependencies: '@xtuc/long': 4.2.2 '@webassemblyjs/utf8@1.11.6': {} '@webassemblyjs/wasm-edit@1.12.1': dependencies: '@webassemblyjs/ast': 1.12.1 '@webassemblyjs/helper-buffer': 1.12.1 '@webassemblyjs/helper-wasm-bytecode': 1.11.6 '@webassemblyjs/helper-wasm-section': 1.12.1 '@webassemblyjs/wasm-gen': 1.12.1 '@webassemblyjs/wasm-opt': 1.12.1 '@webassemblyjs/wasm-parser': 1.12.1 '@webassemblyjs/wast-printer': 1.12.1 '@webassemblyjs/wasm-gen@1.12.1': dependencies: '@webassemblyjs/ast': 1.12.1 '@webassemblyjs/helper-wasm-bytecode': 1.11.6 '@webassemblyjs/ieee754': 1.11.6 '@webassemblyjs/leb128': 1.11.6 '@webassemblyjs/utf8': 1.11.6 '@webassemblyjs/wasm-opt@1.12.1': dependencies: '@webassemblyjs/ast': 1.12.1 '@webassemblyjs/helper-buffer': 1.12.1 '@webassemblyjs/wasm-gen': 1.12.1 '@webassemblyjs/wasm-parser': 1.12.1 '@webassemblyjs/wasm-parser@1.12.1': dependencies: '@webassemblyjs/ast': 1.12.1 '@webassemblyjs/helper-api-error': 1.11.6 '@webassemblyjs/helper-wasm-bytecode': 1.11.6 '@webassemblyjs/ieee754': 1.11.6 '@webassemblyjs/leb128': 1.11.6 '@webassemblyjs/utf8': 1.11.6 '@webassemblyjs/wast-printer@1.12.1': dependencies: '@webassemblyjs/ast': 1.12.1 '@xtuc/long': 4.2.2 '@xtuc/ieee754@1.2.0': {} '@xtuc/long@4.2.2': {} abort-controller@3.0.0: dependencies: event-target-shim: 5.0.1 acorn-import-attributes@1.9.5(acorn@8.12.1): dependencies: acorn: 8.12.1 acorn-jsx@5.3.2(acorn@8.12.1): dependencies: acorn: 8.12.1 acorn-walk@8.3.4: dependencies: acorn: 8.12.1 acorn@8.12.1: {} agent-base@7.1.1: dependencies: debug: 4.4.0 transitivepeerdependencies: - supports-color agent-base@7.1.3: {} agentkeepalive@4.6.0: dependencies: humanize-ms: 1.2.1 ajv-keywords@3.5.2(ajv@6.12.6): dependencies: ajv: 6.12.6 ajv@6.12.6: dependencies: fast-deep-equal: 3.1.3 fast-json-stable-stringify: 2.1.0 json-schema-traverse: 0.4.1 uri-js: 4.4.1 ansi-escapes@7.0.0: dependencies: environment: 1.1.0 ansi-regex@5.0.1: {} ansi-regex@6.1.0: {} ansi-styles@4.3.0: dependencies: color-convert: 2.0.1 ansi-styles@5.2.0: {} ansi-styles@6.2.1: {} any-promise@1.3.0: {} anymatch@3.1.3: dependencies: normalize-path: 3.0.0 picomatch: 2.3.1 arg@4.1.3: {} arg@5.0.2: {} argparse@2.0.1: {} aria-query@5.1.3: dependencies: deep-equal: 2.2.3 array-buffer-byte-length@1.0.1: dependencies: call-bind: 1.0.7 is-array-buffer: 3.0.4 array-includes@3.1.8: dependencies: call-bind: 1.0.7 define-properties: 1.2.1 es-abstract: 1.23.3 es-object-atoms: 1.0.0 get-intrinsic: 1.2.4 is-string: 1.0.7 array-union@2.1.0: {} array.prototype.findlast@1.2.5: dependencies: call-bind: 1.0.7 define-properties: 1.2.1 es-abstract: 1.23.3 es-errors: 1.3.0 es-object-atoms: 1.0.0 es-shim-unscopables: 1.0.2 array.prototype.findlastindex@1.2.5: dependencies: call-bind: 1.0.7 define-properties: 1.2.1 es-abstract: 1.23.3 es-errors: 1.3.0 es-object-atoms: 1.0.0 es-shim-unscopables: 1.0.2 array.prototype.flat@1.3.2: dependencies: call-bind: 1.0.7 define-properties: 1.2.1 es-abstract: 1.23.3 es-shim-unscopables: 1.0.2 array.prototype.flatmap@1.3.2: dependencies: call-bind: 1.0.7 define-properties: 1.2.1 es-abstract: 1.23.3 es-shim-unscopables: 1.0.2 array.prototype.tosorted@1.1.4: dependencies: call-bind: 1.0.7 define-properties: 1.2.1 es-abstract: 1.23.3 es-errors: 1.3.0 es-shim-unscopables: 1.0.2 arraybuffer.prototype.slice@1.0.3: dependencies: array-buffer-byte-length: 1.0.1 call-bind: 1.0.7 define-properties: 1.2.1 es-abstract: 1.23.3 es-errors: 1.3.0 get-intrinsic: 1.2.4 is-array-buffer: 3.0.4 is-shared-array-buffer: 1.0.3 ast-types-flow@0.0.8: {} ast-types@0.13.4: dependencies: tslib: 2.7.0 asynckit@0.4.0: {} autoprefixer@10.4.20(postcss@8.4.47): dependencies: browserslist: 4.24.0 caniuse-lite: 1.0.30001667 fraction.js: 4.3.7 normalize-range: 0.1.2 picocolors: 1.1.0 postcss: 8.4.47 postcss-value-parser: 4.2.0 available-typed-arrays@1.0.7: dependencies: possible-typed-array-names: 1.0.0 axe-core@4.10.0: {} axobject-query@3.1.1: dependencies: deep-equal: 2.2.3 b4a@1.6.7: {} balanced-match@1.0.2: {} bare-events@2.5.0: optional: true bare-fs@2.3.5: dependencies: bare-events: 2.5.0 bare-path: 2.1.3 bare-stream: 2.3.0 optional: true bare-os@2.4.4: optional: true bare-path@2.1.3: dependencies: bare-os: 2.4.4 optional: true bare-stream@2.3.0: dependencies: b4a: 1.6.7 streamx: 2.20.1 optional: true base64-js@1.5.1: {} basic-ftp@5.0.5: {} binary-extensions@2.3.0: {} brace-expansion@1.1.11: dependencies: balanced-match: 1.0.2 concat-map: 0.0.1 brace-expansion@2.0.1: dependencies: balanced-match: 1.0.2 braces@3.0.3: dependencies: fill-range: 7.1.1 browserslist@4.24.0: dependencies: caniuse-lite: 1.0.30001667 electron-to-chromium: 1.5.32 node-releases: 2.0.18 update-browserslist-db: 1.1.1(browserslist@4.24.0) buffer-crc32@0.2.13: {} buffer-from@1.1.2: {} buffer@5.7.1: dependencies: base64-js: 1.5.1 ieee754: 1.2.1 call-bind@1.0.7: dependencies: es-define-property: 1.0.0 es-errors: 1.3.0 function-bind: 1.1.2 get-intrinsic: 1.2.4 set-function-length: 1.2.2 callsites@3.1.0: {} camelcase-css@2.0.1: {} camelcase@6.3.0: {} caniuse-lite@1.0.30001667: {} chalk@4.1.2: dependencies: ansi-styles: 4.3.0 supports-color: 7.2.0 chalk@5.3.0: {} chokidar@3.6.0: dependencies: anymatch: 3.1.3 braces: 3.0.3 glob-parent: 5.1.2 is-binary-path: 2.1.0 is-glob: 4.0.3 normalize-path: 3.0.0 readdirp: 3.6.0 optionaldependencies: fsevents: 2.3.3 chokidar@4.0.1: dependencies: readdirp: 4.0.2 optional: true chrome-trace-event@1.0.4: {} chromium-bidi@1.1.0(devtools-protocol@0.0.1380148): dependencies: devtools-protocol: 0.0.1380148 mitt: 3.0.1 zod: 3.24.1 cli-cursor@5.0.0: dependencies: restore-cursor: 5.1.0 cli-truncate@4.0.0: dependencies: slice-ansi: 5.0.0 string-width: 7.2.0 cliui@8.0.1: dependencies: string-width: 4.2.3 strip-ansi: 6.0.1 wrap-ansi: 7.0.0 clsx@2.1.1: {} color-convert@2.0.1: dependencies: color-name: 1.1.4 color-name@1.1.4: {} colorette@2.0.20: {} combined-stream@1.0.8: dependencies: delayed-stream: 1.0.0 commander@12.1.0: {} commander@2.20.3: {} commander@4.1.1: {} commander@9.5.0: {} concat-map@0.0.1: {} confusing-browser-globals@1.0.11: {} console-table-printer@2.12.1: dependencies: simple-wcswidth: 1.0.1 create-require@1.1.1: {} cross-env@7.0.3: dependencies: cross-spawn: 7.0.6 cross-spawn@7.0.6: dependencies: path-key: 3.1.1 shebang-command: 2.0.0 which: 2.0.2 cssesc@3.0.0: {} csstype@3.1.3: {} damerau-levenshtein@1.0.8: {} data-uri-to-buffer@6.0.2: {} data-view-buffer@1.0.1: dependencies: call-bind: 1.0.7 es-errors: 1.3.0 is-data-view: 1.0.1 data-view-byte-length@1.0.1: dependencies: call-bind: 1.0.7 es-errors: 1.3.0 is-data-view: 1.0.1 data-view-byte-offset@1.0.0: dependencies: call-bind: 1.0.7 es-errors: 1.3.0 is-data-view: 1.0.1 debug@3.2.7: dependencies: ms: 2.1.3 debug@4.3.7: dependencies: ms: 2.1.3 debug@4.4.0: dependencies: ms: 2.1.3 decamelize@1.2.0: {} deep-equal@2.2.3: dependencies: array-buffer-byte-length: 1.0.1 call-bind: 1.0.7 es-get-iterator: 1.1.3 get-intrinsic: 1.2.4 is-arguments: 1.1.1 is-array-buffer: 3.0.4 is-date-object: 1.0.5 is-regex: 1.1.4 is-shared-array-buffer: 1.0.3 isarray: 2.0.5 object-is: 1.1.6 object-keys: 1.1.1 object.assign: 4.1.5 regexp.prototype.flags: 1.5.2 side-channel: 1.0.6 which-boxed-primitive: 1.0.2 which-collection: 1.0.2 which-typed-array: 1.1.15 deep-is@0.1.4: {} deepmerge@4.3.1: {} define-data-property@1.1.4: dependencies: es-define-property: 1.0.0 es-errors: 1.3.0 gopd: 1.0.1 define-properties@1.2.1: dependencies: define-data-property: 1.1.4 has-property-descriptors: 1.0.2 object-keys: 1.1.1 degenerator@5.0.1: dependencies: ast-types: 0.13.4 escodegen: 2.1.0 esprima: 4.0.1 delayed-stream@1.0.0: {} devtools-protocol@0.0.1380148: {} didyoumean@1.2.2: {} diff@4.0.2: {} dir-glob@3.0.1: dependencies: path-type: 4.0.0 dlv@1.1.3: {} doctrine@2.1.0: dependencies: esutils: 2.0.3 doctrine@3.0.0: dependencies: esutils: 2.0.3 eastasianwidth@0.2.0: {} electron-to-chromium@1.5.32: {} emoji-regex@10.4.0: {} emoji-regex@8.0.0: {} emoji-regex@9.2.2: {} end-of-stream@1.4.4: dependencies: once: 1.4.0 enhanced-resolve@5.17.1: dependencies: graceful-fs: 4.2.11 tapable: 2.2.1 environment@1.1.0: {} es-abstract@1.23.3: dependencies: array-buffer-byte-length: 1.0.1 arraybuffer.prototype.slice: 1.0.3 available-typed-arrays: 1.0.7 call-bind: 1.0.7 data-view-buffer: 1.0.1 data-view-byte-length: 1.0.1 data-view-byte-offset: 1.0.0 es-define-property: 1.0.0 es-errors: 1.3.0 es-object-atoms: 1.0.0 es-set-tostringtag: 2.0.3 es-to-primitive: 1.2.1 function.prototype.name: 1.1.6 get-intrinsic: 1.2.4 get-symbol-description: 1.0.2 globalthis: 1.0.4 gopd: 1.0.1 has-property-descriptors: 1.0.2 has-proto: 1.0.3 has-symbols: 1.0.3 hasown: 2.0.2 internal-slot: 1.0.7 is-array-buffer: 3.0.4 is-callable: 1.2.7 is-data-view: 1.0.1 is-negative-zero: 2.0.3 is-regex: 1.1.4 is-shared-array-buffer: 1.0.3 is-string: 1.0.7 is-typed-array: 1.1.13 is-weakref: 1.0.2 object-inspect: 1.13.2 object-keys: 1.1.1 object.assign: 4.1.5 regexp.prototype.flags: 1.5.2 safe-array-concat: 1.1.2 safe-regex-test: 1.0.3 string.prototype.trim: 1.2.9 string.prototype.trimend: 1.0.8 string.prototype.trimstart: 1.0.8 typed-array-buffer: 1.0.2 typed-array-byte-length: 1.0.1 typed-array-byte-offset: 1.0.2 typed-array-length: 1.0.6 unbox-primitive: 1.0.2 which-typed-array: 1.1.15 es-define-property@1.0.0: dependencies: get-intrinsic: 1.2.4 es-errors@1.3.0: {} es-get-iterator@1.1.3: dependencies: call-bind: 1.0.7 get-intrinsic: 1.2.4 has-symbols: 1.0.3 is-arguments: 1.1.1 is-map: 2.0.3 is-set: 2.0.3 is-string: 1.0.7 isarray: 2.0.5 stop-iteration-iterator: 1.0.0 es-iterator-helpers@1.0.19: dependencies: call-bind: 1.0.7 define-properties: 1.2.1 es-abstract: 1.23.3 es-errors: 1.3.0 es-set-tostringtag: 2.0.3 function-bind: 1.1.2 get-intrinsic: 1.2.4 globalthis: 1.0.4 has-property-descriptors: 1.0.2 has-proto: 1.0.3 has-symbols: 1.0.3 internal-slot: 1.0.7 iterator.prototype: 1.1.2 safe-array-concat: 1.1.2 es-module-lexer@1.5.4: {} es-object-atoms@1.0.0: dependencies: es-errors: 1.3.0 es-set-tostringtag@2.0.3: dependencies: get-intrinsic: 1.2.4 has-tostringtag: 1.0.2 hasown: 2.0.2 es-shim-unscopables@1.0.2: dependencies: hasown: 2.0.2 es-to-primitive@1.2.1: dependencies: is-callable: 1.2.7 is-date-object: 1.0.5 is-symbol: 1.0.4 esbuild@0.25.1: optionaldependencies: '@esbuild/aix-ppc64': 0.25.1 '@esbuild/android-arm': 0.25.1 '@esbuild/android-arm64': 0.25.1 '@esbuild/android-x64': 0.25.1 '@esbuild/darwin-arm64': 0.25.1 '@esbuild/darwin-x64': 0.25.1 '@esbuild/freebsd-arm64': 0.25.1 '@esbuild/freebsd-x64': 0.25.1 '@esbuild/linux-arm': 0.25.1 '@esbuild/linux-arm64': 0.25.1 '@esbuild/linux-ia32': 0.25.1 '@esbuild/linux-loong64': 0.25.1 '@esbuild/linux-mips64el': 0.25.1 '@esbuild/linux-ppc64': 0.25.1 '@esbuild/linux-riscv64': 0.25.1 '@esbuild/linux-s390x': 0.25.1 '@esbuild/linux-x64': 0.25.1 '@esbuild/netbsd-arm64': 0.25.1 '@esbuild/netbsd-x64': 0.25.1 '@esbuild/openbsd-arm64': 0.25.1 '@esbuild/openbsd-x64': 0.25.1 '@esbuild/sunos-x64': 0.25.1 '@esbuild/win32-arm64': 0.25.1 '@esbuild/win32-ia32': 0.25.1 '@esbuild/win32-x64': 0.25.1 escalade@3.2.0: {} escape-string-regexp@4.0.0: {} escodegen@2.1.0: dependencies: esprima: 4.0.1 estraverse: 5.3.0 esutils: 2.0.3 optionaldependencies: source-map: 0.6.1 eslint-config-airbnb-base@15.0.0(eslint-plugin-import@2.29.1(@typescript-eslint/parser@7.18.0(eslint@8.57.0)(typescript@5.5.4))(eslint@8.57.0))(eslint@8.57.0): dependencies: confusing-browser-globals: 1.0.11 eslint: 8.57.0 eslint-plugin-import: 2.29.1(@typescript-eslint/parser@7.18.0(eslint@8.57.0)(typescript@5.5.4))(eslint@8.57.0) object.assign: 4.1.5 object.entries: 1.1.8 semver: 6.3.1 eslint-config-airbnb-typescript@18.0.0(@typescript-eslint/eslint-plugin@7.18.0(@typescript-eslint/parser@7.18.0(eslint@8.57.0)(typescript@5.5.4))(eslint@8.57.0)(typescript@5.5.4))(@typescript-eslint/parser@7.18.0(eslint@8.57.0)(typescript@5.5.4))(eslint-plugin-import@2.29.1(@typescript-eslint/parser@7.18.0(eslint@8.57.0)(typescript@5.5.4))(eslint@8.57.0))(eslint@8.57.0): dependencies: '@typescript-eslint/eslint-plugin': 7.18.0(@typescript-eslint/parser@7.18.0(eslint@8.57.0)(typescript@5.5.4))(eslint@8.57.0)(typescript@5.5.4) '@typescript-eslint/parser': 7.18.0(eslint@8.57.0)(typescript@5.5.4) eslint: 8.57.0 eslint-config-airbnb-base: 15.0.0(eslint-plugin-import@2.29.1(@typescript-eslint/parser@7.18.0(eslint@8.57.0)(typescript@5.5.4))(eslint@8.57.0))(eslint@8.57.0) transitivepeerdependencies: - eslint-plugin-import eslint-config-prettier@9.1.0(eslint@8.57.0): dependencies: eslint: 8.57.0 eslint-import-resolver-node@0.3.9: dependencies: debug: 3.2.7 is-core-module: 2.15.1 resolve: 1.22.8 transitivepeerdependencies: - supports-color eslint-module-utils@2.11.0(@typescript-eslint/parser@7.18.0(eslint@8.57.0)(typescript@5.5.4))(eslint-import-resolver-node@0.3.9)(eslint@8.57.0): dependencies: debug: 3.2.7 optionaldependencies: '@typescript-eslint/parser': 7.18.0(eslint@8.57.0)(typescript@5.5.4) eslint: 8.57.0 eslint-import-resolver-node: 0.3.9 transitivepeerdependencies: - supports-color eslint-plugin-import@2.29.1(@typescript-eslint/parser@7.18.0(eslint@8.57.0)(typescript@5.5.4))(eslint@8.57.0): dependencies: array-includes: 3.1.8 array.prototype.findlastindex: 1.2.5 array.prototype.flat: 1.3.2 array.prototype.flatmap: 1.3.2 debug: 3.2.7 doctrine: 2.1.0 eslint: 8.57.0 eslint-import-resolver-node: 0.3.9 eslint-module-utils: 2.11.0(@typescript-eslint/parser@7.18.0(eslint@8.57.0)(typescript@5.5.4))(eslint-import-resolver-node@0.3.9)(eslint@8.57.0) hasown: 2.0.2 is-core-module: 2.15.1 is-glob: 4.0.3 minimatch: 3.1.2 object.fromentries: 2.0.8 object.groupby: 1.0.3 object.values: 1.2.0 semver: 6.3.1 tsconfig-paths: 3.15.0 optionaldependencies: '@typescript-eslint/parser': 7.18.0(eslint@8.57.0)(typescript@5.5.4) transitivepeerdependencies: - eslint-import-resolver-typescript - eslint-import-resolver-webpack - supports-color eslint-plugin-jsx-a11y@6.9.0(eslint@8.57.0): dependencies: aria-query: 5.1.3 array-includes: 3.1.8 array.prototype.flatmap: 1.3.2 ast-types-flow: 0.0.8 axe-core: 4.10.0 axobject-query: 3.1.1 damerau-levenshtein: 1.0.8 emoji-regex: 9.2.2 es-iterator-helpers: 1.0.19 eslint: 8.57.0 hasown: 2.0.2 jsx-ast-utils: 3.3.5 language-tags: 1.0.9 minimatch: 3.1.2 object.fromentries: 2.0.8 safe-regex-test: 1.0.3 string.prototype.includes: 2.0.0 eslint-plugin-prettier@5.2.4(eslint-config-prettier@9.1.0(eslint@8.57.0))(eslint@8.57.0)(prettier@3.3.3): dependencies: eslint: 8.57.0 prettier: 3.3.3 prettier-linter-helpers: 1.0.0 synckit: 0.10.3 optionaldependencies: eslint-config-prettier: 9.1.0(eslint@8.57.0) eslint-plugin-react-hooks@4.6.2(eslint@8.57.0): dependencies: eslint: 8.57.0 eslint-plugin-react@7.35.2(eslint@8.57.0): dependencies: array-includes: 3.1.8 array.prototype.findlast: 1.2.5 array.prototype.flatmap: 1.3.2 array.prototype.tosorted: 1.1.4 doctrine: 2.1.0 es-iterator-helpers: 1.0.19 eslint: 8.57.0 estraverse: 5.3.0 hasown: 2.0.2 jsx-ast-utils: 3.3.5 minimatch: 3.1.2 object.entries: 1.1.8 object.fromentries: 2.0.8 object.values: 1.2.0 prop-types: 15.8.1 resolve: 2.0.0-next.5 semver: 6.3.1 string.prototype.matchall: 4.0.11 string.prototype.repeat: 1.0.0 eslint-plugin-tailwindcss@3.17.4(tailwindcss@3.4.17(ts-node@10.9.2(@swc/core@1.9.3)(@types/node@22.7.4)(typescript@5.5.4))): dependencies: fast-glob: 3.3.2 postcss: 8.4.47 tailwindcss: 3.4.17(ts-node@10.9.2(@swc/core@1.9.3)(@types/node@22.7.4)(typescript@5.5.4)) eslint-scope@5.1.1: dependencies: esrecurse: 4.3.0 estraverse: 4.3.0 eslint-scope@7.2.2: dependencies: esrecurse: 4.3.0 estraverse: 5.3.0 eslint-visitor-keys@3.4.3: {} eslint@8.57.0: dependencies: '@eslint-community/eslint-utils': 4.4.0(eslint@8.57.0) '@eslint-community/regexpp': 4.11.0 '@eslint/eslintrc': 2.1.4 '@eslint/js': 8.57.0 '@humanwhocodes/config-array': 0.11.14 '@humanwhocodes/module-importer': 1.0.1 '@nodelib/fs.walk': 1.2.8 '@ungap/structured-clone': 1.2.0 ajv: 6.12.6 chalk: 4.1.2 cross-spawn: 7.0.6 debug: 4.3.7 doctrine: 3.0.0 escape-string-regexp: 4.0.0 eslint-scope: 7.2.2 eslint-visitor-keys: 3.4.3 espree: 9.6.1 esquery: 1.6.0 esutils: 2.0.3 fast-deep-equal: 3.1.3 file-entry-cache: 6.0.1 find-up: 5.0.0 glob-parent: 6.0.2 globals: 13.24.0 graphemer: 1.4.0 ignore: 5.3.2 imurmurhash: 0.1.4 is-glob: 4.0.3 is-path-inside: 3.0.3 js-yaml: 4.1.0 json-stable-stringify-without-jsonify: 1.0.1 levn: 0.4.1 lodash.merge: 4.6.2 minimatch: 3.1.2 natural-compare: 1.4.0 optionator: 0.9.4 strip-ansi: 6.0.1 text-table: 0.2.0 transitivepeerdependencies: - supports-color esm@3.2.25: {} espree@9.6.1: dependencies: acorn: 8.12.1 acorn-jsx: 5.3.2(acorn@8.12.1) eslint-visitor-keys: 3.4.3 esprima@4.0.1: {} esquery@1.6.0: dependencies: estraverse: 5.3.0 esrecurse@4.3.0: dependencies: estraverse: 5.3.0 estraverse@4.3.0: {} estraverse@5.3.0: {} estree-walker@2.0.2: {} esutils@2.0.3: {} event-target-shim@5.0.1: {} eventemitter3@4.0.7: {} eventemitter3@5.0.1: {} events@3.3.0: {} execa@8.0.1: dependencies: cross-spawn: 7.0.6 get-stream: 8.0.1 human-signals: 5.0.0 is-stream: 3.0.0 merge-stream: 2.0.0 npm-run-path: 5.3.0 onetime: 6.0.0 signal-exit: 4.1.0 strip-final-newline: 3.0.0 extract-zip@2.0.1: dependencies: debug: 4.4.0 get-stream: 5.2.0 yauzl: 2.10.0 optionaldependencies: '@types/yauzl': 2.10.3 transitivepeerdependencies: - supports-color fast-deep-equal@3.1.3: {} fast-diff@1.3.0: {} fast-fifo@1.3.2: {} fast-glob@3.3.2: dependencies: '@nodelib/fs.stat': 2.0.5 '@nodelib/fs.walk': 1.2.8 glob-parent: 5.1.2 merge2: 1.4.1 micromatch: 4.0.8 fast-json-stable-stringify@2.1.0: {} fast-levenshtein@2.0.6: {} fast-xml-parser@4.5.0: dependencies: strnum: 1.0.5 fastq@1.17.1: dependencies: reusify: 1.0.4 fd-slicer@1.1.0: dependencies: pend: 1.2.0 fflate@0.8.2: {} file-entry-cache@6.0.1: dependencies: flat-cache: 3.2.0 fill-range@7.1.1: dependencies: to-regex-range: 5.0.1 find-up@5.0.0: dependencies: locate-path: 6.0.0 path-exists: 4.0.0 flat-cache@3.2.0: dependencies: flatted: 3.3.1 keyv: 4.5.4 rimraf: 3.0.2 flatted@3.3.1: {} for-each@0.3.3: dependencies: is-callable: 1.2.7 foreground-child@3.3.0: dependencies: cross-spawn: 7.0.6 signal-exit: 4.1.0 form-data-encoder@1.7.2: {} form-data@4.0.1: dependencies: asynckit: 0.4.0 combined-stream: 1.0.8 mime-types: 2.1.35 formdata-node@4.4.1: dependencies: node-domexception: 1.0.0 web-streams-polyfill: 4.0.0-beta.3 fraction.js@4.3.7: {} fs-extra@11.2.0: dependencies: graceful-fs: 4.2.11 jsonfile: 6.1.0 universalify: 2.0.1 fs.realpath@1.0.0: {} fsevents@2.3.3: optional: true function-bind@1.1.2: {} function.prototype.name@1.1.6: dependencies: call-bind: 1.0.7 define-properties: 1.2.1 es-abstract: 1.23.3 functions-have-names: 1.2.3 functions-have-names@1.2.3: {} get-caller-file@2.0.5: {} get-east-asian-width@1.2.0: {} get-intrinsic@1.2.4: dependencies: es-errors: 1.3.0 function-bind: 1.1.2 has-proto: 1.0.3 has-symbols: 1.0.3 hasown: 2.0.2 get-stream@5.2.0: dependencies: pump: 3.0.2 get-stream@8.0.1: {} get-symbol-description@1.0.2: dependencies: call-bind: 1.0.7 es-errors: 1.3.0 get-intrinsic: 1.2.4 get-tsconfig@4.8.0: dependencies: resolve-pkg-maps: 1.0.0 get-uri@6.0.3: dependencies: basic-ftp: 5.0.5 data-uri-to-buffer: 6.0.2 debug: 4.4.0 fs-extra: 11.2.0 transitivepeerdependencies: - supports-color glob-parent@5.1.2: dependencies: is-glob: 4.0.3 glob-parent@6.0.2: dependencies: is-glob: 4.0.3 glob-to-regexp@0.4.1: {} glob@10.4.5: dependencies: foreground-child: 3.3.0 jackspeak: 3.4.3 minimatch: 9.0.5 minipass: 7.1.2 package-json-from-dist: 1.0.0 path-scurry: 1.11.1 glob@11.0.0: dependencies: foreground-child: 3.3.0 jackspeak: 4.0.1 minimatch: 10.0.1 minipass: 7.1.2 package-json-from-dist: 1.0.0 path-scurry: 2.0.0 glob@7.2.3: dependencies: fs.realpath: 1.0.0 inflight: 1.0.6 inherits: 2.0.4 minimatch: 3.1.2 once: 1.4.0 path-is-absolute: 1.0.1 globals@13.24.0: dependencies: type-fest: 0.20.2 globalthis@1.0.4: dependencies: define-properties: 1.2.1 gopd: 1.0.1 globby@11.1.0: dependencies: array-union: 2.1.0 dir-glob: 3.0.1 fast-glob: 3.3.2 ignore: 5.3.2 merge2: 1.4.1 slash: 3.0.0 gopd@1.0.1: dependencies: get-intrinsic: 1.2.4 graceful-fs@4.2.11: {} graphemer@1.4.0: {} has-bigints@1.0.2: {} has-flag@4.0.0: {} has-property-descriptors@1.0.2: dependencies: es-define-property: 1.0.0 has-proto@1.0.3: {} has-symbols@1.0.3: {} has-tostringtag@1.0.2: dependencies: has-symbols: 1.0.3 hasown@2.0.2: dependencies: function-bind: 1.1.2 http-proxy-agent@7.0.2: dependencies: agent-base: 7.1.1 debug: 4.4.0 transitivepeerdependencies: - supports-color https-proxy-agent@7.0.6: dependencies: agent-base: 7.1.3 debug: 4.4.0 transitivepeerdependencies: - supports-color human-signals@5.0.0: {} humanize-ms@1.2.1: dependencies: ms: 2.1.3 husky@9.1.5: {} ieee754@1.2.1: {} ignore@5.3.2: {} immutable@4.3.7: optional: true import-fresh@3.3.0: dependencies: parent-module: 1.0.1 resolve-from: 4.0.0 imurmurhash@0.1.4: {} inflight@1.0.6: dependencies: once: 1.4.0 wrappy: 1.0.2 inherits@2.0.4: {} internal-slot@1.0.7: dependencies: es-errors: 1.3.0 hasown: 2.0.2 side-channel: 1.0.6 ip-address@9.0.5: dependencies: jsbn: 1.1.0 sprintf-js: 1.1.3 is-arguments@1.1.1: dependencies: call-bind: 1.0.7 has-tostringtag: 1.0.2 is-array-buffer@3.0.4: dependencies: call-bind: 1.0.7 get-intrinsic: 1.2.4 is-async-function@2.0.0: dependencies: has-tostringtag: 1.0.2 is-bigint@1.0.4: dependencies: has-bigints: 1.0.2 is-binary-path@2.1.0: dependencies: binary-extensions: 2.3.0 is-boolean-object@1.1.2: dependencies: call-bind: 1.0.7 has-tostringtag: 1.0.2 is-callable@1.2.7: {} is-core-module@2.15.1: dependencies: hasown: 2.0.2 is-data-view@1.0.1: dependencies: is-typed-array: 1.1.13 is-date-object@1.0.5: dependencies: has-tostringtag: 1.0.2 is-extglob@2.1.1: {} is-finalizationregistry@1.0.2: dependencies: call-bind: 1.0.7 is-fullwidth-code-point@3.0.0: {} is-fullwidth-code-point@4.0.0: {} is-fullwidth-code-point@5.0.0: dependencies: get-east-asian-width: 1.2.0 is-generator-function@1.0.10: dependencies: has-tostringtag: 1.0.2 is-glob@4.0.3: dependencies: is-extglob: 2.1.1 is-map@2.0.3: {} is-negative-zero@2.0.3: {} is-number-object@1.0.7: dependencies: has-tostringtag: 1.0.2 is-number@7.0.0: {} is-path-inside@3.0.3: {} is-regex@1.1.4: dependencies: call-bind: 1.0.7 has-tostringtag: 1.0.2 is-set@2.0.3: {} is-shared-array-buffer@1.0.3: dependencies: call-bind: 1.0.7 is-stream@3.0.0: {} is-string@1.0.7: dependencies: has-tostringtag: 1.0.2 is-symbol@1.0.4: dependencies: has-symbols: 1.0.3 is-typed-array@1.1.13: dependencies: which-typed-array: 1.1.15 is-weakmap@2.0.2: {} is-weakref@1.0.2: dependencies: call-bind: 1.0.7 is-weakset@2.0.3: dependencies: call-bind: 1.0.7 get-intrinsic: 1.2.4 isarray@2.0.5: {} isexe@2.0.0: {} iterator.prototype@1.1.2: dependencies: define-properties: 1.2.1 get-intrinsic: 1.2.4 has-symbols: 1.0.3 reflect.getprototypeof: 1.0.6 set-function-name: 2.0.2 jackspeak@3.4.3: dependencies: '@isaacs/cliui': 8.0.2 optionaldependencies: '@pkgjs/parseargs': 0.11.0 jackspeak@4.0.1: dependencies: '@isaacs/cliui': 8.0.2 optionaldependencies: '@pkgjs/parseargs': 0.11.0 jest-worker@27.5.1: dependencies: '@types/node': 22.7.4 merge-stream: 2.0.0 supports-color: 8.1.1 jiti@1.21.6: {} js-tiktoken@1.0.17: dependencies: base64-js: 1.5.1 js-tokens@4.0.0: {} js-yaml@4.1.0: dependencies: argparse: 2.0.1 jsbn@1.1.0: {} json-buffer@3.0.1: {} json-parse-even-better-errors@2.3.1: {} json-schema-traverse@0.4.1: {} json-stable-stringify-without-jsonify@1.0.1: {} json5@1.0.2: dependencies: minimist: 1.2.8 jsonfile@6.1.0: dependencies: universalify: 2.0.1 optionaldependencies: graceful-fs: 4.2.11 jsx-ast-utils@3.3.5: dependencies: array-includes: 3.1.8 array.prototype.flat: 1.3.2 object.assign: 4.1.5 object.values: 1.2.0 keyv@4.5.4: dependencies: json-buffer: 3.0.1 langsmith@0.3.4(openai@4.82.0(ws@8.18.0)(zod@3.24.1)): dependencies: '@types/uuid': 10.0.0 chalk: 4.1.2 console-table-printer: 2.12.1 p-queue: 6.6.2 p-retry: 4.6.2 semver: 7.6.3 uuid: 10.0.0 optionaldependencies: openai: 4.82.0(ws@8.18.0)(zod@3.24.1) language-subtag-registry@0.3.23: {} language-tags@1.0.9: dependencies: language-subtag-registry: 0.3.23 levn@0.4.1: dependencies: prelude-ls: 1.2.1 type-check: 0.4.0 lilconfig@3.1.2: {} lilconfig@3.1.3: {} lines-and-columns@1.2.4: {} lint-staged@15.2.10: dependencies: chalk: 5.3.0 commander: 12.1.0 debug: 4.3.7 execa: 8.0.1 lilconfig: 3.1.2 listr2: 8.2.4 micromatch: 4.0.8 pidtree: 0.6.0 string-argv: 0.3.2 yaml: 2.5.1 transitivepeerdependencies: - supports-color listr2@8.2.4: dependencies: cli-truncate: 4.0.0 colorette: 2.0.20 eventemitter3: 5.0.1 log-update: 6.1.0 rfdc: 1.4.1 wrap-ansi: 9.0.0 loader-runner@4.3.0: {} loader-utils@3.3.1: {} locate-path@6.0.0: dependencies: p-locate: 5.0.0 lodash.merge@4.6.2: {} log-update@6.1.0: dependencies: ansi-escapes: 7.0.0 cli-cursor: 5.0.0 slice-ansi: 7.1.0 strip-ansi: 7.1.0 wrap-ansi: 9.0.0 loose-envify@1.4.0: dependencies: js-tokens: 4.0.0 lru-cache@10.4.3: {} lru-cache@11.0.1: {} lru-cache@7.18.3: {} magic-string@0.30.11: dependencies: '@jridgewell/sourcemap-codec': 1.5.0 make-error@1.3.6: {} merge-stream@2.0.0: {} merge2@1.4.1: {} micromatch@4.0.8: dependencies: braces: 3.0.3 picomatch: 2.3.1 mime-db@1.52.0: {} mime-types@2.1.35: dependencies: mime-db: 1.52.0 mimic-fn@4.0.0: {} mimic-function@5.0.1: {} minimatch@10.0.1: dependencies: brace-expansion: 2.0.1 minimatch@3.1.2: dependencies: brace-expansion: 1.1.11 minimatch@9.0.5: dependencies: brace-expansion: 2.0.1 minimist@1.2.8: {} minipass@7.1.2: {} mitt@3.0.1: {} mrmime@1.0.1: {} ms@2.1.3: {} mustache@4.2.0: {} mylas@2.1.13: {} mz@2.7.0: dependencies: any-promise: 1.3.0 object-assign: 4.1.1 thenify-all: 1.6.0 nanoid@3.3.11: {} natural-compare@1.4.0: {} neo-async@2.6.2: {} netmask@2.0.2: {} node-domexception@1.0.0: {} node-fetch@2.7.0: dependencies: whatwg-url: 5.0.0 node-releases@2.0.18: {} normalize-path@3.0.0: {} normalize-range@0.1.2: {} npm-run-path@5.3.0: dependencies: path-key: 4.0.0 object-assign@4.1.1: {} object-hash@3.0.0: {} object-inspect@1.13.2: {} object-is@1.1.6: dependencies: call-bind: 1.0.7 define-properties: 1.2.1 object-keys@1.1.1: {} object.assign@4.1.5: dependencies: call-bind: 1.0.7 define-properties: 1.2.1 has-symbols: 1.0.3 object-keys: 1.1.1 object.entries@1.1.8: dependencies: call-bind: 1.0.7 define-properties: 1.2.1 es-object-atoms: 1.0.0 object.fromentries@2.0.8: dependencies: call-bind: 1.0.7 define-properties: 1.2.1 es-abstract: 1.23.3 es-object-atoms: 1.0.0 object.groupby@1.0.3: dependencies: call-bind: 1.0.7 define-properties: 1.2.1 es-abstract: 1.23.3 object.values@1.2.0: dependencies: call-bind: 1.0.7 define-properties: 1.2.1 es-object-atoms: 1.0.0 ollama@0.5.14: dependencies: whatwg-fetch: 3.6.20 once@1.4.0: dependencies: wrappy: 1.0.2 onetime@6.0.0: dependencies: mimic-fn: 4.0.0 onetime@7.0.0: dependencies: mimic-function: 5.0.1 openai@4.82.0(ws@8.18.0)(zod@3.24.1): dependencies: '@types/node': 18.19.74 '@types/node-fetch': 2.6.12 abort-controller: 3.0.0 agentkeepalive: 4.6.0 form-data-encoder: 1.7.2 formdata-node: 4.4.1 node-fetch: 2.7.0 optionaldependencies: ws: 8.18.0 zod: 3.24.1 transitivepeerdependencies: - encoding openai@4.82.0(ws@8.18.0)(zod@3.24.2): dependencies: '@types/node': 18.19.74 '@types/node-fetch': 2.6.12 abort-controller: 3.0.0 agentkeepalive: 4.6.0 form-data-encoder: 1.7.2 formdata-node: 4.4.1 node-fetch: 2.7.0 optionaldependencies: ws: 8.18.0 zod: 3.24.2 transitivepeerdependencies: - encoding optionator@0.9.4: dependencies: deep-is: 0.1.4 fast-levenshtein: 2.0.6 levn: 0.4.1 prelude-ls: 1.2.1 type-check: 0.4.0 word-wrap: 1.2.5 p-finally@1.0.0: {} p-limit@3.1.0: dependencies: yocto-queue: 0.1.0 p-locate@5.0.0: dependencies: p-limit: 3.1.0 p-queue@6.6.2: dependencies: eventemitter3: 4.0.7 p-timeout: 3.2.0 p-retry@4.6.2: dependencies: '@types/retry': 0.12.0 retry: 0.13.1 p-timeout@3.2.0: dependencies: p-finally: 1.0.0 pac-proxy-agent@7.1.0: dependencies: '@tootallnate/quickjs-emscripten': 0.23.0 agent-base: 7.1.3 debug: 4.4.0 get-uri: 6.0.3 http-proxy-agent: 7.0.2 https-proxy-agent: 7.0.6 pac-resolver: 7.0.1 socks-proxy-agent: 8.0.5 transitivepeerdependencies: - supports-color pac-resolver@7.0.1: dependencies: degenerator: 5.0.1 netmask: 2.0.2 package-json-from-dist@1.0.0: {} parent-module@1.0.1: dependencies: callsites: 3.1.0 path-exists@4.0.0: {} path-is-absolute@1.0.1: {} path-key@3.1.1: {} path-key@4.0.0: {} path-parse@1.0.7: {} path-scurry@1.11.1: dependencies: lru-cache: 10.4.3 minipass: 7.1.2 path-scurry@2.0.0: dependencies: lru-cache: 11.0.1 minipass: 7.1.2 path-type@4.0.0: {} pend@1.2.0: {} picocolors@1.1.0: {} picocolors@1.1.1: {} picomatch@2.3.1: {} pidtree@0.6.0: {} pify@2.3.0: {} pirates@4.0.6: {} plimit-lit@1.6.1: dependencies: queue-lit: 1.5.2 possible-typed-array-names@1.0.0: {} postcss-import@15.1.0(postcss@8.4.49): dependencies: postcss: 8.4.49 postcss-value-parser: 4.2.0 read-cache: 1.0.0 resolve: 1.22.8 postcss-js@4.0.1(postcss@8.4.49): dependencies: camelcase-css: 2.0.1 postcss: 8.4.49 postcss-load-config@4.0.2(postcss@8.4.49)(ts-node@10.9.2(@swc/core@1.9.3)(@types/node@22.7.4)(typescript@5.5.4)): dependencies: lilconfig: 3.1.3 yaml: 2.5.1 optionaldependencies: postcss: 8.4.49 ts-node: 10.9.2(@swc/core@1.9.3)(@types/node@22.7.4)(typescript@5.5.4) postcss-load-config@6.0.1(jiti@1.21.6)(postcss@8.4.49)(tsx@4.19.2)(yaml@2.5.1): dependencies: lilconfig: 3.1.2 optionaldependencies: jiti: 1.21.6 postcss: 8.4.49 tsx: 4.19.2 yaml: 2.5.1 postcss-nested@6.2.0(postcss@8.4.49): dependencies: postcss: 8.4.49 postcss-selector-parser: 6.1.2 postcss-selector-parser@6.1.2: dependencies: cssesc: 3.0.0 util-deprecate: 1.0.2 postcss-value-parser@4.2.0: {} postcss@8.4.47: dependencies: nanoid: 3.3.11 picocolors: 1.1.0 source-map-js: 1.2.1 postcss@8.4.49: dependencies: nanoid: 3.3.11 picocolors: 1.1.1 source-map-js: 1.2.1 prelude-ls@1.2.1: {} prettier-linter-helpers@1.0.0: dependencies: fast-diff: 1.3.0 prettier@3.3.3: {} progress@2.0.3: {} prop-types@15.8.1: dependencies: loose-envify: 1.4.0 object-assign: 4.1.1 react-is: 16.13.1 proxy-agent@6.5.0: dependencies: agent-base: 7.1.3 debug: 4.4.0 http-proxy-agent: 7.0.2 https-proxy-agent: 7.0.6 lru-cache: 7.18.3 pac-proxy-agent: 7.1.0 proxy-from-env: 1.1.0 socks-proxy-agent: 8.0.5 transitivepeerdependencies: - supports-color proxy-from-env@1.1.0: {} pump@3.0.2: dependencies: end-of-stream: 1.4.4 once: 1.4.0 punycode@2.3.1: {} puppeteer-core@24.1.1: dependencies: '@puppeteer/browsers': 2.7.0 chromium-bidi: 1.1.0(devtools-protocol@0.0.1380148) debug: 4.4.0 devtools-protocol: 0.0.1380148 typed-query-selector: 2.12.0 ws: 8.18.0 transitivepeerdependencies: - bufferutil - supports-color - utf-8-validate queue-lit@1.5.2: {} queue-microtask@1.2.3: {} queue-tick@1.0.1: {} randombytes@2.1.0: dependencies: safe-buffer: 5.2.1 react-dom@18.3.1(react@18.3.1): dependencies: loose-envify: 1.4.0 react: 18.3.1 scheduler: 0.23.2 react-icons@5.4.0(react@18.3.1): dependencies: react: 18.3.1 react-is@16.13.1: {} react@18.3.1: dependencies: loose-envify: 1.4.0 read-cache@1.0.0: dependencies: pify: 2.3.0 readdirp@3.6.0: dependencies: picomatch: 2.3.1 readdirp@4.0.2: optional: true reflect.getprototypeof@1.0.6: dependencies: call-bind: 1.0.7 define-properties: 1.2.1 es-abstract: 1.23.3 es-errors: 1.3.0 get-intrinsic: 1.2.4 globalthis: 1.0.4 which-builtin-type: 1.1.4 regexp.prototype.flags@1.5.2: dependencies: call-bind: 1.0.7 define-properties: 1.2.1 es-errors: 1.3.0 set-function-name: 2.0.2 require-directory@2.1.1: {} resolve-from@4.0.0: {} resolve-pkg-maps@1.0.0: {} resolve@1.22.8: dependencies: is-core-module: 2.15.1 path-parse: 1.0.7 supports-preserve-symlinks-flag: 1.0.0 resolve@2.0.0-next.5: dependencies: is-core-module: 2.15.1 path-parse: 1.0.7 supports-preserve-symlinks-flag: 1.0.0 restore-cursor@5.1.0: dependencies: onetime: 7.0.0 signal-exit: 4.1.0 retry@0.13.1: {} reusify@1.0.4: {} rfdc@1.4.1: {} rimraf@3.0.2: dependencies: glob: 7.2.3 rimraf@6.0.1: dependencies: glob: 11.0.0 package-json-from-dist: 1.0.0 rollup@4.24.0: dependencies: '@types/estree': 1.0.6 optionaldependencies: '@rollup/rollup-android-arm-eabi': 4.24.0 '@rollup/rollup-android-arm64': 4.24.0 '@rollup/rollup-darwin-arm64': 4.24.0 '@rollup/rollup-darwin-x64': 4.24.0 '@rollup/rollup-linux-arm-gnueabihf': 4.24.0 '@rollup/rollup-linux-arm-musleabihf': 4.24.0 '@rollup/rollup-linux-arm64-gnu': 4.24.0 '@rollup/rollup-linux-arm64-musl': 4.24.0 '@rollup/rollup-linux-powerpc64le-gnu': 4.24.0 '@rollup/rollup-linux-riscv64-gnu': 4.24.0 '@rollup/rollup-linux-s390x-gnu': 4.24.0 '@rollup/rollup-linux-x64-gnu': 4.24.0 '@rollup/rollup-linux-x64-musl': 4.24.0 '@rollup/rollup-win32-arm64-msvc': 4.24.0 '@rollup/rollup-win32-ia32-msvc': 4.24.0 '@rollup/rollup-win32-x64-msvc': 4.24.0 fsevents: 2.3.3 run-parallel@1.2.0: dependencies: queue-microtask: 1.2.3 run-script-os@1.1.6: {} safe-array-concat@1.1.2: dependencies: call-bind: 1.0.7 get-intrinsic: 1.2.4 has-symbols: 1.0.3 isarray: 2.0.5 safe-buffer@5.2.1: {} safe-regex-test@1.0.3: dependencies: call-bind: 1.0.7 es-errors: 1.3.0 is-regex: 1.1.4 sass@1.79.4: dependencies: chokidar: 4.0.1 immutable: 4.3.7 source-map-js: 1.2.1 optional: true scheduler@0.23.2: dependencies: loose-envify: 1.4.0 schema-utils@3.3.0: dependencies: '@types/json-schema': 7.0.15 ajv: 6.12.6 ajv-keywords: 3.5.2(ajv@6.12.6) semver@6.3.1: {} semver@7.6.3: {} serialize-javascript@6.0.2: dependencies: randombytes: 2.1.0 set-function-length@1.2.2: dependencies: define-data-property: 1.1.4 es-errors: 1.3.0 function-bind: 1.1.2 get-intrinsic: 1.2.4 gopd: 1.0.1 has-property-descriptors: 1.0.2 set-function-name@2.0.2: dependencies: define-data-property: 1.1.4 es-errors: 1.3.0 functions-have-names: 1.2.3 has-property-descriptors: 1.0.2 shebang-command@2.0.0: dependencies: shebang-regex: 3.0.0 shebang-regex@3.0.0: {} side-channel@1.0.6: dependencies: call-bind: 1.0.7 es-errors: 1.3.0 get-intrinsic: 1.2.4 object-inspect: 1.13.2 signal-exit@4.1.0: {} simple-wcswidth@1.0.1: {} slash@3.0.0: {} slice-ansi@5.0.0: dependencies: ansi-styles: 6.2.1 is-fullwidth-code-point: 4.0.0 slice-ansi@7.1.0: dependencies: ansi-styles: 6.2.1 is-fullwidth-code-point: 5.0.0 smart-buffer@4.2.0: {} socks-proxy-agent@8.0.5: dependencies: agent-base: 7.1.3 debug: 4.4.0 socks: 2.8.3 transitivepeerdependencies: - supports-color socks@2.8.3: dependencies: ip-address: 9.0.5 smart-buffer: 4.2.0 source-map-js@1.2.1: {} source-map-support@0.5.21: dependencies: buffer-from: 1.1.2 source-map: 0.6.1 source-map@0.6.1: {} source-map@0.7.4: {} sprintf-js@1.1.3: {} stop-iteration-iterator@1.0.0: dependencies: internal-slot: 1.0.7 streamx@2.20.1: dependencies: fast-fifo: 1.3.2 queue-tick: 1.0.1 text-decoder: 1.2.0 optionaldependencies: bare-events: 2.5.0 string-argv@0.3.2: {} string-width@4.2.3: dependencies: emoji-regex: 8.0.0 is-fullwidth-code-point: 3.0.0 strip-ansi: 6.0.1 string-width@5.1.2: dependencies: eastasianwidth: 0.2.0 emoji-regex: 9.2.2 strip-ansi: 7.1.0 string-width@7.2.0: dependencies: emoji-regex: 10.4.0 get-east-asian-width: 1.2.0 strip-ansi: 7.1.0 string.prototype.includes@2.0.0: dependencies: define-properties: 1.2.1 es-abstract: 1.23.3 string.prototype.matchall@4.0.11: dependencies: call-bind: 1.0.7 define-properties: 1.2.1 es-abstract: 1.23.3 es-errors: 1.3.0 es-object-atoms: 1.0.0 get-intrinsic: 1.2.4 gopd: 1.0.1 has-symbols: 1.0.3 internal-slot: 1.0.7 regexp.prototype.flags: 1.5.2 set-function-name: 2.0.2 side-channel: 1.0.6 string.prototype.repeat@1.0.0: dependencies: define-properties: 1.2.1 es-abstract: 1.23.3 string.prototype.trim@1.2.9: dependencies: call-bind: 1.0.7 define-properties: 1.2.1 es-abstract: 1.23.3 es-object-atoms: 1.0.0 string.prototype.trimend@1.0.8: dependencies: call-bind: 1.0.7 define-properties: 1.2.1 es-object-atoms: 1.0.0 string.prototype.trimstart@1.0.8: dependencies: call-bind: 1.0.7 define-properties: 1.2.1 es-object-atoms: 1.0.0 strip-ansi@6.0.1: dependencies: ansi-regex: 5.0.1 strip-ansi@7.1.0: dependencies: ansi-regex: 6.1.0 strip-bom@3.0.0: {} strip-final-newline@3.0.0: {} strip-json-comments@3.1.1: {} strnum@1.0.5: {} sucrase@3.35.0: dependencies: '@jridgewell/gen-mapping': 0.3.5 commander: 4.1.1 glob: 10.4.5 lines-and-columns: 1.2.4 mz: 2.7.0 pirates: 4.0.6 ts-interface-checker: 0.1.13 supports-color@7.2.0: dependencies: has-flag: 4.0.0 supports-color@8.1.1: dependencies: has-flag: 4.0.0 supports-preserve-symlinks-flag@1.0.0: {} synckit@0.10.3: dependencies: '@pkgr/core': 0.2.0 tslib: 2.8.1 tailwind-merge@2.5.2: {} tailwindcss@3.4.17(ts-node@10.9.2(@swc/core@1.9.3)(@types/node@22.7.4)(typescript@5.5.4)): dependencies: '@alloc/quick-lru': 5.2.0 arg: 5.0.2 chokidar: 3.6.0 didyoumean: 1.2.2 dlv: 1.1.3 fast-glob: 3.3.2 glob-parent: 6.0.2 is-glob: 4.0.3 jiti: 1.21.6 lilconfig: 3.1.3 micromatch: 4.0.8 normalize-path: 3.0.0 object-hash: 3.0.0 picocolors: 1.1.1 postcss: 8.4.49 postcss-import: 15.1.0(postcss@8.4.49) postcss-js: 4.0.1(postcss@8.4.49) postcss-load-config: 4.0.2(postcss@8.4.49)(ts-node@10.9.2(@swc/core@1.9.3)(@types/node@22.7.4)(typescript@5.5.4)) postcss-nested: 6.2.0(postcss@8.4.49) postcss-selector-parser: 6.1.2 resolve: 1.22.8 sucrase: 3.35.0 transitivepeerdependencies: - ts-node tapable@2.2.1: {} tar-fs@3.0.6: dependencies: pump: 3.0.2 tar-stream: 3.1.7 optionaldependencies: bare-fs: 2.3.5 bare-path: 2.1.3 tar-stream@3.1.7: dependencies: b4a: 1.6.7 fast-fifo: 1.3.2 streamx: 2.20.1 terser-webpack-plugin@5.3.10(@swc/core@1.9.3)(esbuild@0.25.1)(webpack@5.94.0(@swc/core@1.9.3)(esbuild@0.25.1)): dependencies: '@jridgewell/trace-mapping': 0.3.25 jest-worker: 27.5.1 schema-utils: 3.3.0 serialize-javascript: 6.0.2 terser: 5.34.1 webpack: 5.94.0(@swc/core@1.9.3)(esbuild@0.25.1) optionaldependencies: '@swc/core': 1.9.3 esbuild: 0.25.1 terser@5.34.1: dependencies: '@jridgewell/source-map': 0.3.6 acorn: 8.12.1 commander: 2.20.3 source-map-support: 0.5.21 text-decoder@1.2.0: dependencies: b4a: 1.6.7 text-table@0.2.0: {} thenify-all@1.6.0: dependencies: thenify: 3.3.1 thenify@3.3.1: dependencies: any-promise: 1.3.0 through@2.3.8: {} to-regex-range@5.0.1: dependencies: is-number: 7.0.0 tr46@0.0.3: {} ts-api-utils@1.3.0(typescript@5.5.4): dependencies: typescript: 5.5.4 ts-interface-checker@0.1.13: {} ts-loader@9.5.1(typescript@5.5.4)(webpack@5.94.0(@swc/core@1.9.3)(esbuild@0.25.1)): dependencies: chalk: 4.1.2 enhanced-resolve: 5.17.1 micromatch: 4.0.8 semver: 7.6.3 source-map: 0.7.4 typescript: 5.5.4 webpack: 5.94.0(@swc/core@1.9.3)(esbuild@0.25.1) ts-node@10.9.2(@swc/core@1.9.3)(@types/node@22.7.4)(typescript@5.5.4): dependencies: '@cspotcode/source-map-support': 0.8.1 '@tsconfig/node10': 1.0.11 '@tsconfig/node12': 1.0.11 '@tsconfig/node14': 1.0.3 '@tsconfig/node16': 1.0.4 '@types/node': 22.7.4 acorn: 8.12.1 acorn-walk: 8.3.4 arg: 4.1.3 create-require: 1.1.1 diff: 4.0.2 make-error: 1.3.6 typescript: 5.5.4 v8-compile-cache-lib: 3.0.1 yn: 3.1.1 optionaldependencies: '@swc/core': 1.9.3 tsc-alias@1.8.10: dependencies: chokidar: 3.6.0 commander: 9.5.0 globby: 11.1.0 mylas: 2.1.13 normalize-path: 3.0.0 plimit-lit: 1.6.1 tsconfig-paths@3.15.0: dependencies: '@types/json5': 0.0.29 json5: 1.0.2 minimist: 1.2.8 strip-bom: 3.0.0 tslib@2.7.0: {} tslib@2.8.1: {} tsx@4.19.2: dependencies: esbuild: 0.25.1 get-tsconfig: 4.8.0 optionaldependencies: fsevents: 2.3.3 turbo-darwin-64@2.3.3: optional: true turbo-darwin-arm64@2.3.3: optional: true turbo-linux-64@2.3.3: optional: true turbo-linux-arm64@2.3.3: optional: true turbo-windows-64@2.3.3: optional: true turbo-windows-arm64@2.3.3: optional: true turbo@2.3.3: optionaldependencies: turbo-darwin-64: 2.3.3 turbo-darwin-arm64: 2.3.3 turbo-linux-64: 2.3.3 turbo-linux-arm64: 2.3.3 turbo-windows-64: 2.3.3 turbo-windows-arm64: 2.3.3 type-check@0.4.0: dependencies: prelude-ls: 1.2.1 type-fest@0.20.2: {} typed-array-buffer@1.0.2: dependencies: call-bind: 1.0.7 es-errors: 1.3.0 is-typed-array: 1.1.13 typed-array-byte-length@1.0.1: dependencies: call-bind: 1.0.7 for-each: 0.3.3 gopd: 1.0.1 has-proto: 1.0.3 is-typed-array: 1.1.13 typed-array-byte-offset@1.0.2: dependencies: available-typed-arrays: 1.0.7 call-bind: 1.0.7 for-each: 0.3.3 gopd: 1.0.1 has-proto: 1.0.3 is-typed-array: 1.1.13 typed-array-length@1.0.6: dependencies: call-bind: 1.0.7 for-each: 0.3.3 gopd: 1.0.1 has-proto: 1.0.3 is-typed-array: 1.1.13 possible-typed-array-names: 1.0.0 typed-query-selector@2.12.0: {} typescript@5.5.4: {} unbox-primitive@1.0.2: dependencies: call-bind: 1.0.7 has-bigints: 1.0.2 has-symbols: 1.0.3 which-boxed-primitive: 1.0.2 unbzip2-stream@1.4.3: dependencies: buffer: 5.7.1 through: 2.3.8 undici-types@5.26.5: {} undici-types@6.19.8: {} universalify@2.0.1: {} update-browserslist-db@1.1.1(browserslist@4.24.0): dependencies: browserslist: 4.24.0 escalade: 3.2.0 picocolors: 1.1.0 uri-js@4.4.1: dependencies: punycode: 2.3.1 util-deprecate@1.0.2: {} uuid@10.0.0: {} v8-compile-cache-lib@3.0.1: {} vite@6.0.12(@types/node@22.7.4)(jiti@1.21.6)(sass@1.79.4)(terser@5.34.1)(tsx@4.19.2)(yaml@2.5.1): dependencies: esbuild: 0.25.1 postcss: 8.4.49 rollup: 4.24.0 optionaldependencies: '@types/node': 22.7.4 fsevents: 2.3.3 jiti: 1.21.6 sass: 1.79.4 terser: 5.34.1 tsx: 4.19.2 yaml: 2.5.1 watchpack@2.4.2: dependencies: glob-to-regexp: 0.4.1 graceful-fs: 4.2.11 web-streams-polyfill@4.0.0-beta.3: {} webextension-polyfill@0.12.0: {} webidl-conversions@3.0.1: {} webpack-sources@3.2.3: {} webpack@5.94.0(@swc/core@1.9.3)(esbuild@0.25.1): dependencies: '@types/estree': 1.0.6 '@webassemblyjs/ast': 1.12.1 '@webassemblyjs/wasm-edit': 1.12.1 '@webassemblyjs/wasm-parser': 1.12.1 acorn: 8.12.1 acorn-import-attributes: 1.9.5(acorn@8.12.1) browserslist: 4.24.0 chrome-trace-event: 1.0.4 enhanced-resolve: 5.17.1 es-module-lexer: 1.5.4 eslint-scope: 5.1.1 events: 3.3.0 glob-to-regexp: 0.4.1 graceful-fs: 4.2.11 json-parse-even-better-errors: 2.3.1 loader-runner: 4.3.0 mime-types: 2.1.35 neo-async: 2.6.2 schema-utils: 3.3.0 tapable: 2.2.1 terser-webpack-plugin: 5.3.10(@swc/core@1.9.3)(esbuild@0.25.1)(webpack@5.94.0(@swc/core@1.9.3)(esbuild@0.25.1)) watchpack: 2.4.2 webpack-sources: 3.2.3 transitivepeerdependencies: - '@swc/core' - esbuild - uglify-js whatwg-fetch@3.6.20: {} whatwg-url@5.0.0: dependencies: tr46: 0.0.3 webidl-conversions: 3.0.1 which-boxed-primitive@1.0.2: dependencies: is-bigint: 1.0.4 is-boolean-object: 1.1.2 is-number-object: 1.0.7 is-string: 1.0.7 is-symbol: 1.0.4 which-builtin-type@1.1.4: dependencies: function.prototype.name: 1.1.6 has-tostringtag: 1.0.2 is-async-function: 2.0.0 is-date-object: 1.0.5 is-finalizationregistry: 1.0.2 is-generator-function: 1.0.10 is-regex: 1.1.4 is-weakref: 1.0.2 isarray: 2.0.5 which-boxed-primitive: 1.0.2 which-collection: 1.0.2 which-typed-array: 1.1.15 which-collection@1.0.2: dependencies: is-map: 2.0.3 is-set: 2.0.3 is-weakmap: 2.0.2 is-weakset: 2.0.3 which-typed-array@1.1.15: dependencies: available-typed-arrays: 1.0.7 call-bind: 1.0.7 for-each: 0.3.3 gopd: 1.0.1 has-tostringtag: 1.0.2 which@2.0.2: dependencies: isexe: 2.0.0 word-wrap@1.2.5: {} wrap-ansi@7.0.0: dependencies: ansi-styles: 4.3.0 string-width: 4.2.3 strip-ansi: 6.0.1 wrap-ansi@8.1.0: dependencies: ansi-styles: 6.2.1 string-width: 5.1.2 strip-ansi: 7.1.0 wrap-ansi@9.0.0: dependencies: ansi-styles: 6.2.1 string-width: 7.2.0 strip-ansi: 7.1.0 wrappy@1.0.2: {} ws@8.18.0: {} y18n@5.0.8: {} yaml@2.5.1: {} yargs-parser@21.1.1: {} yargs@17.7.2: dependencies: cliui: 8.0.1 escalade: 3.2.0 get-caller-file: 2.0.5 require-directory: 2.1.1 string-width: 4.2.3 y18n: 5.0.8 yargs-parser: 21.1.1 yauzl@2.10.0: dependencies: buffer-crc32: 0.2.13 fd-slicer: 1.1.0 yn@3.1.1: {} yocto-queue@0.1.0: {} zod-to-json-schema@3.24.4(zod@3.24.1): dependencies: zod: 3.24.1 zod-to-json-schema@3.24.4(zod@3.24.2): dependencies: zod: 3.24.2 zod@3.24.1: {} zod@3.24.2: {} # --- github file: pnpm-workspace.yaml --- packages: - "chrome-extension" - "pages/*" - "packages/*" # --- github file: turbo.json --- { "$schema": "https://turbo.build/schema.json", "ui": "tui", "globalenv": ["__firefox__"], "daemon": false, "tasks": { "ready": { "dependson": ["^ready"], "outputs": ["dist/**", "build/**"] }, "dev": { "dependson": ["ready"], "outputs": ["dist/**", "build/**", "i18n/locales/**"], "cache": false, "persistent": true }, "build": { "dependson": ["^build"], "outputs": ["../../dist/**", "dist/**", "build/**"], "cache": false }, "e2e": { "cache": false }, "type-check": { "cache": false }, "lint": { "cache": false }, "lint:fix": { "cache": false }, "prettier": { "cache": false }, "clean:node_modules": { "dependson": ["^clean:node_modules"], "cache": false }, "clean:turbo": { "dependson": ["^clean:turbo"], "cache": false }, "clean:bundle": { "dependson": ["^clean:bundle"], "cache": false }, "clean": { "dependson": ["^clean"], "cache": false } } }